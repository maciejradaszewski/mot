<?php
use Application\Helper\PrgHelper;
use Dashboard\Controller\UserHomeController;
use DvsaCommon\Date\DateTimeDisplayFormat;
use DvsaMotTest\Controller\RefuseToTestController;
use DvsaMotTest\Controller\VehicleSearchController;
use DvsaMotTest\ViewModel\StartTestConfirmationViewModel;

/**
 * @var StartTestConfirmationViewModel $viewModel
 */
$vehicleDetails = $this->vehicleDetails;

//  --  urls    --
$query = [];
$query['vin'] = $viewModel->getSearchVin();
$query['registration'] = $viewModel->getSearchVrm();

$escUrlSearch = $this->url('vehicle-search', [], ['query' => $query]);

if (!empty($this->urlSearch)) {
    $escUrlSearch = $this->urlSearch;
} elseif ($viewModel->isMotContingency()) {
    $query['contingency'] = 1;
}

$escUrlDemoSearch = $this->url(VehicleSearchController::ROUTE_VEHICLE_SEARCH_TRAINING, [], ['query' => $query]);

$title = $this->title;
$header = $this->header;
if (empty($title)) {
    $title = 'Confirm vehicle for ' . $viewModel->getTestTypeString();
}
if (empty($header)) {
    $header = $title;
}

$expiryDate = null;
$earliestTestDateForPostdatingExpiryDate = null;
$isEarlierThanTestDateLimit = false;

$checkExpiryResults = $this->checkExpiryResults;
if (!empty($checkExpiryResults)) {
    $isPreviousCertificateExists = $checkExpiryResults['previousCertificateExists'];

    if ($isPreviousCertificateExists) {
        $expiryDate = $checkExpiryResults['expiryDate'];

        if ($viewModel->isNormalTest()) {
            $earliestTestDateForPostdatingExpiryDate = $checkExpiryResults['earliestTestDateForPostdatingExpiryDate'];
            $isEarlierThanTestDateLimit = $checkExpiryResults['isEarlierThanTestDateLimit'];
        }
    }
}

$this->layout()->setVariable('pageTitle', $title);
$this->headTitle($title);

$this->placeholder('progressBar')->captureStart();
echo $this->partial(
    'motTestProgress',
    ['currentStep' => 1, 'isMotContingency' => $viewModel->isMotContingency()]
);
$this->placeholder('progressBar')->captureEnd();

echo $this->partial('errorMessages', ['getFromFlash' => true]);
?>

<?php if ($viewModel->isInProgressTestExists()): ?>
    <div class="row">
        <div class="col-md-8">
            <div id="inProgressTestExistsAlert" class="info-alert null-top-margin">
                <p>This vehicle is currently under test.</p>
            </div>
        </div>
    </div>

    <a href="<?php echo $escUrlSearch; ?>">Return to find a vehicle</a>

    <hr class="hr-thin" />
<?php endif; ?>

<form action="<?php echo $viewModel->getConfirmActionUrl() ?>" method="POST" name="StartTestConfirmation" id="StartTestConfirmation">
    <?php
    echo $this->csrfToken();
    echo ($this->prgHelper instanceof PrgHelper ? $this->prgHelper->getHtml() : '');
    ?>
    <input type="hidden" name="startTestConfirm" value="true" />
    <input type="hidden" name="motTestType" value="<?php echo $this->escapeHtmlAttr($viewModel->getMethod()); ?>" />
    <div class="row">
        <div class="col-sm-12" id="vehicleDetails">
            <h2 class="second-header">Vehicle details</h2>

            <?php
            if (!$isPreviousCertificateExists && $viewModel->isNormalTest()): 
            ?>
                <div class="col-md-8">
                    <div id="expiryInfoAlert" class="info-alert null-top-margin">
                        <p>This vehicle is being MOT tested for the first time.</p>
                        <p>The vehicle's "date of first use" anniversary must be no more than a month after today's date.</p>
                        <p>This makes sure that any extension period is passed on to the MOT expiry date.</p>
                    </div>
                </div>
            <?php else : ?>
            <?php
            if ($isEarlierThanTestDateLimit && !$viewModel->isInProgressTestExists()): ?>
                <div class="col-md-8">
                    <div id="expiryInfoAlert" class="info-alert null-top-margin">
                        <?php
                        $postdatingExpiryDate = DateTimeDisplayFormat::textDate(
                            $earliestTestDateForPostdatingExpiryDate
                        );
                        ?>
                        <p>Testing this vehicle today will not preserve the current expiry date.
                            To preserve the date the earliest the vehicle can be tested is
                           <span><?php echo $this->escapeHtml($postdatingExpiryDate); ?></span>.</p>
                    </div>
                </div>
            <?php endif ?>
            <?php
            endif;

            echo $this->partial(
                'confirmationVehicleSummary', [
                    'noRegistration' => $viewModel->isNoRegistration(),
                    'vehicle'        => $vehicleDetails,
                    'expiryDate'     => $expiryDate,
                    'staticData'     => $this->staticData,
                    'doNotShowDropDowns' => $viewModel->isInProgressTestExists() || $viewModel->isTrainingTest(),
                ]
            );
            ?>
        </div>
    </div>

    <?php
    if ($viewModel->isRetest() && !$viewModel->isEligibleForRetest()): ?>
        <div class="row">
            <span class="divider"></span>
            <div class="col-md-6">
                <div  class="status status-danger">
                    <p class="message-exclamation-triangle"> Not qualified for a retest</p>
                </div>
                <?php if (!empty($eligibilityNotices)): ?>
                    <div class="info-notice">
                        <p><strong>The retest option is unavailable due to:</strong>
                        <ul id="unavailableForRetestMessage">
                            <?php foreach ($eligibilityNotices as $notice): ?>
                                <li><?php echo $this->escapeHtml($notice); ?></li>
                            <?php endforeach ?>
                        </ul>
                    </div>
                <?php endif; ?>
            </div>
        </div>
    <?php endif ?>

    <?php if (!$viewModel->isInProgressTestExists()): ?>
        <hr class="hr-thin"/>

        <div class="row">
            <div class="col-sm-6 btn-bar">
                <?php if ($viewModel->isRetest() && !empty($viewModel->getEligibilityNotices())): ?>
                    <a href="<?php echo $this->url(UserHomeController::ROUTE);?>"
                       class="btn btn-link" id="confirm_vehicle_confirmation">Go to homepage</a>
                <?php else : ?>
                    <h4>Start MOT <?php echo $viewModel->getTestTypeString(); ?></h4>
                <?php endif ?>

                <?php if ($viewModel->isNormalTest() || $viewModel->isTrainingTest()): ?>
                    <button type="submit" class="btn btn-primary" id="confirm_vehicle_confirmation">
                        Confirm vehicle and start MOT test
                    </button>
                <?php endif; ?>

                <?php if ($viewModel->isRetest()): ?>
                    <button type="submit" name="retest" value="true" class="btn btn-primary" id="retest_vehicle_confirmation">
                        Confirm vehicle and start retest
                    </button>
                <?php endif; ?>

                <nav class="module-content-navigation">
                    <ul class="content-navigation_secondary">
                        <li>
                            <a href="<?php echo ($viewModel->isTrainingTest())? $escUrlDemoSearch : $escUrlSearch; ?>">
                                Return to find a vehicle
                            </a>
                        </li>
                        <li>
                            <a href="<?php echo $this->url(UserHomeController::ROUTE);?>" id="abort_vehicle_confirmation">
                                Cancel and return home
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>

            <?php if ($viewModel->canRefuseToTest()):  ?>
                <div class="col-sm-6 btn-bar">
                    <h4>Refuse test</h4>
                    <a href="<?php echo $this->url(
                        RefuseToTestController::ROUTE_REFUSE_TO_TEST_REASON,
                        ['testTypeCode' => $viewModel->getMethod()],
                        ['query' => ['no-reg' => $viewModel->isNoRegistration(), 'source' => $viewModel->getSafeSource()]],
                        true
                    ); ?>" id="refuse-to-test">Refuse to <?php echo $viewModel->getTestTypeString(); ?> this vehicle</a> and provide a reason
                </div>
            <?php endif ?>
        </div>
    <?php endif; ?>

</form>
