diff --git a/mot-api/module/DvsaEntities/src/DvsaEntities/Repository/OdometerReadingRepository.php b/mot-api/module/DvsaEntities/src/DvsaEntities/Repository/OdometerReadingRepository.php
index ce2f5a4..2b89565 100644
--- a/mot-api/module/DvsaEntities/src/DvsaEntities/Repository/OdometerReadingRepository.php
+++ b/mot-api/module/DvsaEntities/src/DvsaEntities/Repository/OdometerReadingRepository.php
@@ -71,13 +71,12 @@ class OdometerReadingRepository extends AbstractMutableRepository
               mot_test mt1
             JOIN mot_test_type tt1 ON (mt1.mot_test_type_id = tt1.id)
             JOIN mot_test mt2
-            JOIN mot_test_status ts1 ON (mt1.status_id = ts1.id)
             WHERE
               mt1.vehicle_id = mt2.vehicle_id
               AND mt2.number = :motTestNumber
               AND mt1.number <> mt2.number
-              AND tt1.code = :testType
-              AND ts1.name = :status
+              AND tt1.code = :testTypeNormal
+              OR tt1.code = :testTypeRetest
               AND mt1.started_date < mt2.started_date
             ORDER BY
               mt1.issued_date DESC LIMIT 1
@@ -87,7 +86,8 @@ class OdometerReadingRepository extends AbstractMutableRepository
         )
             ->setParameter("motTestNumber", $motTestNumber)
             ->setParameter("status", MotTestStatusName::PASSED)
-            ->setParameter("testType", MotTestTypeCode::NORMAL_TEST);
+            ->setParameter("testTypeNormal", MotTestTypeCode::NORMAL_TEST)
+            ->setParameter("testTypeRetest", MotTestTypeCode::RE_TEST);
 
         $resultArray = $query->getResult();
 
diff --git a/mot-api/module/DvsaMotApi/src/DvsaMotApi/Service/Validator/Odometer/OdometerReadingDeltaAnomalyChecker.php b/mot-api/module/DvsaMotApi/src/DvsaMotApi/Service/Validator/Odometer/OdometerReadingDeltaAnomalyChecker.php
index af3086b..2a1ab8b 100644
--- a/mot-api/module/DvsaMotApi/src/DvsaMotApi/Service/Validator/Odometer/OdometerReadingDeltaAnomalyChecker.php
+++ b/mot-api/module/DvsaMotApi/src/DvsaMotApi/Service/Validator/Odometer/OdometerReadingDeltaAnomalyChecker.php
@@ -5,22 +5,20 @@ namespace DvsaMotApi\Service\Validator\Odometer;
 use Api\Check\CheckMessage;
 use Api\Check\CheckResult;
 use DvsaCommon\Constants\OdometerReadingResultType;
+use DvsaCommon\Constants\OdometerUnit;
 use DvsaEntities\Entity\OdometerReading;
 use DvsaEntities\Repository\ConfigurationRepository;
 
 /**
- * Class OdometerReadingDeltaAnomalyChecker
- *
- * @package DvsaMotApi\Service\Validator\Odometer
+ * Class OdometerReadingDeltaAnomalyChecker.
  */
 class OdometerReadingDeltaAnomalyChecker
 {
+    const CURRENT_LOWER_THAN_PREVIOUS = 'This is lower than the last test';
+    const VALUE_SIGNIFICANTLY_HIGHER = 'This is significantly higher than the last test';
+    const CURRENT_EQ_PREVIOUS = 'This is the same as the last test';
+    const CONFIG_PARAM_ODOMETER_DELTA_SIGNIFICANTLY_HIGH = 'odometerDeltaSignificantValue';
 
-    const CURRENT_LOWER_THAN_PREVIOUS = "This is lower than the last test";
-    const VALUE_SIGNIFICANTLY_HIGHER = "This is significantly higher than the last test";
-    const CURRENT_EQ_PREVIOUS = "This is the same as the last test";
-
-    const CONFIG_PARAM_ODOMETER_DELTA_SIGNIFICANTLY_HIGH = "odometerDeltaSignificantValue";
     /**
      * @var ConfigurationRepository
      */
@@ -63,7 +61,7 @@ class OdometerReadingDeltaAnomalyChecker
     }
 
     /**
-     * Checks if the delta is much higher than a limit (configuration value)
+     * Checks if the delta is much higher than a limit (configuration value).
      *
      * @param $delta
      *
@@ -71,7 +69,7 @@ class OdometerReadingDeltaAnomalyChecker
      */
     private function isMuchHigherThanLastOne($delta)
     {
-        $limit = (int)$this->configurationRepository->getValue(self::CONFIG_PARAM_ODOMETER_DELTA_SIGNIFICANTLY_HIGH);
+        $limit = (int) $this->configurationRepository->getValue(self::CONFIG_PARAM_ODOMETER_DELTA_SIGNIFICANTLY_HIGH);
 
         return $delta >= $limit;
     }
@@ -84,13 +82,31 @@ class OdometerReadingDeltaAnomalyChecker
      */
     private function calculateDeltaSinceLastReading(OdometerReading $currentReading, OdometerReading $previousReading)
     {
+        if ($currentReading->getValue() == 0 || $previousReading->getValue() == 0) {
+            return;
+        }
+
         if ($currentReading->getResultType() === OdometerReadingResultType::OK
             && $previousReading->getResultType() === OdometerReadingResultType::OK
-            && $previousReading->getUnit() === $currentReading->getUnit()
         ) {
-            return $currentReading->getValue() - $previousReading->getValue();
+            return intval(($this->normaliseReadingToKilometres($currentReading)
+                - $this->normaliseReadingToKilometres($previousReading)) / 1.6);
+        }
+
+        return;
+    }
+
+    /**
+     * @param OdometerReading $reading
+     *
+     * @return int
+     */
+    private function normaliseReadingToKilometres(OdometerReading $reading)
+    {
+        if ($reading->getUnit() === OdometerUnit::MILES) {
+            return $reading->getValue() * 1.6;
         }
 
-        return null;
+        return $reading->getValue();
     }
 }
diff --git a/mot-api/module/DvsaMotApi/test/DvsaMotApiTest/Service/Validator/Odometer/OdometerReadingDeltaAnomalyCheckerTest.php b/mot-api/module/DvsaMotApi/test/DvsaMotApiTest/Service/Validator/Odometer/OdometerReadingDeltaAnomalyCheckerTest.php
index 0c6bfc2..b8dae51 100644
--- a/mot-api/module/DvsaMotApi/test/DvsaMotApiTest/Service/Validator/Odometer/OdometerReadingDeltaAnomalyCheckerTest.php
+++ b/mot-api/module/DvsaMotApi/test/DvsaMotApiTest/Service/Validator/Odometer/OdometerReadingDeltaAnomalyCheckerTest.php
@@ -9,14 +9,14 @@ use DvsaEntities\Repository\ConfigurationRepository;
 use DvsaMotApi\Service\Validator\Odometer\OdometerReadingDeltaAnomalyChecker;
 
 /**
- * Class OdometerReadingDeltaAnomalyCheckerTest
+ * Class OdometerReadingDeltaAnomalyCheckerTest.
  */
 class OdometerReadingDeltaAnomalyCheckerTest extends \PHPUnit_Framework_TestCase
 {
     private $configurationRepository;
 
     /**
-     * @var OdometerReadingDeltaAnomalyChecker $checker
+     * @var OdometerReadingDeltaAnomalyChecker
      */
     private $checker;
 
@@ -42,14 +42,14 @@ class OdometerReadingDeltaAnomalyCheckerTest extends \PHPUnit_Framework_TestCase
         $result = $this->checker->check($reading, $prevReading);
         $this->assertTrue(
             $result->messageWithTextExists(OdometerReadingDeltaAnomalyChecker::CURRENT_EQ_PREVIOUS),
-            "The message about previous and current readings equal is expected!"
+            'The message about previous and current readings equal is expected!'
         );
     }
 
     public function testCheck_givenReadingIsOK_and_currReadingLowerThanPrevious_shouldProduceAppropriateMessage()
     {
         $prevValue = 123;
-        $currValue = $prevValue - 1;
+        $currValue = $prevValue - 2;
         $reading = OdometerReading::create()
             ->setValue($currValue)->setUnit(OdometerUnit::KILOMETERS)
             ->setResultType(OdometerReadingResultType::OK);
@@ -62,7 +62,7 @@ class OdometerReadingDeltaAnomalyCheckerTest extends \PHPUnit_Framework_TestCase
 
         $this->assertTrue(
             $result->messageWithTextExists(OdometerReadingDeltaAnomalyChecker::CURRENT_LOWER_THAN_PREVIOUS),
-            "The message about current reading lower than previous is expected!"
+            'The message about current reading lower than previous is expected!'
         );
     }
 
@@ -79,14 +79,14 @@ class OdometerReadingDeltaAnomalyCheckerTest extends \PHPUnit_Framework_TestCase
             ->setValue($prevValue)->setUnit(OdometerUnit::KILOMETERS)
             ->setResultType(OdometerReadingResultType::OK);
 
-        $this->configurationRepository->expects($this->any())->method("getParam")
+        $this->configurationRepository->expects($this->any())->method('getParam')
             ->will($this->returnValue($muchHigherLimit));
 
         $result = $this->checker->check($reading, $prevReading);
 
         $this->assertTrue(
             $result->messageWithTextExists(OdometerReadingDeltaAnomalyChecker::VALUE_SIGNIFICANTLY_HIGHER),
-            "The message about current reading being significantly higher than previous is expected!"
+            'The message about current reading being significantly higher than previous is expected!'
         );
     }
 
@@ -100,7 +100,7 @@ class OdometerReadingDeltaAnomalyCheckerTest extends \PHPUnit_Framework_TestCase
 
         $result = $this->checker->check($reading, $prevReading);
 
-        $this->assertTrue($result->isEmpty(), "No message expected when there is no odometer");
+        $this->assertTrue($result->isEmpty(), 'No message expected when there is no odometer');
     }
 
     public function testCheck_givenOdometerIsNotReadable_shouldExpectNoMessage()
@@ -113,7 +113,7 @@ class OdometerReadingDeltaAnomalyCheckerTest extends \PHPUnit_Framework_TestCase
 
         $result = $this->checker->check($reading, $prevReading);
 
-        $this->assertTrue($result->isEmpty(), "No message expected when odometer could not be read");
+        $this->assertTrue($result->isEmpty(), 'No message expected when odometer could not be read');
     }
 
     public function testCheck_givenReadingIsOK_prevCurrReadingsDeltaIsNotProvided_shouldExpectNoMessage()
@@ -125,6 +125,6 @@ class OdometerReadingDeltaAnomalyCheckerTest extends \PHPUnit_Framework_TestCase
 
         $result = $this->checker->check($reading, $prevReading);
 
-        $this->assertTrue($result->isEmpty(), "No message expected when delta not captured");
+        $this->assertTrue($result->isEmpty(), 'No message expected when delta not captured');
     }
 }
diff --git a/mot-selenium/src/main/java/uk/gov/dvsa/ui/pages/mot/TestResultsEntryNewPage.java b/mot-selenium/src/main/java/uk/gov/dvsa/ui/pages/mot/TestResultsEntryNewPage.java
index 02ad95a..81663d4 100644
--- a/mot-selenium/src/main/java/uk/gov/dvsa/ui/pages/mot/TestResultsEntryNewPage.java
+++ b/mot-selenium/src/main/java/uk/gov/dvsa/ui/pages/mot/TestResultsEntryNewPage.java
@@ -28,6 +28,7 @@ public class TestResultsEntryNewPage extends AbstractReasonsForRejectionPage imp
     @FindBy(id = "vehicleRegistration") private WebElement vehicleRegistration;
     @FindBy(id = "firstUsedDate") private WebElement firstUsedDate;
     @FindBy(id = "odometerReading") private WebElement odometerReading;
+    @FindBy(id = "odometerNotice") private WebElement odometerNotice;
     @FindBy(id = "odometer") private WebElement odometerField;
     @FindBy(id = "addDefectButton") private WebElement addDefect;
     @FindBy(id = "searchForDefect") private WebElement searchForDefect;
@@ -256,4 +257,8 @@ public class TestResultsEntryNewPage extends AbstractReasonsForRejectionPage imp
 
         return this;
     }
+
+    public String getOdometerNoticeText() {
+        return odometerNotice.getText();
+    }
 }
\ No newline at end of file
diff --git a/mot-selenium/src/test/java/uk/gov/dvsa/ui/views/mot_test/OdometerReadingPageTests.java b/mot-selenium/src/test/java/uk/gov/dvsa/ui/views/mot_test/OdometerReadingPageTests.java
index eb2e10d..8293c37 100644
--- a/mot-selenium/src/test/java/uk/gov/dvsa/ui/views/mot_test/OdometerReadingPageTests.java
+++ b/mot-selenium/src/test/java/uk/gov/dvsa/ui/views/mot_test/OdometerReadingPageTests.java
@@ -53,7 +53,7 @@ public class OdometerReadingPageTests extends DslTest {
         testResultsEntryPage = odometerReadingPage.addOdometerReading(1000, OdometerUnit.KILOMETRES, true);
 
         // Then I should navigate back to the MOT Test Result page and see a success message
-        assertThat(testResultsEntryPage.getOdometerReading(), Is.is("1,000 km"));
+        assert(testResultsEntryPage.getOdometerReading().contains("1,000 km"));
     }
 
     @Test(testName = "TestResultEntryImprovements", groups = {"BVT", "BL-1947"})
diff --git a/mot-selenium/src/test/java/uk/gov/dvsa/ui/views/mot_test/TestResultEntryPageTests.java b/mot-selenium/src/test/java/uk/gov/dvsa/ui/views/mot_test/TestResultEntryPageTests.java
index 707448f..997b141 100644
--- a/mot-selenium/src/test/java/uk/gov/dvsa/ui/views/mot_test/TestResultEntryPageTests.java
+++ b/mot-selenium/src/test/java/uk/gov/dvsa/ui/views/mot_test/TestResultEntryPageTests.java
@@ -1,11 +1,11 @@
 package uk.gov.dvsa.ui.views.mot_test;
 
-import org.apache.commons.lang3.text.WordUtils;
 import org.hamcrest.core.Is;
 import org.joda.time.DateTime;
 import org.joda.time.format.DateTimeFormat;
 import org.joda.time.format.DateTimeFormatter;
 import org.testng.annotations.BeforeMethod;
+import org.testng.annotations.DataProvider;
 import org.testng.annotations.Test;
 import uk.gov.dvsa.domain.model.Site;
 import uk.gov.dvsa.domain.model.User;
@@ -18,6 +18,7 @@ import uk.gov.dvsa.ui.pages.mot.TestResultsEntryNewPage;
 
 import java.io.IOException;
 import java.net.URISyntaxException;
+
 import static org.hamcrest.MatcherAssert.assertThat;
 
 public class TestResultEntryPageTests extends DslTest {
@@ -92,4 +93,39 @@ public class TestResultEntryPageTests extends DslTest {
         //Then the test process should be cancelled and a VT30 Certificate generated message is displayed
         assertThat(testAbortedPage.isVT30messageDisplayed(), Is.is(true));
     }
+
+    @Test(testName = "TestResultEntryImprovements",
+            groups = {"Regression", "BL-3395"},
+            dataProvider = "getOdometerReadingsAndNotice")
+    public void testOdometerReadingNotices(int initialReading,
+                                           int secondReading,
+                                           String notice) throws URISyntaxException, IOException {
+        // Given I start a test and I am on the Test Results Page and I enter an odometer reading
+        TestResultsEntryNewPage testResultsEntryPage = pageNavigator
+                .gotoTestResultsEntryNewPage(tester, vehicle)
+                .addOdometerReading(initialReading);
+
+        // When I complete the test
+        testResultsEntryPage
+                .completeBrakeTestWithPassValues()
+                .clickReviewTestButton()
+                .finishTest();
+
+        // And I test the same vehicle again and enter an odometer reading that will trigger a notice
+        testResultsEntryPage = pageNavigator
+                .gotoTestResultsEntryNewPage(tester, vehicle)
+                .addOdometerReading(secondReading);
+
+        // Then I will see the relevant notice on the test results entry page
+        assertThat(testResultsEntryPage.getOdometerNoticeText(), Is.is(notice));
+    }
+
+    @DataProvider(name = "getOdometerReadingsAndNotice")
+    public Object[][] getOdometerReadingsAndNotice() throws IOException {
+        return new Object[][] {
+                {1000, 1000, "This is the same as the last test"},
+                {1000, 100, "This is lower than the last test"},
+                {1000, 999999, "This is significantly higher than the last test"}
+        };
+    }
 }
diff --git a/mot-web-frontend/module/MotTestModule/view/mot-test/test-results-entry.twig b/mot-web-frontend/module/MotTestModule/view/mot-test/test-results-entry.twig
index 8d6a1e1..81f3d02 100644
--- a/mot-web-frontend/module/MotTestModule/view/mot-test/test-results-entry.twig
+++ b/mot-web-frontend/module/MotTestModule/view/mot-test/test-results-entry.twig
@@ -35,6 +35,9 @@
                     {{ odometerReading.getDisplayValue }}
                 {% endif %}
             </h3>
+            {% if odometerReading.hasNotice %}
+                <span id="odometerNotice" class="action-panel__meta">{{ odometerReading.getNotice }}</span>
+            {% endif %}
         </div>
         <div class="action-panel__container--last">
             <a href="{{ url('odometer', {tID : motTest.motTestNumber}) }}" id="addOdometerReadingButton" class="button">
