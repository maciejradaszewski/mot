<?php
return [
    //global.php
    'dvsa_authentication' => [
        'openAM'    => [
            /*
             * The adapter used to talk to the OpenAM REST API.
             *
             * For SSL Connections to OpenAM we need to use Curl: 'Zend\Http\Client\Adapter\Curl'.
             */
            'adapter' => 'Zend\Http\Client\Adapter\Socket',
            /*
             * Username of the OpenAM admin account.
             */
            'admin_login' => 'amadmin',
            /*
             * Password of the OpenAM admin account.
             */
            'admin_password' => 'cangetinam',
            /*
             * Identity attribute name under which username is stored.
             */
            'identity_attribute_username' => 'uid',
            /*
             * Identity attribute name under which OpenAM entryuuid is stored.
             */
            'identity_attribute_uuid' => 'entryuuid',
            /*
             * Realm that will be used when adding new accounts.
             */
            'realm' => 'mot',
            /*
             * Name of the header/token that is used when calling OpenAM.
             */
            'token_field' => 'iPlanetDirectoryPro',
            /*
             * Base URL of the OpenAM REST API.
             */
            'url' => 'http://openam.mot.gov.uk:8080/secure/',
        ],
        'whitelist' => [
            'PersonApi\Controller\PersonEmailController',
            'DvsaMotApi\Controller\Session',
            'AccountApi\Factory\Controller\ValidateUsernameControllerFactory',
            'AccountApi\Factory\Controller\PasswordResetControllerFactory',
            'AccountApi\Factory\Controller\SecurityQuestionControllerFactory',
            'AccountApi\Factory\Controller\PasswordChangeControllerFactory',
        ]
    ],
    'security' => [
        'obfuscate' => [
            'key'     => 'acjdajsd92md09282822',
            'entries' => [
                'vehicleId' => true,
            ],
        ],
    ],

    // HTMLPurifier
    'soflomo_purifier' => [
        'config'          => [
            'Cache.SerializerPath'  => sys_get_temp_dir(),
        ],
    ],
    // The following settings are used by the forgotten password reset functionality.
    // The ExpireTime is TO CHANGE In both FrontEnd And API
    'password_reset' => [
        'secret'      => 'secretdeoufmilediou',
        'hash_method' => 'sha256',
        'expireTime'  => 5400,
    ],

    // Helpdesk name and contact details (MUST BE CHANGE in both FrontEnd and Api)
    'helpdesk' => [
        'name'        => 'DVSA Helpdesk',
        'phoneNumber' => '0330 123 5654',
        'openingHrs'  => '8:30am to 5:30pm',
        'openingHrsWeekdays' => 'Monday to Friday, 8:00am to 8:00pm',
        'openingHrsSaturday' => 'Saturday, 8:00am to 2:00pm',
        'openingHrsSunday' => 'Sunday, closed'
    ],

    //features.local.php
    'feature_toggle' => [
        /*
         * Example feature is disabled by default. Enable it at your own risk.
         */
        'example.feature.toggle' => false,
    ],

    //production.php
    // db credentials
    'db' => [
        'username' => 'motdbuser',
        'password' => 'password',
    ],
    // payment service details
    // payment service details
    'cpms_api' => array(
        'rest_client' => array(
            'options' => array(
                'domain' => 'http://payment-service.pspv-ap01.ps.npm',
            ),
        ),
    ),
    'DvsaApplicationLogger' => [
        // will add the $logger object before the current PHP error handler
        //'registerErrorHandler' => true, // errors logged to your writers
        'registerExceptionHandler' => true, // exceptions logged to your writers
        // multiple zend writer output & zend priority filters
        'writers' => [
            'api-flat-file' => [
                'adapter' => '\Zend\Log\Writer\Stream',
                'options' => [
                    'output' => getenv('LOG_PATH') ?: '/var/log/dvsa/mot-api.log', // path to file
                ],
                // options: EMERG, ALERT, CRIT, ERR, WARN, NOTICE, INFO, DEBUG
                'filter' => \Zend\Log\Logger::ERR,
                'enabled' => true
            ]
        ]
    ],
    // Log level to filter log messages, see Zend\Log\Logger, e.g. 7 for DEBUG
    'logLevel' => 4, // DEBUG=7, WARN=4
    'logJson' => false,
    'pdf' => [
        'invalidWatermark'     => true,
        'invalidWatermarkText' => 'NOT VALID',
    ],
    'mailer' => [
        /**
         * TESTING: Inhibit email sending when relevant e.g. for testing.
         */
        'sendingAllowed' => true,

        /**
         * Human friendly name of the sender i.e. 'MOT Service'
         */
        'senderName'   => '',

        /**
         * Development mode: If this field is present OR has a non-empty value
         * it will always override the true recipient email address.
         */
        // 'recipient'   => 'dummy@example.com',

        /**
         * API need to know what is the url of the app and whether we use HTTP and HTTPS!
         */
        'mot-web-frontend-url'   => 'http://mot-web-frontend.mot.gov.uk',

        /**
         * This is the standard DVSA Helpdesk telephone number to be used in all emails we send.
         */
        'contactNumber' => '01792 454397'
    ],

    'cache' => [
        'instance' => 'doctrine.cache.memcached',
        'memcached' => [
            'servers' => [
                [
                    'host' => 'localhost',
                    'port' => 11211,
                ],
            ],
        ],
        'rbac_repository' => [
            'enabled' => true,
            'options' => [
                'ttl' => [
                    'authorization_details' => 30
                ],
            ],
        ],
        'open_am_client' => [
            'enabled' => true,
            'ttl'   => 15,
        ],
        'identity_factory' => [
            'enabled' => true,
            'options' => [
                'ttl' => 300,
            ],
        ],
    ],

    'site_assessment' => [
        'green' => ['start' => 0, 'end' => 324.10],
        'amber' => ['start' => 324.11, 'end' => 459.20],
        'red' => ['start' => 459.21, 'end' => 999.99],
    ],
    //how many days before password expires notifications are going to be sent
    'password_expiry_notification_days' => [7, 3, 2, 1],
];
