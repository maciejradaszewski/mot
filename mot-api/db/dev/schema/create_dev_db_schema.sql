-- MySQL dump 10.13  Distrib 5.6.10, for Linux (x86_64)
--
-- Host: mysql    Database: mot2
-- ------------------------------------------------------
-- Server version   5.6.10

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

DROP DATABASE IF EXISTS `mot2`;
DROP DATABASE IF EXISTS `mot_refactor`;
DROP DATABASE IF EXISTS `ddr_util`;
DROP DATABASE IF EXISTS `ut`;
DROP DATABASE IF EXISTS `ut_mot2`;
DROP DATABASE IF EXISTS `ut_ddr_util`;

--
-- Current Database: `mot2`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `mot2` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `mot2`;

DELIMITER ;;
CREATE FUNCTION `mot2`.`is_mot_trigger_disabled`() RETURNS BOOLEAN
    NO SQL
    SQL SECURITY INVOKER
BEGIN
    /**
    * Check @is_mot_trigger_disabled to see if after-update history triggers should be enabled. If the session variable
    * is not set then it is set to FALSE, i.e. triggers are enabled (not disabled).
    *
    * return    current session held trigger disabler @is_mot_trigger_disabled
    *
    * see       `mot2`.`set_mot_trigger_disabled`()
    */
    DECLARE c_module VARCHAR(64) DEFAULT 'is_mot_trigger_disabled';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id$';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(@is_mot_trigger_disabled, c_null)));
        RESIGNAL;
    END;

    IF (@is_mot_trigger_disabled IS NULL)
    THEN
        CALL `mot2`.`set_mot_trigger_disabled`(FALSE); -- this call will log a 'warn' message
    END IF;

    RETURN @is_mot_trigger_disabled;
END;;
DELIMITER ;

--
-- Table structure for table `BATCH_JOB_EXECUTION`
--

DROP TABLE IF EXISTS `BATCH_JOB_EXECUTION`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `BATCH_JOB_EXECUTION` (
  `JOB_EXECUTION_ID` bigint(20) NOT NULL,
  `VERSION` bigint(20) DEFAULT NULL,
  `JOB_INSTANCE_ID` bigint(20) NOT NULL,
  `CREATE_TIME` datetime NOT NULL,
  `START_TIME` datetime DEFAULT NULL,
  `END_TIME` datetime DEFAULT NULL,
  `STATUS` varchar(10) DEFAULT NULL,
  `EXIT_CODE` varchar(2500) DEFAULT NULL,
  `EXIT_MESSAGE` varchar(2500) DEFAULT NULL,
  `LAST_UPDATED` datetime DEFAULT NULL,
  `JOB_CONFIGURATION_LOCATION` varchar(2500) DEFAULT NULL,
  PRIMARY KEY (`JOB_EXECUTION_ID`),
  KEY `JOB_INST_EXEC_FK` (`JOB_INSTANCE_ID`),
  CONSTRAINT `JOB_INST_EXEC_FK` FOREIGN KEY (`JOB_INSTANCE_ID`) REFERENCES `BATCH_JOB_INSTANCE` (`JOB_INSTANCE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `BATCH_JOB_EXECUTION_CONTEXT`
--

DROP TABLE IF EXISTS `BATCH_JOB_EXECUTION_CONTEXT`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `BATCH_JOB_EXECUTION_CONTEXT` (
  `JOB_EXECUTION_ID` bigint(20) NOT NULL,
  `SHORT_CONTEXT` varchar(2500) NOT NULL,
  `SERIALIZED_CONTEXT` text,
  PRIMARY KEY (`JOB_EXECUTION_ID`),
  CONSTRAINT `JOB_EXEC_CTX_FK` FOREIGN KEY (`JOB_EXECUTION_ID`) REFERENCES `BATCH_JOB_EXECUTION` (`JOB_EXECUTION_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `BATCH_JOB_EXECUTION_PARAMS`
--

DROP TABLE IF EXISTS `BATCH_JOB_EXECUTION_PARAMS`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `BATCH_JOB_EXECUTION_PARAMS` (
  `JOB_EXECUTION_ID` bigint(20) NOT NULL,
  `TYPE_CD` varchar(6) NOT NULL,
  `KEY_NAME` varchar(100) NOT NULL,
  `STRING_VAL` varchar(250) DEFAULT NULL,
  `DATE_VAL` datetime DEFAULT NULL,
  `LONG_VAL` bigint(20) DEFAULT NULL,
  `DOUBLE_VAL` double DEFAULT NULL,
  `IDENTIFYING` char(1) NOT NULL,
  KEY `JOB_EXEC_PARAMS_FK` (`JOB_EXECUTION_ID`),
  CONSTRAINT `JOB_EXEC_PARAMS_FK` FOREIGN KEY (`JOB_EXECUTION_ID`) REFERENCES `BATCH_JOB_EXECUTION` (`JOB_EXECUTION_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `BATCH_JOB_EXECUTION_SEQ`
--

DROP TABLE IF EXISTS `BATCH_JOB_EXECUTION_SEQ`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `BATCH_JOB_EXECUTION_SEQ` (
  `ID` bigint(20) NOT NULL,
  `UNIQUE_KEY` char(1) NOT NULL,
  UNIQUE KEY `UNIQUE_KEY_UN` (`UNIQUE_KEY`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `BATCH_JOB_INSTANCE`
--

DROP TABLE IF EXISTS `BATCH_JOB_INSTANCE`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `BATCH_JOB_INSTANCE` (
  `JOB_INSTANCE_ID` bigint(20) NOT NULL,
  `VERSION` bigint(20) DEFAULT NULL,
  `JOB_NAME` varchar(100) NOT NULL,
  `JOB_KEY` varchar(32) NOT NULL,
  PRIMARY KEY (`JOB_INSTANCE_ID`),
  UNIQUE KEY `JOB_INST_UN` (`JOB_NAME`,`JOB_KEY`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `BATCH_JOB_SEQ`
--

DROP TABLE IF EXISTS `BATCH_JOB_SEQ`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `BATCH_JOB_SEQ` (
  `ID` bigint(20) NOT NULL,
  `UNIQUE_KEY` char(1) NOT NULL,
  UNIQUE KEY `UNIQUE_KEY_UN` (`UNIQUE_KEY`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `BATCH_STEP_EXECUTION`
--

DROP TABLE IF EXISTS `BATCH_STEP_EXECUTION`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `BATCH_STEP_EXECUTION` (
  `STEP_EXECUTION_ID` bigint(20) NOT NULL,
  `VERSION` bigint(20) NOT NULL,
  `STEP_NAME` varchar(100) NOT NULL,
  `JOB_EXECUTION_ID` bigint(20) NOT NULL,
  `START_TIME` datetime NOT NULL,
  `END_TIME` datetime DEFAULT NULL,
  `STATUS` varchar(10) DEFAULT NULL,
  `COMMIT_COUNT` bigint(20) DEFAULT NULL,
  `READ_COUNT` bigint(20) DEFAULT NULL,
  `FILTER_COUNT` bigint(20) DEFAULT NULL,
  `WRITE_COUNT` bigint(20) DEFAULT NULL,
  `READ_SKIP_COUNT` bigint(20) DEFAULT NULL,
  `WRITE_SKIP_COUNT` bigint(20) DEFAULT NULL,
  `PROCESS_SKIP_COUNT` bigint(20) DEFAULT NULL,
  `ROLLBACK_COUNT` bigint(20) DEFAULT NULL,
  `EXIT_CODE` varchar(2500) DEFAULT NULL,
  `EXIT_MESSAGE` varchar(2500) DEFAULT NULL,
  `LAST_UPDATED` datetime DEFAULT NULL,
  PRIMARY KEY (`STEP_EXECUTION_ID`),
  KEY `JOB_EXEC_STEP_FK` (`JOB_EXECUTION_ID`),
  CONSTRAINT `JOB_EXEC_STEP_FK` FOREIGN KEY (`JOB_EXECUTION_ID`) REFERENCES `BATCH_JOB_EXECUTION` (`JOB_EXECUTION_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `BATCH_STEP_EXECUTION_CONTEXT`
--

DROP TABLE IF EXISTS `BATCH_STEP_EXECUTION_CONTEXT`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `BATCH_STEP_EXECUTION_CONTEXT` (
  `STEP_EXECUTION_ID` bigint(20) NOT NULL,
  `SHORT_CONTEXT` varchar(2500) NOT NULL,
  `SERIALIZED_CONTEXT` text,
  PRIMARY KEY (`STEP_EXECUTION_ID`),
  CONSTRAINT `STEP_EXEC_CTX_FK` FOREIGN KEY (`STEP_EXECUTION_ID`) REFERENCES `BATCH_STEP_EXECUTION` (`STEP_EXECUTION_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `BATCH_STEP_EXECUTION_SEQ`
--

DROP TABLE IF EXISTS `BATCH_STEP_EXECUTION_SEQ`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `BATCH_STEP_EXECUTION_SEQ` (
  `ID` bigint(20) NOT NULL,
  `UNIQUE_KEY` char(1) NOT NULL,
  UNIQUE KEY `UNIQUE_KEY_UN` (`UNIQUE_KEY`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `address`
--

DROP TABLE IF EXISTS `address`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `address` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `address_line_1` varchar(50) DEFAULT NULL COMMENT 'SAON (secondary addressable object name) i.e. Flat or Unit NumberLegacy data my composite with PAON',
  `address_line_2` varchar(50) DEFAULT NULL COMMENT 'PAON (primary addressable object name) i.e. House name or number',
  `address_line_3` varchar(50) DEFAULT NULL,
  `address_line_4` varchar(50) DEFAULT NULL,
  `postcode` varchar(10) DEFAULT NULL,
  `town` varchar(50) DEFAULT NULL,
  `country` varchar(50) DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  FULLTEXT KEY `ft_contact_town_postcode` (`town`,`postcode`)
) ENGINE=InnoDB AUTO_INCREMENT=1000030 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_address_bi`
BEFORE INSERT ON `mot2`.`address`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_address_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_address_bu`
BEFORE UPDATE ON `mot2`.`address`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_address_bu Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_address_au`
AFTER UPDATE ON `mot2`.`address`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_address_au Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`address_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`address_line_1`
        ,`address_line_2`
        ,`address_line_3`
        ,`address_line_4`
        ,`postcode`
        ,`town`
        ,`country`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`address_line_1`
        ,OLD.`address_line_2`
        ,OLD.`address_line_3`
        ,OLD.`address_line_4`
        ,OLD.`postcode`
        ,OLD.`town`
        ,OLD.`country`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_address_bd`
BEFORE DELETE ON `mot2`.`address`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_address_bd Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`address_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`address_line_1`
        ,`address_line_2`
        ,`address_line_3`
        ,`address_line_4`
        ,`postcode`
        ,`town`
        ,`country`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`address_line_1`
        ,OLD.`address_line_2`
        ,OLD.`address_line_3`
        ,OLD.`address_line_4`
        ,OLD.`postcode`
        ,OLD.`town`
        ,OLD.`country`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `address_hist`
--

DROP TABLE IF EXISTS `address_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `address_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `address_line_1` varchar(50) DEFAULT NULL,
  `address_line_2` varchar(50) DEFAULT NULL,
  `address_line_3` varchar(50) DEFAULT NULL,
  `address_line_4` varchar(50) DEFAULT NULL,
  `postcode` varchar(10) DEFAULT NULL,
  `town` varchar(50) DEFAULT NULL,
  `country` varchar(50) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_address_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:07';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `app_auth_site_evidence_map`
--

DROP TABLE IF EXISTS `app_auth_site_evidence_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `app_auth_site_evidence_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `app_for_auth_testing_mot_at_site_id` int(10) unsigned NOT NULL,
  `evidence_id` int(10) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_map_application_authorisation_site_evidence_1` (`app_for_auth_testing_mot_at_site_id`),
  KEY `fk_map_application_authorisation_site_evidence_2` (`evidence_id`),
  CONSTRAINT `fk_map_application_authorisation_site_evidence_1` FOREIGN KEY (`app_for_auth_testing_mot_at_site_id`) REFERENCES `app_for_auth_testing_mot_at_site` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_map_application_authorisation_site_evidence_2` FOREIGN KEY (`evidence_id`) REFERENCES `evidence` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_app_auth_site_evidence_map_bi`
BEFORE INSERT ON `mot2`.`app_auth_site_evidence_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_app_auth_site_evidence_map_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `app_for_auth_for_ae`
--

DROP TABLE IF EXISTS `app_for_auth_for_ae`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `app_for_auth_for_ae` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `application_id` int(10) unsigned NOT NULL,
  `auth_for_ae_id` int(10) unsigned NOT NULL,
  `principle_person_id` int(10) unsigned NOT NULL COMMENT 'Principle Person at time of authorisation',
  `designated_manager_person_id` int(10) unsigned NOT NULL,
  `status_id` smallint(5) unsigned NOT NULL,
  `status_changed_on` datetime(6) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_app_for_auth_for_ae_1` (`application_id`),
  KEY `fk_app_for_auth_for_ae_aedm` (`designated_manager_person_id`),
  KEY `fk_app_for_auth_for_ae_aep` (`principle_person_id`),
  KEY `fk_app_for_auth_for_ae_auth` (`auth_for_ae_id`),
  KEY `fk_app_for_auth_for_ae_status` (`status_id`),
  CONSTRAINT `fk_app_for_auth_for_ae_1` FOREIGN KEY (`application_id`) REFERENCES `application` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_app_for_auth_for_ae_aedm` FOREIGN KEY (`designated_manager_person_id`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_app_for_auth_for_ae_aep` FOREIGN KEY (`principle_person_id`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_app_for_auth_for_ae_auth` FOREIGN KEY (`auth_for_ae_id`) REFERENCES `auth_for_ae` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_app_for_auth_for_ae_status` FOREIGN KEY (`status_id`) REFERENCES `app_status` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Applications for an organisation wanting to become an Authorised Examiner';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_app_for_auth_for_ae_bi`
BEFORE INSERT ON `mot2`.`app_for_auth_for_ae`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_app_for_auth_for_ae_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `app_for_auth_testing_mot`
--

DROP TABLE IF EXISTS `app_for_auth_testing_mot`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `app_for_auth_testing_mot` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `application_id` int(10) unsigned NOT NULL,
  `authorisation_for_testing_mot_id` int(10) unsigned NOT NULL,
  `status_id` smallint(5) unsigned NOT NULL,
  `status_changed_on` datetime(6) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_app_for_auth_testing_mot_app` (`application_id`),
  KEY `fk_app_for_auth_testing_mot_auth` (`authorisation_for_testing_mot_id`),
  KEY `fk_app_for_auth_testing_mot_status` (`status_id`),
  CONSTRAINT `fk_app_for_auth_testing_mot_app` FOREIGN KEY (`application_id`) REFERENCES `application` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_app_for_auth_testing_mot_auth` FOREIGN KEY (`authorisation_for_testing_mot_id`) REFERENCES `auth_for_testing_mot` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_app_for_auth_testing_mot_status` FOREIGN KEY (`status_id`) REFERENCES `app_status` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_app_for_auth_testing_mot_bi`
BEFORE INSERT ON `mot2`.`app_for_auth_testing_mot`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_app_for_auth_testing_mot_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `app_for_auth_testing_mot_at_site`
--

DROP TABLE IF EXISTS `app_for_auth_testing_mot_at_site`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `app_for_auth_testing_mot_at_site` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `application_id` int(10) unsigned DEFAULT NULL COMMENT 'MOT1 data may not be able to map back to application for first stage migration',
  `site_id` int(10) unsigned DEFAULT NULL,
  `status_id` smallint(5) unsigned NOT NULL,
  `status_changed_on` datetime(6) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_app_for_auth_testing_mot_at_site_1` (`application_id`),
  KEY `fk_app_for_auth_testing_mot_at_site_3` (`status_id`),
  CONSTRAINT `fk_app_for_auth_testing_mot_at_site_1` FOREIGN KEY (`application_id`) REFERENCES `application` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_app_for_auth_testing_mot_at_site_3` FOREIGN KEY (`status_id`) REFERENCES `app_status` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_app_for_auth_testing_mot_at_site_bi`
BEFORE INSERT ON `mot2`.`app_for_auth_testing_mot_at_site`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_app_for_auth_testing_mot_at_site_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `app_status`
--

DROP TABLE IF EXISTS `app_status`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `app_status` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_app_status_code` (`code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Status of an appplication in the system (APPLIED, APPROVED IN PRINCIPLE, APPROVED, REFERRED, REJECTED)';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_app_status_bi`
BEFORE INSERT ON `mot2`.`app_status`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_app_status_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `app_to_auth_testing_mot_at_site_map`
--

DROP TABLE IF EXISTS `app_to_auth_testing_mot_at_site_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `app_to_auth_testing_mot_at_site_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `app_for_auth_testing_mot_at_site_id` int(10) unsigned NOT NULL,
  `authorisation_testing_mot_at_site_id` int(10) unsigned NOT NULL,
  `status_id` smallint(5) unsigned NOT NULL,
  `status_changed_on` datetime(6) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_app_to_auth_testing_mot_at_site_map_afatmas` (`app_for_auth_testing_mot_at_site_id`),
  KEY `fk_app_to_auth_testing_mot_at_site_map_atmas` (`authorisation_testing_mot_at_site_id`),
  KEY `fk_app_to_auth_testing_mot_at_site_map_status` (`status_id`),
  CONSTRAINT `fk_app_to_auth_testing_mot_at_site_map_afatmas` FOREIGN KEY (`app_for_auth_testing_mot_at_site_id`) REFERENCES `app_for_auth_testing_mot_at_site` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_app_to_auth_testing_mot_at_site_map_atmas` FOREIGN KEY (`authorisation_testing_mot_at_site_id`) REFERENCES `auth_for_testing_mot_at_site` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_app_to_auth_testing_mot_at_site_map_status` FOREIGN KEY (`status_id`) REFERENCES `app_status` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_app_to_auth_testing_mot_at_site_map_bi`
BEFORE INSERT ON `mot2`.`app_to_auth_testing_mot_at_site_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_app_to_auth_testing_mot_at_site_map_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `application`
--

DROP TABLE IF EXISTS `application`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `application` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `application_reference` varchar(15) NOT NULL,
  `person_id` int(10) unsigned NOT NULL COMMENT 'Applying Person',
  `status_id` smallint(5) unsigned NOT NULL,
  `status_changed_on` datetime(6) NOT NULL,
  `locked_by` int(10) unsigned DEFAULT NULL COMMENT 'Person currently editing record',
  `locked_on` datetime(6) DEFAULT NULL,
  `submitted_on` datetime(6) DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_application_app_status` (`status_id`),
  KEY `fk_application_locked_by` (`locked_by`),
  KEY `fk_application_person` (`person_id`),
  CONSTRAINT `fk_application_app_status` FOREIGN KEY (`status_id`) REFERENCES `app_status` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_application_locked_by` FOREIGN KEY (`locked_by`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_application_person` FOREIGN KEY (`person_id`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='An application made by a person for a form of authorisation in the system';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_application_bi`
BEFORE INSERT ON `mot2`.`application`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_application_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `approval_condition_appointment_map`
--

DROP TABLE IF EXISTS `approval_condition_appointment_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `approval_condition_appointment_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `site_condition_approval_id` int(10) unsigned NOT NULL,
  `condition_appointment_id` smallint(5) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_site_condition_approval_condition_appointment` (`site_condition_approval_id`,`condition_appointment_id`),
  KEY `fk_enforcement_condition_appointment_lookup_id` (`condition_appointment_id`),
  CONSTRAINT `fk_enforcement_condition_appointment_lookup_id` FOREIGN KEY (`condition_appointment_id`) REFERENCES `enforcement_condition_appointment_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_site_condition_approval_id` FOREIGN KEY (`site_condition_approval_id`) REFERENCES `site_condition_approval` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_approval_condition_appointment_map_bi`
BEFORE INSERT ON `mot2`.`approval_condition_appointment_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_approval_condition_appointment_map_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `assembly`
--

DROP TABLE IF EXISTS `assembly`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `assembly` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(10) CHARACTER SET latin1 NOT NULL,
  `assembly_type_id` smallint(5) unsigned DEFAULT NULL,
  `parent_assembly_id` int(10) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_assembly_code` (`code`),
  KEY `fk_assembly_assembly_type` (`assembly_type_id`),
  KEY `fk_assembly_parent_assembly_id` (`parent_assembly_id`),
  CONSTRAINT `fk_assembly_assembly_type` FOREIGN KEY (`assembly_type_id`) REFERENCES `assembly_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_assembly_parent_assembly_id` FOREIGN KEY (`parent_assembly_id`) REFERENCES `assembly` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='A was of grouping entities in the system i.e. Area, Zone, MEP also Area Offices';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_assembly_bi`
BEFORE INSERT ON `mot2`.`assembly`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_assembly_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `assembly_role_type`
--

DROP TABLE IF EXISTS `assembly_role_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `assembly_role_type` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_assembly_role_type_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_assembly_role_type_bi`
BEFORE INSERT ON `mot2`.`assembly_role_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_assembly_role_type_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `assembly_type`
--

DROP TABLE IF EXISTS `assembly_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `assembly_type` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Classification of a assembly (group i.e. Area, MEP etc)';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_assembly_type_bi`
BEFORE INSERT ON `mot2`.`assembly_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_assembly_type_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `auth_for_ae`
--

DROP TABLE IF EXISTS `auth_for_ae`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_for_ae` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ae_ref` varchar(12) NOT NULL,
  `organisation_id` int(10) unsigned NOT NULL,
  `ao_site_id` int(10) unsigned DEFAULT NULL,
  `status_id` smallint(5) unsigned NOT NULL,
  `status_changed_on` datetime(6) DEFAULT CURRENT_TIMESTAMP(6),
  `valid_from` datetime(6) DEFAULT NULL COMMENT 'Authorisation valid from',
  `expiry_date` datetime(6) DEFAULT NULL COMMENT 'Authorisation expiry date (normally for approval in principle)',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_auth_for_ae_ae_ref` (`ae_ref`),
  KEY `fk_auth_for_ae_ao_site_id` (`ao_site_id`),
  KEY `fk_auth_for_ae_organisation_id` (`organisation_id`),
  KEY `fk_auth_for_ae_status_id` (`status_id`),
  CONSTRAINT `fk_auth_for_ae_ao_site_id` FOREIGN KEY (`ao_site_id`) REFERENCES `site` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_auth_for_ae_organisation_id` FOREIGN KEY (`organisation_id`) REFERENCES `organisation` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_auth_for_ae_status_id` FOREIGN KEY (`status_id`) REFERENCES `auth_for_ae_status` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=2002 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Record of the authorisation of an organisation to be an Authorised Examiner';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_auth_for_ae_bi`
BEFORE INSERT ON `mot2`.`auth_for_ae`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_auth_for_ae_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_auth_for_ae_bu`
BEFORE UPDATE ON `mot2`.`auth_for_ae`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_auth_for_ae_bu Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_auth_for_ae_au`
AFTER UPDATE ON `mot2`.`auth_for_ae`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_auth_for_ae_au Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`auth_for_ae_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`ae_ref`
        ,`organisation_id`
        ,`ao_site_id`
        ,`status_id`
        ,`status_changed_on`
        ,`valid_from`
        ,`expiry_date`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`ae_ref`
        ,OLD.`organisation_id`
        ,OLD.`ao_site_id`
        ,OLD.`status_id`
        ,OLD.`status_changed_on`
        ,OLD.`valid_from`
        ,OLD.`expiry_date`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_auth_for_ae_bd`
BEFORE DELETE ON `mot2`.`auth_for_ae`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_auth_for_ae_bd Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`auth_for_ae_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`ae_ref`
        ,`organisation_id`
        ,`ao_site_id`
        ,`status_id`
        ,`status_changed_on`
        ,`valid_from`
        ,`expiry_date`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`ae_ref`
        ,OLD.`organisation_id`
        ,OLD.`ao_site_id`
        ,OLD.`status_id`
        ,OLD.`status_changed_on`
        ,OLD.`valid_from`
        ,OLD.`expiry_date`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `auth_for_ae_hist`
--

DROP TABLE IF EXISTS `auth_for_ae_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_for_ae_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `ae_ref` varchar(12) DEFAULT NULL,
  `organisation_id` int(10) unsigned DEFAULT NULL,
  `ao_site_id` int(10) unsigned DEFAULT NULL,
  `status_id` smallint(5) unsigned DEFAULT NULL,
  `status_changed_on` datetime(6) DEFAULT NULL,
  `valid_from` datetime(6) DEFAULT NULL,
  `expiry_date` datetime(6) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_auth_for_ae_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:07';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `auth_for_ae_person_as_principal_map`
--

DROP TABLE IF EXISTS `auth_for_ae_person_as_principal_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_for_ae_person_as_principal_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `person_id` int(10) unsigned NOT NULL,
  `auth_for_ae_id` int(11) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_auth_for_ae_person_map_authorised_examiner` (`auth_for_ae_id`),
  KEY `fk_auth_for_ae_person_map_person_id` (`person_id`),
  CONSTRAINT `fk_auth_for_ae_person_map_authorised_examiner` FOREIGN KEY (`auth_for_ae_id`) REFERENCES `auth_for_ae` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_auth_for_ae_person_map_person_id` FOREIGN KEY (`person_id`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_auth_for_ae_person_as_principal_map_bi`
BEFORE INSERT ON `mot2`.`auth_for_ae_person_as_principal_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_auth_for_ae_person_as_principal_map_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_auth_for_ae_person_as_principal_map_bu`
BEFORE UPDATE ON `mot2`.`auth_for_ae_person_as_principal_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_auth_for_ae_person_as_principal_map_bu Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_auth_for_ae_person_as_principal_map_au`
AFTER UPDATE ON `mot2`.`auth_for_ae_person_as_principal_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_auth_for_ae_person_as_principal_map_au Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`auth_for_ae_person_as_principal_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`person_id`
        ,`auth_for_ae_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`person_id`
        ,OLD.`auth_for_ae_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_auth_for_ae_person_as_principal_map_bd`
BEFORE DELETE ON `mot2`.`auth_for_ae_person_as_principal_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_auth_for_ae_person_as_principal_map_bd Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`auth_for_ae_person_as_principal_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`person_id`
        ,`auth_for_ae_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`person_id`
        ,OLD.`auth_for_ae_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `auth_for_ae_person_as_principal_map_hist`
--

DROP TABLE IF EXISTS `auth_for_ae_person_as_principal_map_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_for_ae_person_as_principal_map_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `person_id` int(10) unsigned DEFAULT NULL,
  `auth_for_ae_id` int(11) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_auth_for_ae_person_as_principal_map_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:07';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `auth_for_ae_status`
--

DROP TABLE IF EXISTS `auth_for_ae_status`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_for_ae_status` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_auth_for_ae_status_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation for the status of an authorisation for an organisation to be an Authorised Examiner.';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_auth_for_ae_status_bi`
BEFORE INSERT ON `mot2`.`auth_for_ae_status`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_auth_for_ae_status_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `auth_for_testing_mot`
--

DROP TABLE IF EXISTS `auth_for_testing_mot`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_for_testing_mot` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `person_id` int(10) unsigned NOT NULL,
  `vehicle_class_id` smallint(5) unsigned NOT NULL,
  `status_id` smallint(5) unsigned NOT NULL,
  `status_changed_on` datetime(6) DEFAULT CURRENT_TIMESTAMP(6),
  `valid_from` datetime(6) DEFAULT NULL COMMENT 'Authorisation valid from',
  `expiry_date` datetime(6) DEFAULT NULL COMMENT 'Authorisation expiry date',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `person_id` (`person_id`,`vehicle_class_id`),
  KEY `fk_auth_for_testing_mot_status_id` (`status_id`),
  KEY `fk_auth_for_testing_mot_vehicle_class_id` (`vehicle_class_id`),
  CONSTRAINT `fk_auth_for_testing_mot_person_id` FOREIGN KEY (`person_id`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_auth_for_testing_mot_status_id` FOREIGN KEY (`status_id`) REFERENCES `auth_for_testing_mot_status` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_auth_for_testing_mot_vehicle_class_id` FOREIGN KEY (`vehicle_class_id`) REFERENCES `vehicle_class` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=676 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Record for the authorisation of a person to conduct an MOT on a particular vehicle class.';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_auth_for_testing_mot_bi`
BEFORE INSERT ON `mot2`.`auth_for_testing_mot`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_auth_for_testing_mot_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_auth_for_testing_mot_bu`
BEFORE UPDATE ON `mot2`.`auth_for_testing_mot`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_auth_for_testing_mot_bu Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_auth_for_testing_mot_au`
AFTER UPDATE ON `mot2`.`auth_for_testing_mot`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_auth_for_testing_mot_au Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`auth_for_testing_mot_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`person_id`
        ,`vehicle_class_id`
        ,`status_id`
        ,`status_changed_on`
        ,`valid_from`
        ,`expiry_date`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`person_id`
        ,OLD.`vehicle_class_id`
        ,OLD.`status_id`
        ,OLD.`status_changed_on`
        ,OLD.`valid_from`
        ,OLD.`expiry_date`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_auth_for_testing_mot_bd`
BEFORE DELETE ON `mot2`.`auth_for_testing_mot`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_auth_for_testing_mot_bd Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`auth_for_testing_mot_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`person_id`
        ,`vehicle_class_id`
        ,`status_id`
        ,`status_changed_on`
        ,`valid_from`
        ,`expiry_date`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`person_id`
        ,OLD.`vehicle_class_id`
        ,OLD.`status_id`
        ,OLD.`status_changed_on`
        ,OLD.`valid_from`
        ,OLD.`expiry_date`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `auth_for_testing_mot_at_site`
--

DROP TABLE IF EXISTS `auth_for_testing_mot_at_site`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_for_testing_mot_at_site` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `site_id` int(10) unsigned NOT NULL,
  `vehicle_class_id` smallint(5) unsigned NOT NULL,
  `status_id` smallint(5) unsigned NOT NULL,
  `status_changed_on` datetime(6) DEFAULT CURRENT_TIMESTAMP(6),
  `valid_from` datetime(6) DEFAULT NULL COMMENT 'Authorisation valid from',
  `expiry_date` datetime(6) DEFAULT NULL COMMENT 'Authorisation expiry date ',
  `fuel_type_id` smallint(5) unsigned DEFAULT NULL COMMENT 'Currently unused, pending decision on whether is connected to vehicle type',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_auth_for_testing_mot_at_site_auth_status_id` (`status_id`),
  KEY `fk_auth_for_testing_mot_at_site_site_id` (`site_id`),
  KEY `fk_auth_site_vehicle_class_id` (`vehicle_class_id`),
  CONSTRAINT `fk_auth_for_testing_mot_at_site_auth_status_id` FOREIGN KEY (`status_id`) REFERENCES `auth_for_testing_mot_at_site_status` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_auth_for_testing_mot_at_site_site_id` FOREIGN KEY (`site_id`) REFERENCES `site` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_auth_site_vehicle_class_id` FOREIGN KEY (`vehicle_class_id`) REFERENCES `vehicle_class` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=46 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Record of the authorisation for a site to conduct an MOT';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_auth_for_testing_mot_at_site_bi`
BEFORE INSERT ON `mot2`.`auth_for_testing_mot_at_site`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_auth_for_testing_mot_at_site_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_auth_for_testing_mot_at_site_bu`
BEFORE UPDATE ON `mot2`.`auth_for_testing_mot_at_site`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_auth_for_testing_mot_at_site_bu Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_auth_for_testing_mot_at_site_au`
AFTER UPDATE ON `mot2`.`auth_for_testing_mot_at_site`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_auth_for_testing_mot_at_site_au Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`auth_for_testing_mot_at_site_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`site_id`
        ,`vehicle_class_id`
        ,`status_id`
        ,`status_changed_on`
        ,`valid_from`
        ,`expiry_date`
        ,`fuel_type_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`site_id`
        ,OLD.`vehicle_class_id`
        ,OLD.`status_id`
        ,OLD.`status_changed_on`
        ,OLD.`valid_from`
        ,OLD.`expiry_date`
        ,OLD.`fuel_type_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_auth_for_testing_mot_at_site_bd`
BEFORE DELETE ON `mot2`.`auth_for_testing_mot_at_site`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_auth_for_testing_mot_at_site_bd Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`auth_for_testing_mot_at_site_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`site_id`
        ,`vehicle_class_id`
        ,`status_id`
        ,`status_changed_on`
        ,`valid_from`
        ,`expiry_date`
        ,`fuel_type_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`site_id`
        ,OLD.`vehicle_class_id`
        ,OLD.`status_id`
        ,OLD.`status_changed_on`
        ,OLD.`valid_from`
        ,OLD.`expiry_date`
        ,OLD.`fuel_type_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `auth_for_testing_mot_at_site_hist`
--

DROP TABLE IF EXISTS `auth_for_testing_mot_at_site_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_for_testing_mot_at_site_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `site_id` int(10) unsigned DEFAULT NULL,
  `vehicle_class_id` smallint(5) unsigned DEFAULT NULL,
  `status_id` smallint(5) unsigned DEFAULT NULL,
  `status_changed_on` datetime(6) DEFAULT NULL,
  `valid_from` datetime(6) DEFAULT NULL,
  `expiry_date` datetime(6) DEFAULT NULL,
  `fuel_type_id` smallint(5) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_auth_for_testing_mot_at_site_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:07';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `auth_for_testing_mot_at_site_status`
--

DROP TABLE IF EXISTS `auth_for_testing_mot_at_site_status`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_for_testing_mot_at_site_status` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_auth_for_testing_mot_at_site_status_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation for the status of an authorisation for a site to conduct an MOT.';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_auth_for_testing_mot_at_site_status_bi`
BEFORE INSERT ON `mot2`.`auth_for_testing_mot_at_site_status`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_auth_for_testing_mot_at_site_status_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `auth_for_testing_mot_hist`
--

DROP TABLE IF EXISTS `auth_for_testing_mot_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_for_testing_mot_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `person_id` int(10) unsigned DEFAULT NULL,
  `vehicle_class_id` smallint(5) unsigned DEFAULT NULL,
  `status_id` smallint(5) unsigned DEFAULT NULL,
  `status_changed_on` datetime(6) DEFAULT NULL,
  `valid_from` datetime(6) DEFAULT NULL,
  `expiry_date` datetime(6) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_auth_for_testing_mot_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:07';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `auth_for_testing_mot_role_map`
--

DROP TABLE IF EXISTS `auth_for_testing_mot_role_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_for_testing_mot_role_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `vehicle_class_id` smallint(5) unsigned NOT NULL,
  `auth_status_id` smallint(5) unsigned NOT NULL,
  `role_id` int(10) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_auth_for_testing_mot_role_map_auth_for_testing_mot_status_id` (`auth_status_id`),
  KEY `fk_auth_for_testing_mot_role_map_role_id` (`role_id`),
  KEY `fk_auth_for_testing_mot_role_map_vehicle_class_id` (`vehicle_class_id`),
  CONSTRAINT `fk_auth_for_testing_mot_role_map_auth_for_testing_mot_status_id` FOREIGN KEY (`auth_status_id`) REFERENCES `auth_for_testing_mot_status` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_auth_for_testing_mot_role_map_role_id` FOREIGN KEY (`role_id`) REFERENCES `role` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_auth_for_testing_mot_role_map_vehicle_class_id` FOREIGN KEY (`vehicle_class_id`) REFERENCES `vehicle_class` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=24 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_auth_for_testing_mot_role_map_bi`
BEFORE INSERT ON `mot2`.`auth_for_testing_mot_role_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_auth_for_testing_mot_role_map_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `auth_for_testing_mot_status`
--

DROP TABLE IF EXISTS `auth_for_testing_mot_status`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_for_testing_mot_status` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_auth_for_testing_mot_status_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation for the status of an authorisation for a person to conduct an MOT.';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_auth_for_testing_mot_status_bi`
BEFORE INSERT ON `mot2`.`auth_for_testing_mot_status`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_auth_for_testing_mot_status_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `auth_status`
--

DROP TABLE IF EXISTS `auth_status`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_status` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_auth_status_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation for the status of an authorisation for a person to conduct an MOT.';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_auth_status_bi`
BEFORE INSERT ON `mot2`.`auth_status`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_auth_status_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `authorised_examiner_principal`
--

DROP TABLE IF EXISTS `authorised_examiner_principal`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `authorised_examiner_principal` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `auth_for_ae_id` int(10) unsigned NOT NULL,
  `contact_detail_id` int(10) unsigned NOT NULL,
  `first_name` varchar(45) DEFAULT NULL,
  `middle_name` varchar(45) DEFAULT NULL,
  `family_name` varchar(45) NOT NULL,
  `date_of_birth` date DEFAULT NULL,
  `original_person_id` int(10) unsigned DEFAULT NULL COMMENT 'This relates to person row that contained the original data',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_aep_auth_for_ae_id_auth_for_ae_id` (`auth_for_ae_id`),
  KEY `fk_aep_contact_detail_id_contact_detail_id` (`contact_detail_id`),
  CONSTRAINT `fk_aep_auth_for_ae_id_auth_for_ae_id` FOREIGN KEY (`auth_for_ae_id`) REFERENCES `auth_for_ae` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_aep_contact_detail_id_contact_detail_id` FOREIGN KEY (`contact_detail_id`) REFERENCES `contact_detail` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_authorised_examiner_principal_bi`
BEFORE INSERT ON `mot2`.`authorised_examiner_principal`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_authorised_examiner_principal_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `body_type`
--

DROP TABLE IF EXISTS `body_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `body_type` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `display_order` smallint(5) unsigned NOT NULL DEFAULT '1',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_body_type_code` (`code`),
  UNIQUE KEY `uk_body_type_display_order` (`display_order`)
) ENGINE=InnoDB AUTO_INCREMENT=116 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Will be removed - normalisation of unused data';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_body_type_bi`
BEFORE INSERT ON `mot2`.`body_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_body_type_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_body_type_bu`
BEFORE UPDATE ON `mot2`.`body_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_body_type_bu Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_body_type_au`
AFTER UPDATE ON `mot2`.`body_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_body_type_au Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`body_type_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`name`
        ,`code`
        ,`display_order`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`name`
        ,OLD.`code`
        ,OLD.`display_order`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_body_type_bd`
BEFORE DELETE ON `mot2`.`body_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_body_type_bd Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`body_type_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`name`
        ,`code`
        ,`display_order`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`name`
        ,OLD.`code`
        ,OLD.`display_order`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `body_type_hist`
--

DROP TABLE IF EXISTS `body_type_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `body_type_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` smallint(5) unsigned DEFAULT NULL,
  `name` varchar(50) DEFAULT NULL,
  `code` varchar(5) CHARACTER SET latin1 DEFAULT NULL,
  `display_order` smallint(5) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_body_type_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:07';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `brake_test_result_class_1_2`
--

DROP TABLE IF EXISTS `brake_test_result_class_1_2`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `brake_test_result_class_1_2` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `mot_test_id` bigint(20) unsigned NOT NULL,
  `brake_test_type_id` smallint(5) unsigned NOT NULL,
  `vehicle_weight_front` smallint(6) unsigned DEFAULT NULL,
  `vehicle_weight_rear` smallint(6) unsigned DEFAULT NULL,
  `rider_weight` smallint(6) unsigned DEFAULT NULL,
  `sidecar_weight` smallint(6) unsigned DEFAULT NULL,
  `control_1_effort_front` int(11) DEFAULT NULL,
  `control_1_effort_rear` int(11) DEFAULT NULL,
  `control_1_effort_sidecar` int(11) DEFAULT NULL,
  `control_2_effort_front` int(11) DEFAULT NULL,
  `control_2_effort_rear` int(11) DEFAULT NULL,
  `control_2_effort_sidecar` int(11) DEFAULT NULL,
  `control_1_lock_front` tinyint(4) DEFAULT NULL,
  `control_1_lock_rear` tinyint(4) DEFAULT NULL,
  `control_2_lock_front` tinyint(4) DEFAULT NULL,
  `control_2_lock_rear` tinyint(4) DEFAULT NULL,
  `control_1_brake_efficiency` smallint(5) unsigned DEFAULT NULL,
  `control_2_brake_efficiency` smallint(5) unsigned DEFAULT NULL,
  `gradient_control_1_below_minimum` tinyint(4) DEFAULT NULL,
  `gradient_control_2_below_minimum` tinyint(4) DEFAULT NULL,
  `control_1_efficiency_pass` tinyint(4) NOT NULL,
  `control_2_efficiency_pass` tinyint(4) DEFAULT NULL,
  `general_pass` tinyint(4) NOT NULL,
  `is_latest` tinyint(4) unsigned NOT NULL DEFAULT '1',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_brake_test_result_class_1_2_brake_test_type_id` (`brake_test_type_id`),
  KEY `fk_brake_test_result_class_1_2_mot_test_id` (`mot_test_id`),
  CONSTRAINT `fk_brake_test_result_class_1_2_brake_test_type_id` FOREIGN KEY (`brake_test_type_id`) REFERENCES `brake_test_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_brake_test_result_class_1_2_mot_test_id` FOREIGN KEY (`mot_test_id`) REFERENCES `mot_test` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Record of brake test inputs and results for vehicle classes 1 and 2';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_brake_test_result_class_1_2_bi`
BEFORE INSERT ON `mot2`.`brake_test_result_class_1_2`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_brake_test_result_class_1_2_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_brake_test_result_class_1_2_bu`
BEFORE UPDATE ON `mot2`.`brake_test_result_class_1_2`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_brake_test_result_class_1_2_bu Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_brake_test_result_class_1_2_au`
AFTER UPDATE ON `mot2`.`brake_test_result_class_1_2`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_brake_test_result_class_1_2_au Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`brake_test_result_class_1_2_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`mot_test_id`
        ,`brake_test_type_id`
        ,`vehicle_weight_front`
        ,`vehicle_weight_rear`
        ,`rider_weight`
        ,`sidecar_weight`
        ,`control_1_effort_front`
        ,`control_1_effort_rear`
        ,`control_1_effort_sidecar`
        ,`control_2_effort_front`
        ,`control_2_effort_rear`
        ,`control_2_effort_sidecar`
        ,`control_1_lock_front`
        ,`control_1_lock_rear`
        ,`control_2_lock_front`
        ,`control_2_lock_rear`
        ,`control_1_brake_efficiency`
        ,`control_2_brake_efficiency`
        ,`gradient_control_1_below_minimum`
        ,`gradient_control_2_below_minimum`
        ,`control_1_efficiency_pass`
        ,`control_2_efficiency_pass`
        ,`general_pass`
        ,`is_latest`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`mot_test_id`
        ,OLD.`brake_test_type_id`
        ,OLD.`vehicle_weight_front`
        ,OLD.`vehicle_weight_rear`
        ,OLD.`rider_weight`
        ,OLD.`sidecar_weight`
        ,OLD.`control_1_effort_front`
        ,OLD.`control_1_effort_rear`
        ,OLD.`control_1_effort_sidecar`
        ,OLD.`control_2_effort_front`
        ,OLD.`control_2_effort_rear`
        ,OLD.`control_2_effort_sidecar`
        ,OLD.`control_1_lock_front`
        ,OLD.`control_1_lock_rear`
        ,OLD.`control_2_lock_front`
        ,OLD.`control_2_lock_rear`
        ,OLD.`control_1_brake_efficiency`
        ,OLD.`control_2_brake_efficiency`
        ,OLD.`gradient_control_1_below_minimum`
        ,OLD.`gradient_control_2_below_minimum`
        ,OLD.`control_1_efficiency_pass`
        ,OLD.`control_2_efficiency_pass`
        ,OLD.`general_pass`
        ,OLD.`is_latest`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_brake_test_result_class_1_2_bd`
BEFORE DELETE ON `mot2`.`brake_test_result_class_1_2`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_brake_test_result_class_1_2_bd Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`brake_test_result_class_1_2_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`mot_test_id`
        ,`brake_test_type_id`
        ,`vehicle_weight_front`
        ,`vehicle_weight_rear`
        ,`rider_weight`
        ,`sidecar_weight`
        ,`control_1_effort_front`
        ,`control_1_effort_rear`
        ,`control_1_effort_sidecar`
        ,`control_2_effort_front`
        ,`control_2_effort_rear`
        ,`control_2_effort_sidecar`
        ,`control_1_lock_front`
        ,`control_1_lock_rear`
        ,`control_2_lock_front`
        ,`control_2_lock_rear`
        ,`control_1_brake_efficiency`
        ,`control_2_brake_efficiency`
        ,`gradient_control_1_below_minimum`
        ,`gradient_control_2_below_minimum`
        ,`control_1_efficiency_pass`
        ,`control_2_efficiency_pass`
        ,`general_pass`
        ,`is_latest`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`mot_test_id`
        ,OLD.`brake_test_type_id`
        ,OLD.`vehicle_weight_front`
        ,OLD.`vehicle_weight_rear`
        ,OLD.`rider_weight`
        ,OLD.`sidecar_weight`
        ,OLD.`control_1_effort_front`
        ,OLD.`control_1_effort_rear`
        ,OLD.`control_1_effort_sidecar`
        ,OLD.`control_2_effort_front`
        ,OLD.`control_2_effort_rear`
        ,OLD.`control_2_effort_sidecar`
        ,OLD.`control_1_lock_front`
        ,OLD.`control_1_lock_rear`
        ,OLD.`control_2_lock_front`
        ,OLD.`control_2_lock_rear`
        ,OLD.`control_1_brake_efficiency`
        ,OLD.`control_2_brake_efficiency`
        ,OLD.`gradient_control_1_below_minimum`
        ,OLD.`gradient_control_2_below_minimum`
        ,OLD.`control_1_efficiency_pass`
        ,OLD.`control_2_efficiency_pass`
        ,OLD.`general_pass`
        ,OLD.`is_latest`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `brake_test_result_class_1_2_hist`
--

DROP TABLE IF EXISTS `brake_test_result_class_1_2_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `brake_test_result_class_1_2_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` bigint(20) unsigned DEFAULT NULL,
  `mot_test_id` bigint(20) unsigned DEFAULT NULL,
  `brake_test_type_id` smallint(5) unsigned DEFAULT NULL,
  `vehicle_weight_front` smallint(6) unsigned DEFAULT NULL,
  `vehicle_weight_rear` smallint(6) unsigned DEFAULT NULL,
  `rider_weight` smallint(6) unsigned DEFAULT NULL,
  `sidecar_weight` smallint(6) unsigned DEFAULT NULL,
  `control_1_effort_front` int(11) DEFAULT NULL,
  `control_1_effort_rear` int(11) DEFAULT NULL,
  `control_1_effort_sidecar` int(11) DEFAULT NULL,
  `control_2_effort_front` int(11) DEFAULT NULL,
  `control_2_effort_rear` int(11) DEFAULT NULL,
  `control_2_effort_sidecar` int(11) DEFAULT NULL,
  `control_1_lock_front` tinyint(4) DEFAULT NULL,
  `control_1_lock_rear` tinyint(4) DEFAULT NULL,
  `control_2_lock_front` tinyint(4) DEFAULT NULL,
  `control_2_lock_rear` tinyint(4) DEFAULT NULL,
  `control_1_brake_efficiency` smallint(5) unsigned DEFAULT NULL,
  `control_2_brake_efficiency` smallint(5) unsigned DEFAULT NULL,
  `gradient_control_1_below_minimum` tinyint(4) DEFAULT NULL,
  `gradient_control_2_below_minimum` tinyint(4) DEFAULT NULL,
  `control_1_efficiency_pass` tinyint(4) DEFAULT NULL,
  `control_2_efficiency_pass` tinyint(4) DEFAULT NULL,
  `general_pass` tinyint(4) DEFAULT NULL,
  `is_latest` tinyint(4) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_brake_test_result_class_1_2_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:07';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `brake_test_result_class_3_and_above`
--

DROP TABLE IF EXISTS `brake_test_result_class_3_and_above`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `brake_test_result_class_3_and_above` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `mot_test_id` bigint(20) unsigned NOT NULL,
  `service_brake_1_test_type_id` smallint(5) unsigned NOT NULL,
  `service_brake_2_test_type_id` smallint(5) unsigned DEFAULT NULL,
  `parking_brake_test_type_id` smallint(5) unsigned NOT NULL,
  `service_brake_total_axles_applied_to` tinyint(4) DEFAULT NULL,
  `parking_brake_total_axles_applied_to` tinyint(4) DEFAULT NULL,
  `service_brake_1_data_id` bigint(20) unsigned DEFAULT NULL,
  `service_brake_2_data_id` bigint(20) unsigned DEFAULT NULL,
  `parking_brake_effort_nearside` int(11) DEFAULT NULL,
  `parking_brake_effort_offside` int(11) DEFAULT NULL,
  `parking_brake_effort_secondary_nearside` int(11) DEFAULT NULL,
  `parking_brake_effort_secondary_offside` int(11) DEFAULT NULL,
  `parking_brake_effort_single` int(11) DEFAULT NULL,
  `parking_brake_lock_nearside` tinyint(4) DEFAULT NULL,
  `parking_brake_lock_offside` tinyint(4) DEFAULT NULL,
  `parking_brake_lock_secondary_nearside` tinyint(4) DEFAULT NULL,
  `parking_brake_lock_secondary_offside` tinyint(4) DEFAULT NULL,
  `parking_brake_lock_single` tinyint(4) DEFAULT NULL,
  `service_brake_is_single_line` tinyint(4) NOT NULL,
  `is_single_in_front` tinyint(4) unsigned DEFAULT NULL,
  `is_commercial_vehicle` tinyint(4) DEFAULT NULL,
  `vehicle_weight` int(10) unsigned DEFAULT NULL COMMENT 'in Kg',
  `weight_type_id` smallint(5) unsigned DEFAULT NULL,
  `weight_is_unladen` tinyint(4) DEFAULT NULL,
  `service_brake_1_efficiency` smallint(5) unsigned DEFAULT NULL,
  `service_brake_2_efficiency` smallint(5) unsigned DEFAULT NULL,
  `parking_brake_efficiency` smallint(5) unsigned DEFAULT NULL,
  `service_brake_1_efficiency_pass` tinyint(4) DEFAULT NULL,
  `service_brake_2_efficiency_pass` tinyint(4) DEFAULT NULL,
  `parking_brake_efficiency_pass` tinyint(4) DEFAULT NULL,
  `parking_brake_imbalance` tinyint(4) DEFAULT NULL,
  `parking_brake_secondary_imbalance` tinyint(4) DEFAULT NULL,
  `parking_brake_imbalance_pass` tinyint(4) DEFAULT NULL,
  `general_pass` tinyint(4) NOT NULL,
  `is_latest` tinyint(4) unsigned NOT NULL DEFAULT '1',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_brake_test_result_class_3_above_parking_brake_test_type_id` (`parking_brake_test_type_id`),
  KEY `fk_brake_test_result_class_3_above_service_brake_1_test_type_id` (`service_brake_1_test_type_id`),
  KEY `fk_brake_test_result_class_3_above_service_brake_2_test_type_id` (`service_brake_2_test_type_id`),
  KEY `fk_brake_test_result_class_3_and_above_mot_test_id` (`mot_test_id`),
  KEY `fk_brake_test_result_class_3_and_above_weight_type_id` (`weight_type_id`),
  KEY `fk_brake_test_result_service_brake_data_service_brake_1` (`service_brake_1_data_id`),
  KEY `fk_brake_test_result_service_brake_data_service_brake_2` (`service_brake_2_data_id`),
  CONSTRAINT `fk_brake_test_result_class_3_above_parking_brake_test_type_id` FOREIGN KEY (`parking_brake_test_type_id`) REFERENCES `brake_test_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_brake_test_result_class_3_above_service_brake_1_test_type_id` FOREIGN KEY (`service_brake_1_test_type_id`) REFERENCES `brake_test_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_brake_test_result_class_3_above_service_brake_2_test_type_id` FOREIGN KEY (`service_brake_2_test_type_id`) REFERENCES `brake_test_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_brake_test_result_class_3_and_above_mot_test_id` FOREIGN KEY (`mot_test_id`) REFERENCES `mot_test` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_brake_test_result_class_3_and_above_weight_type_id` FOREIGN KEY (`weight_type_id`) REFERENCES `weight_source_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_brake_test_result_service_brake_data_service_brake_1` FOREIGN KEY (`service_brake_1_data_id`) REFERENCES `brake_test_result_service_brake_data` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_brake_test_result_service_brake_data_service_brake_2` FOREIGN KEY (`service_brake_2_data_id`) REFERENCES `brake_test_result_service_brake_data` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Record of brake test inputs and results for vehicle classes 3 to 7';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_brake_test_result_class_3_and_above_bi`
BEFORE INSERT ON `mot2`.`brake_test_result_class_3_and_above`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_brake_test_result_class_3_and_above_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_brake_test_result_class_3_and_above_bu`
BEFORE UPDATE ON `mot2`.`brake_test_result_class_3_and_above`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_brake_test_result_class_3_and_above_bu Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_brake_test_result_class_3_and_above_au`
AFTER UPDATE ON `mot2`.`brake_test_result_class_3_and_above`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_brake_test_result_class_3_and_above_au Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`brake_test_result_class_3_and_above_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`mot_test_id`
        ,`service_brake_1_test_type_id`
        ,`service_brake_2_test_type_id`
        ,`parking_brake_test_type_id`
        ,`service_brake_total_axles_applied_to`
        ,`parking_brake_total_axles_applied_to`
        ,`service_brake_1_data_id`
        ,`service_brake_2_data_id`
        ,`parking_brake_effort_nearside`
        ,`parking_brake_effort_offside`
        ,`parking_brake_effort_secondary_nearside`
        ,`parking_brake_effort_secondary_offside`
        ,`parking_brake_effort_single`
        ,`parking_brake_lock_nearside`
        ,`parking_brake_lock_offside`
        ,`parking_brake_lock_secondary_nearside`
        ,`parking_brake_lock_secondary_offside`
        ,`parking_brake_lock_single`
        ,`service_brake_is_single_line`
        ,`is_single_in_front`
        ,`is_commercial_vehicle`
        ,`vehicle_weight`
        ,`weight_type_id`
        ,`weight_is_unladen`
        ,`service_brake_1_efficiency`
        ,`service_brake_2_efficiency`
        ,`parking_brake_efficiency`
        ,`service_brake_1_efficiency_pass`
        ,`service_brake_2_efficiency_pass`
        ,`parking_brake_efficiency_pass`
        ,`parking_brake_imbalance`
        ,`parking_brake_secondary_imbalance`
        ,`parking_brake_imbalance_pass`
        ,`general_pass`
        ,`is_latest`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`mot_test_id`
        ,OLD.`service_brake_1_test_type_id`
        ,OLD.`service_brake_2_test_type_id`
        ,OLD.`parking_brake_test_type_id`
        ,OLD.`service_brake_total_axles_applied_to`
        ,OLD.`parking_brake_total_axles_applied_to`
        ,OLD.`service_brake_1_data_id`
        ,OLD.`service_brake_2_data_id`
        ,OLD.`parking_brake_effort_nearside`
        ,OLD.`parking_brake_effort_offside`
        ,OLD.`parking_brake_effort_secondary_nearside`
        ,OLD.`parking_brake_effort_secondary_offside`
        ,OLD.`parking_brake_effort_single`
        ,OLD.`parking_brake_lock_nearside`
        ,OLD.`parking_brake_lock_offside`
        ,OLD.`parking_brake_lock_secondary_nearside`
        ,OLD.`parking_brake_lock_secondary_offside`
        ,OLD.`parking_brake_lock_single`
        ,OLD.`service_brake_is_single_line`
        ,OLD.`is_single_in_front`
        ,OLD.`is_commercial_vehicle`
        ,OLD.`vehicle_weight`
        ,OLD.`weight_type_id`
        ,OLD.`weight_is_unladen`
        ,OLD.`service_brake_1_efficiency`
        ,OLD.`service_brake_2_efficiency`
        ,OLD.`parking_brake_efficiency`
        ,OLD.`service_brake_1_efficiency_pass`
        ,OLD.`service_brake_2_efficiency_pass`
        ,OLD.`parking_brake_efficiency_pass`
        ,OLD.`parking_brake_imbalance`
        ,OLD.`parking_brake_secondary_imbalance`
        ,OLD.`parking_brake_imbalance_pass`
        ,OLD.`general_pass`
        ,OLD.`is_latest`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_brake_test_result_class_3_and_above_bd`
BEFORE DELETE ON `mot2`.`brake_test_result_class_3_and_above`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_brake_test_result_class_3_and_above_bd Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`brake_test_result_class_3_and_above_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`mot_test_id`
        ,`service_brake_1_test_type_id`
        ,`service_brake_2_test_type_id`
        ,`parking_brake_test_type_id`
        ,`service_brake_total_axles_applied_to`
        ,`parking_brake_total_axles_applied_to`
        ,`service_brake_1_data_id`
        ,`service_brake_2_data_id`
        ,`parking_brake_effort_nearside`
        ,`parking_brake_effort_offside`
        ,`parking_brake_effort_secondary_nearside`
        ,`parking_brake_effort_secondary_offside`
        ,`parking_brake_effort_single`
        ,`parking_brake_lock_nearside`
        ,`parking_brake_lock_offside`
        ,`parking_brake_lock_secondary_nearside`
        ,`parking_brake_lock_secondary_offside`
        ,`parking_brake_lock_single`
        ,`service_brake_is_single_line`
        ,`is_single_in_front`
        ,`is_commercial_vehicle`
        ,`vehicle_weight`
        ,`weight_type_id`
        ,`weight_is_unladen`
        ,`service_brake_1_efficiency`
        ,`service_brake_2_efficiency`
        ,`parking_brake_efficiency`
        ,`service_brake_1_efficiency_pass`
        ,`service_brake_2_efficiency_pass`
        ,`parking_brake_efficiency_pass`
        ,`parking_brake_imbalance`
        ,`parking_brake_secondary_imbalance`
        ,`parking_brake_imbalance_pass`
        ,`general_pass`
        ,`is_latest`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`mot_test_id`
        ,OLD.`service_brake_1_test_type_id`
        ,OLD.`service_brake_2_test_type_id`
        ,OLD.`parking_brake_test_type_id`
        ,OLD.`service_brake_total_axles_applied_to`
        ,OLD.`parking_brake_total_axles_applied_to`
        ,OLD.`service_brake_1_data_id`
        ,OLD.`service_brake_2_data_id`
        ,OLD.`parking_brake_effort_nearside`
        ,OLD.`parking_brake_effort_offside`
        ,OLD.`parking_brake_effort_secondary_nearside`
        ,OLD.`parking_brake_effort_secondary_offside`
        ,OLD.`parking_brake_effort_single`
        ,OLD.`parking_brake_lock_nearside`
        ,OLD.`parking_brake_lock_offside`
        ,OLD.`parking_brake_lock_secondary_nearside`
        ,OLD.`parking_brake_lock_secondary_offside`
        ,OLD.`parking_brake_lock_single`
        ,OLD.`service_brake_is_single_line`
        ,OLD.`is_single_in_front`
        ,OLD.`is_commercial_vehicle`
        ,OLD.`vehicle_weight`
        ,OLD.`weight_type_id`
        ,OLD.`weight_is_unladen`
        ,OLD.`service_brake_1_efficiency`
        ,OLD.`service_brake_2_efficiency`
        ,OLD.`parking_brake_efficiency`
        ,OLD.`service_brake_1_efficiency_pass`
        ,OLD.`service_brake_2_efficiency_pass`
        ,OLD.`parking_brake_efficiency_pass`
        ,OLD.`parking_brake_imbalance`
        ,OLD.`parking_brake_secondary_imbalance`
        ,OLD.`parking_brake_imbalance_pass`
        ,OLD.`general_pass`
        ,OLD.`is_latest`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `brake_test_result_class_3_and_above_hist`
--

DROP TABLE IF EXISTS `brake_test_result_class_3_and_above_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `brake_test_result_class_3_and_above_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` bigint(20) unsigned DEFAULT NULL,
  `mot_test_id` bigint(20) unsigned DEFAULT NULL,
  `service_brake_1_test_type_id` smallint(5) unsigned DEFAULT NULL,
  `service_brake_2_test_type_id` smallint(5) unsigned DEFAULT NULL,
  `parking_brake_test_type_id` smallint(5) unsigned DEFAULT NULL,
  `service_brake_total_axles_applied_to` tinyint(4) DEFAULT NULL,
  `parking_brake_total_axles_applied_to` tinyint(4) DEFAULT NULL,
  `service_brake_1_data_id` bigint(20) unsigned DEFAULT NULL,
  `service_brake_2_data_id` bigint(20) unsigned DEFAULT NULL,
  `parking_brake_effort_nearside` int(11) DEFAULT NULL,
  `parking_brake_effort_offside` int(11) DEFAULT NULL,
  `parking_brake_effort_secondary_nearside` int(11) DEFAULT NULL,
  `parking_brake_effort_secondary_offside` int(11) DEFAULT NULL,
  `parking_brake_effort_single` int(11) DEFAULT NULL,
  `parking_brake_lock_nearside` tinyint(4) DEFAULT NULL,
  `parking_brake_lock_offside` tinyint(4) DEFAULT NULL,
  `parking_brake_lock_secondary_nearside` tinyint(4) DEFAULT NULL,
  `parking_brake_lock_secondary_offside` tinyint(4) DEFAULT NULL,
  `parking_brake_lock_single` tinyint(4) DEFAULT NULL,
  `service_brake_is_single_line` tinyint(4) DEFAULT NULL,
  `is_single_in_front` tinyint(4) unsigned DEFAULT NULL,
  `is_commercial_vehicle` tinyint(4) DEFAULT NULL,
  `vehicle_weight` int(10) unsigned DEFAULT NULL,
  `weight_type_id` smallint(5) unsigned DEFAULT NULL,
  `weight_is_unladen` tinyint(4) DEFAULT NULL,
  `service_brake_1_efficiency` smallint(5) unsigned DEFAULT NULL,
  `service_brake_2_efficiency` smallint(5) unsigned DEFAULT NULL,
  `parking_brake_efficiency` smallint(5) unsigned DEFAULT NULL,
  `service_brake_1_efficiency_pass` tinyint(4) DEFAULT NULL,
  `service_brake_2_efficiency_pass` tinyint(4) DEFAULT NULL,
  `parking_brake_efficiency_pass` tinyint(4) DEFAULT NULL,
  `parking_brake_imbalance` tinyint(4) DEFAULT NULL,
  `parking_brake_secondary_imbalance` tinyint(4) DEFAULT NULL,
  `parking_brake_imbalance_pass` tinyint(4) DEFAULT NULL,
  `general_pass` tinyint(4) DEFAULT NULL,
  `is_latest` tinyint(4) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_brake_test_result_class_3_and_above_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:07';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `brake_test_result_service_brake_data`
--

DROP TABLE IF EXISTS `brake_test_result_service_brake_data`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `brake_test_result_service_brake_data` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `effort_nearside_axle1` int(11) DEFAULT NULL,
  `effort_offside_axle1` int(11) DEFAULT NULL,
  `effort_nearside_axle2` int(11) DEFAULT NULL,
  `effort_offside_axle2` int(11) DEFAULT NULL,
  `effort_nearside_axle3` int(11) DEFAULT NULL,
  `effort_offside_axle3` int(11) DEFAULT NULL,
  `effort_single` int(11) DEFAULT NULL,
  `lock_nearside_axle1` tinyint(4) DEFAULT NULL,
  `lock_offside_axle1` tinyint(4) DEFAULT NULL,
  `lock_nearside_axle2` tinyint(4) DEFAULT NULL,
  `lock_offside_axle2` tinyint(4) DEFAULT NULL,
  `lock_nearside_axle3` tinyint(4) DEFAULT NULL,
  `lock_offside_axle3` tinyint(4) DEFAULT NULL,
  `lock_single` tinyint(4) DEFAULT NULL,
  `imbalance_axle1` tinyint(4) DEFAULT NULL,
  `imbalance_axle2` tinyint(4) DEFAULT NULL,
  `imbalance_axle3` tinyint(4) DEFAULT NULL,
  `imbalance_pass` tinyint(4) DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Record of service brake inputs and results';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_brake_test_result_service_brake_data_bi`
BEFORE INSERT ON `mot2`.`brake_test_result_service_brake_data`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_brake_test_result_service_brake_data_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_brake_test_result_service_brake_data_bu`
BEFORE UPDATE ON `mot2`.`brake_test_result_service_brake_data`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_brake_test_result_service_brake_data_bu Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_brake_test_result_service_brake_data_au`
AFTER UPDATE ON `mot2`.`brake_test_result_service_brake_data`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_brake_test_result_service_brake_data_au Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`brake_test_result_service_brake_data_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`effort_nearside_axle1`
        ,`effort_offside_axle1`
        ,`effort_nearside_axle2`
        ,`effort_offside_axle2`
        ,`effort_nearside_axle3`
        ,`effort_offside_axle3`
        ,`effort_single`
        ,`lock_nearside_axle1`
        ,`lock_offside_axle1`
        ,`lock_nearside_axle2`
        ,`lock_offside_axle2`
        ,`lock_nearside_axle3`
        ,`lock_offside_axle3`
        ,`lock_single`
        ,`imbalance_axle1`
        ,`imbalance_axle2`
        ,`imbalance_axle3`
        ,`imbalance_pass`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`effort_nearside_axle1`
        ,OLD.`effort_offside_axle1`
        ,OLD.`effort_nearside_axle2`
        ,OLD.`effort_offside_axle2`
        ,OLD.`effort_nearside_axle3`
        ,OLD.`effort_offside_axle3`
        ,OLD.`effort_single`
        ,OLD.`lock_nearside_axle1`
        ,OLD.`lock_offside_axle1`
        ,OLD.`lock_nearside_axle2`
        ,OLD.`lock_offside_axle2`
        ,OLD.`lock_nearside_axle3`
        ,OLD.`lock_offside_axle3`
        ,OLD.`lock_single`
        ,OLD.`imbalance_axle1`
        ,OLD.`imbalance_axle2`
        ,OLD.`imbalance_axle3`
        ,OLD.`imbalance_pass`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_brake_test_result_service_brake_data_bd`
BEFORE DELETE ON `mot2`.`brake_test_result_service_brake_data`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_brake_test_result_service_brake_data_bd Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`brake_test_result_service_brake_data_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`effort_nearside_axle1`
        ,`effort_offside_axle1`
        ,`effort_nearside_axle2`
        ,`effort_offside_axle2`
        ,`effort_nearside_axle3`
        ,`effort_offside_axle3`
        ,`effort_single`
        ,`lock_nearside_axle1`
        ,`lock_offside_axle1`
        ,`lock_nearside_axle2`
        ,`lock_offside_axle2`
        ,`lock_nearside_axle3`
        ,`lock_offside_axle3`
        ,`lock_single`
        ,`imbalance_axle1`
        ,`imbalance_axle2`
        ,`imbalance_axle3`
        ,`imbalance_pass`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`effort_nearside_axle1`
        ,OLD.`effort_offside_axle1`
        ,OLD.`effort_nearside_axle2`
        ,OLD.`effort_offside_axle2`
        ,OLD.`effort_nearside_axle3`
        ,OLD.`effort_offside_axle3`
        ,OLD.`effort_single`
        ,OLD.`lock_nearside_axle1`
        ,OLD.`lock_offside_axle1`
        ,OLD.`lock_nearside_axle2`
        ,OLD.`lock_offside_axle2`
        ,OLD.`lock_nearside_axle3`
        ,OLD.`lock_offside_axle3`
        ,OLD.`lock_single`
        ,OLD.`imbalance_axle1`
        ,OLD.`imbalance_axle2`
        ,OLD.`imbalance_axle3`
        ,OLD.`imbalance_pass`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `brake_test_result_service_brake_data_hist`
--

DROP TABLE IF EXISTS `brake_test_result_service_brake_data_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `brake_test_result_service_brake_data_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` bigint(20) unsigned DEFAULT NULL,
  `effort_nearside_axle1` int(11) DEFAULT NULL,
  `effort_offside_axle1` int(11) DEFAULT NULL,
  `effort_nearside_axle2` int(11) DEFAULT NULL,
  `effort_offside_axle2` int(11) DEFAULT NULL,
  `effort_nearside_axle3` int(11) DEFAULT NULL,
  `effort_offside_axle3` int(11) DEFAULT NULL,
  `effort_single` int(11) DEFAULT NULL,
  `lock_nearside_axle1` tinyint(4) DEFAULT NULL,
  `lock_offside_axle1` tinyint(4) DEFAULT NULL,
  `lock_nearside_axle2` tinyint(4) DEFAULT NULL,
  `lock_offside_axle2` tinyint(4) DEFAULT NULL,
  `lock_nearside_axle3` tinyint(4) DEFAULT NULL,
  `lock_offside_axle3` tinyint(4) DEFAULT NULL,
  `lock_single` tinyint(4) DEFAULT NULL,
  `imbalance_axle1` tinyint(4) DEFAULT NULL,
  `imbalance_axle2` tinyint(4) DEFAULT NULL,
  `imbalance_axle3` tinyint(4) DEFAULT NULL,
  `imbalance_pass` tinyint(4) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_brake_test_result_service_brake_data_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:07';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `brake_test_type`
--

DROP TABLE IF EXISTS `brake_test_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `brake_test_type` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `description` varchar(250) NOT NULL,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `display_order` smallint(5) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_brake_test_type_name` (`name`),
  UNIQUE KEY `uk_brake_test_type_code` (`code`),
  UNIQUE KEY `uk_brake_test_type_display_order` (`display_order`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation of types of brake test';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_brake_test_type_bi`
BEFORE INSERT ON `mot2`.`brake_test_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_brake_test_type_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `business_role_status`
--

DROP TABLE IF EXISTS `business_role_status`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `business_role_status` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Status of a business role in the system';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_business_role_status_bi`
BEFORE INSERT ON `mot2`.`business_role_status`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_business_role_status_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `business_rule`
--

DROP TABLE IF EXISTS `business_rule`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `business_rule` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `definition` text,
  `business_rule_type_id` smallint(5) unsigned NOT NULL,
  `comparison` varchar(2) DEFAULT NULL,
  `date_value` date DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_rfr_business_rule_rfr_rule_type1` (`business_rule_type_id`),
  CONSTRAINT `fk_rfr_business_rule_rfr_rule_type1` FOREIGN KEY (`business_rule_type_id`) REFERENCES `business_rule_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='These are for filtering the RFR/Category to make them more appropriate for the vehicle';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_business_rule_bi`
BEFORE INSERT ON `mot2`.`business_rule`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_business_rule_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `business_rule_type`
--

DROP TABLE IF EXISTS `business_rule_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `business_rule_type` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Simple - only filter by class, Parameter - filter by class and first used date, Complex - any other rule';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_business_rule_type_bi`
BEFORE INSERT ON `mot2`.`business_rule_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_business_rule_type_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `card_payment_token_usage`
--

DROP TABLE IF EXISTS `card_payment_token_usage`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `card_payment_token_usage` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `token` varchar(50) NOT NULL,
  `status` varchar(50) NOT NULL,
  `payment_id` int(10) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_card_payment_token_usage_payment` (`payment_id`),
  CONSTRAINT `fk_card_payment_token_usage_payment` FOREIGN KEY (`payment_id`) REFERENCES `payment` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Duplicate of test_slot_transaction?';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_card_payment_token_usage_bi`
BEFORE INSERT ON `mot2`.`card_payment_token_usage`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_card_payment_token_usage_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `censor_blacklist`
--

DROP TABLE IF EXISTS `censor_blacklist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `censor_blacklist` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `phrase` varchar(100) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `phrase` (`phrase`)
) ENGINE=InnoDB AUTO_INCREMENT=343 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='List of blacklisted words which the system can use to filter input to the system';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_censor_blacklist_bi`
BEFORE INSERT ON `mot2`.`censor_blacklist`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_censor_blacklist_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `certificate_change_different_tester_reason_lookup`
--

DROP TABLE IF EXISTS `certificate_change_different_tester_reason_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `certificate_change_different_tester_reason_lookup` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `code` varchar(5) NOT NULL,
  `description` varchar(100) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation of why a certificate replacement is being performed by a different tester';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_certificate_change_different_tester_reason_lookup_bi`
BEFORE INSERT ON `mot2`.`certificate_change_different_tester_reason_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_certificate_change_different_tester_reason_lookup_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `certificate_replacement`
--

DROP TABLE IF EXISTS `certificate_replacement`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `certificate_replacement` (
  `id` bigint(10) unsigned NOT NULL AUTO_INCREMENT,
  `mot_test_id` bigint(20) unsigned NOT NULL,
  `mot_test_version` int(10) unsigned NOT NULL COMMENT 'version of test to identify record in history table if not current record',
  `different_tester_reason_id` smallint(5) unsigned DEFAULT NULL COMMENT 'TODO: should be NOT NULL according to SDM',
  `document_id` bigint(20) unsigned DEFAULT NULL,
  `certificate_type_id` bigint(20) unsigned DEFAULT NULL,
  `tester_person_id` int(10) unsigned DEFAULT NULL COMMENT 'Person who entered/completed the test/certificate reissue data',
  `reason` text,
  `is_vin_vrm_expiry_changed` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `include_in_mismatch_file` tinyint(4) DEFAULT '0',
  `include_in_passes_file` tinyint(4) DEFAULT '0',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `certificate_replacement_created_on_is_vin_vrm_expiry_changed_idx` (`created_on`,`is_vin_vrm_expiry_changed`),
  KEY `fk_certificate_replacement_document_id` (`document_id`),
  KEY `fk_certificate_replacement_mot_test_id` (`mot_test_id`),
  KEY `fk_certificate_replacement_person_different_tester_reason_id` (`different_tester_reason_id`),
  KEY `fk_certificate_replacement_person_tester_person_id` (`tester_person_id`),
  KEY `ix_certificate_replacement_certificate_type_id` (`certificate_type_id`),
  CONSTRAINT `fk_certificate_replacement_document_id` FOREIGN KEY (`document_id`) REFERENCES `jasper_document` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_certificate_replacement_mot_test_id` FOREIGN KEY (`mot_test_id`) REFERENCES `mot_test` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_certificate_replacement_person_different_tester_reason_id` FOREIGN KEY (`different_tester_reason_id`) REFERENCES `certificate_change_different_tester_reason_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_certificate_replacement_person_tester_person_id` FOREIGN KEY (`tester_person_id`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `ix_certificate_replacement_certificate_type_id` FOREIGN KEY (`certificate_type_id`) REFERENCES `certificate_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_certificate_replacement_bi`
BEFORE INSERT ON `mot2`.`certificate_replacement`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_certificate_replacement_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_certificate_replacement_bu`
BEFORE UPDATE ON `mot2`.`certificate_replacement`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_certificate_replacement_bu Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_certificate_replacement_au`
AFTER UPDATE ON `mot2`.`certificate_replacement`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_certificate_replacement_au Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`certificate_replacement_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`mot_test_id`
        ,`mot_test_version`
        ,`different_tester_reason_id`
        ,`document_id`
        ,`certificate_type_id`
        ,`tester_person_id`
        ,`reason`
        ,`is_vin_vrm_expiry_changed`
        ,`include_in_mismatch_file`
        ,`include_in_passes_file`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`mot_test_id`
        ,OLD.`mot_test_version`
        ,OLD.`different_tester_reason_id`
        ,OLD.`document_id`
        ,OLD.`certificate_type_id`
        ,OLD.`tester_person_id`
        ,OLD.`reason`
        ,OLD.`is_vin_vrm_expiry_changed`
        ,OLD.`include_in_mismatch_file`
        ,OLD.`include_in_passes_file`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_certificate_replacement_bd`
BEFORE DELETE ON `mot2`.`certificate_replacement`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_certificate_replacement_bd Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`certificate_replacement_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`mot_test_id`
        ,`mot_test_version`
        ,`different_tester_reason_id`
        ,`document_id`
        ,`certificate_type_id`
        ,`tester_person_id`
        ,`reason`
        ,`is_vin_vrm_expiry_changed`
        ,`include_in_mismatch_file`
        ,`include_in_passes_file`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`mot_test_id`
        ,OLD.`mot_test_version`
        ,OLD.`different_tester_reason_id`
        ,OLD.`document_id`
        ,OLD.`certificate_type_id`
        ,OLD.`tester_person_id`
        ,OLD.`reason`
        ,OLD.`is_vin_vrm_expiry_changed`
        ,OLD.`include_in_mismatch_file`
        ,OLD.`include_in_passes_file`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `certificate_replacement_hist`
--

DROP TABLE IF EXISTS `certificate_replacement_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `certificate_replacement_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` bigint(10) unsigned DEFAULT NULL,
  `mot_test_id` bigint(20) unsigned DEFAULT NULL,
  `mot_test_version` int(10) unsigned DEFAULT NULL,
  `different_tester_reason_id` smallint(5) unsigned DEFAULT NULL,
  `document_id` bigint(20) unsigned DEFAULT NULL,
  `certificate_type_id` bigint(20) unsigned DEFAULT NULL,
  `tester_person_id` int(10) unsigned DEFAULT NULL,
  `reason` text,
  `is_vin_vrm_expiry_changed` tinyint(3) unsigned DEFAULT NULL,
  `include_in_mismatch_file` tinyint(4) DEFAULT NULL,
  `include_in_passes_file` tinyint(4) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_certificate_replacement_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:07';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `certificate_status`
--

DROP TABLE IF EXISTS `certificate_status`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `certificate_status` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(30) NOT NULL,
  `display_order` smallint(5) unsigned NOT NULL DEFAULT '1',
  `code` varchar(5) DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation of the MOT test status';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_certificate_status_bi`
BEFORE INSERT ON `mot2`.`certificate_status`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_certificate_status_bi Generated on 2016-07-04 12:27:09. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `certificate_type`
--

DROP TABLE IF EXISTS `certificate_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `certificate_type` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `display_order` smallint(5) unsigned DEFAULT NULL,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) DEFAULT NULL,
  `last_updated_on` timestamp(6) NULL DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_certificate_type_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation of the MOT test type';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_certificate_type_bi`
BEFORE INSERT ON `mot2`.`certificate_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_certificate_type_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `colour_lookup`
--

DROP TABLE IF EXISTS `colour_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `colour_lookup` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `code` varchar(5) NOT NULL,
  `name` varchar(50) NOT NULL,
  `display_order` smallint(5) unsigned NOT NULL DEFAULT '1',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DVLA vehicle colours';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_colour_lookup_bi`
BEFORE INSERT ON `mot2`.`colour_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_colour_lookup_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `comment`
--

DROP TABLE IF EXISTS `comment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `comment` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment` text NOT NULL,
  `author_person_id` int(10) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_comment_person_id` (`author_person_id`),
  CONSTRAINT `fk_comment_person_id` FOREIGN KEY (`author_person_id`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Records comments made about various entities in the system';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_comment_bi`
BEFORE INSERT ON `mot2`.`comment`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_comment_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_comment_bu`
BEFORE UPDATE ON `mot2`.`comment`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_comment_bu Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_comment_au`
AFTER UPDATE ON `mot2`.`comment`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_comment_au Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`comment_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`comment`
        ,`author_person_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`comment`
        ,OLD.`author_person_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_comment_bd`
BEFORE DELETE ON `mot2`.`comment`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_comment_bd Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`comment_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`comment`
        ,`author_person_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`comment`
        ,OLD.`author_person_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `comment_hist`
--

DROP TABLE IF EXISTS `comment_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `comment_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` bigint(20) unsigned DEFAULT NULL,
  `comment` text,
  `author_person_id` int(10) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_comment_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:07';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `company_type`
--

DROP TABLE IF EXISTS `company_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `company_type` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_company_type_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation of an organisations legal status';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_company_type_bi`
BEFORE INSERT ON `mot2`.`company_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_company_type_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_company_type_bu`
BEFORE UPDATE ON `mot2`.`company_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_company_type_bu Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_company_type_au`
AFTER UPDATE ON `mot2`.`company_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_company_type_au Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`company_type_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`name`
        ,`code`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`name`
        ,OLD.`code`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_company_type_bd`
BEFORE DELETE ON `mot2`.`company_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_company_type_bd Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`company_type_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`name`
        ,`code`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`name`
        ,OLD.`code`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `company_type_hist`
--

DROP TABLE IF EXISTS `company_type_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `company_type_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` smallint(5) unsigned DEFAULT NULL,
  `name` varchar(50) DEFAULT NULL,
  `code` varchar(5) CHARACTER SET latin1 DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_company_type_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:07';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `configuration`
--

DROP TABLE IF EXISTS `configuration`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `configuration` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `key` varchar(50) NOT NULL,
  `value` varchar(50) DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=38 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Configurable values within the system that can be changed without a redeployment';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_configuration_bi`
BEFORE INSERT ON `mot2`.`configuration`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_configuration_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_configuration_bu`
BEFORE UPDATE ON `mot2`.`configuration`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_configuration_bu Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_configuration_au`
AFTER UPDATE ON `mot2`.`configuration`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_configuration_au Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`configuration_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`key`
        ,`value`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`key`
        ,OLD.`value`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_configuration_bd`
BEFORE DELETE ON `mot2`.`configuration`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_configuration_bd Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`configuration_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`key`
        ,`value`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`key`
        ,OLD.`value`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `configuration_hist`
--

DROP TABLE IF EXISTS `configuration_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `configuration_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `key` varchar(50) DEFAULT NULL,
  `value` varchar(50) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_configuration_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:07';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `contact_detail`
--

DROP TABLE IF EXISTS `contact_detail`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `contact_detail` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `for_attention_of` varchar(50) DEFAULT NULL,
  `address_id` int(10) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_contact_detail_address` (`address_id`),
  CONSTRAINT `fk_contact_detail_address` FOREIGN KEY (`address_id`) REFERENCES `address` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=25024 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Container object to link all the contact elements, such as address, phone and email.';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_contact_detail_bi`
BEFORE INSERT ON `mot2`.`contact_detail`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_contact_detail_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_contact_detail_bu`
BEFORE UPDATE ON `mot2`.`contact_detail`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_contact_detail_bu Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_contact_detail_au`
AFTER UPDATE ON `mot2`.`contact_detail`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_contact_detail_au Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`contact_detail_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`for_attention_of`
        ,`address_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`for_attention_of`
        ,OLD.`address_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_contact_detail_bd`
BEFORE DELETE ON `mot2`.`contact_detail`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_contact_detail_bd Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`contact_detail_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`for_attention_of`
        ,`address_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`for_attention_of`
        ,OLD.`address_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `contact_detail_hist`
--

DROP TABLE IF EXISTS `contact_detail_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `contact_detail_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `for_attention_of` varchar(50) DEFAULT NULL,
  `address_id` int(10) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_contact_detail_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:07';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `contact_type`
--

DROP TABLE IF EXISTS `contact_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `contact_type` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) DEFAULT NULL,
  `code` varchar(5) DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_contact_type_bi`
BEFORE INSERT ON `mot2`.`contact_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_contact_type_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `content_type`
--

DROP TABLE IF EXISTS `content_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `content_type` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_content_type_bi`
BEFORE INSERT ON `mot2`.`content_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_content_type_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `conviction`
--

DROP TABLE IF EXISTS `conviction`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `conviction` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `application_id` int(10) unsigned NOT NULL,
  `reference` varchar(100) NOT NULL,
  `date_time` date NOT NULL,
  `court` varchar(50) NOT NULL,
  `offence` varchar(50) NOT NULL,
  `creation_time` datetime(6) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_conviction_application` (`application_id`),
  CONSTRAINT `fk_conviction_application` FOREIGN KEY (`application_id`) REFERENCES `application` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Conviction held by a person. Used in the application process.';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_conviction_bi`
BEFORE INSERT ON `mot2`.`conviction`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_conviction_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `country_lookup`
--

DROP TABLE IF EXISTS `country_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `country_lookup` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  `display_order` smallint(5) unsigned DEFAULT NULL,
  `iso_code` varchar(5) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_country_lookup_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=261 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation of the country of registration for a vehicle and certificate replacement records';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_country_lookup_bi`
BEFORE INSERT ON `mot2`.`country_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_country_lookup_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_country_lookup_bu`
BEFORE UPDATE ON `mot2`.`country_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_country_lookup_bu Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_country_lookup_au`
AFTER UPDATE ON `mot2`.`country_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_country_lookup_au Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`country_lookup_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`name`
        ,`code`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`
        ,`display_order`
        ,`iso_code`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`name`
        ,OLD.`code`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`
        ,OLD.`display_order`
        ,OLD.`iso_code`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_country_lookup_bd`
BEFORE DELETE ON `mot2`.`country_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_country_lookup_bd Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`country_lookup_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`name`
        ,`code`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`
        ,`display_order`
        ,`iso_code`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`name`
        ,OLD.`code`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`
        ,OLD.`display_order`
        ,OLD.`iso_code`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `country_lookup_hist`
--

DROP TABLE IF EXISTS `country_lookup_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `country_lookup_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` smallint(5) unsigned DEFAULT NULL,
  `name` varchar(50) DEFAULT NULL,
  `code` varchar(5) CHARACTER SET latin1 DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  `display_order` smallint(5) unsigned DEFAULT NULL,
  `iso_code` varchar(5) DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_country_lookup_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:07';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `country_of_registration_lookup`
--

DROP TABLE IF EXISTS `country_of_registration_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `country_of_registration_lookup` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `country_lookup_id` smallint(5) unsigned DEFAULT NULL,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `licensing_copy` varchar(5) CHARACTER SET latin1 NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_country_of_registration_lookup_country_lookup_id` (`country_lookup_id`),
  CONSTRAINT `fk_country_of_registration_lookup_country_lookup_id` FOREIGN KEY (`country_lookup_id`) REFERENCES `country_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=37 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_country_of_registration_lookup_bi`
BEFORE INSERT ON `mot2`.`country_of_registration_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_country_of_registration_lookup_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `cpms_notification`
--

DROP TABLE IF EXISTS `cpms_notification`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `cpms_notification` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `notification_id` varchar(36) NOT NULL COMMENT 'This ID is generated by CPMS, and is independent of any message ID generated by the underlying queueing software',
  `type_id` bigint(20) unsigned NOT NULL COMMENT 'Notification type is currently mandate or payment',
  `scope_id` bigint(20) unsigned NOT NULL COMMENT 'Payment Scopes is the CPMS term for the different types of payment that are supported by MOT et al',
  `status_id` bigint(20) unsigned NOT NULL COMMENT 'This is a status internal to us which stores whether the notification has been processed by us',
  `receipt_reference` varchar(32) DEFAULT NULL COMMENT 'The unique ID of this payment',
  `mandate_reference` varchar(32) DEFAULT NULL COMMENT 'If the payment scope is direct debit, this will contain the reference to the associated mandate',
  `received_count` int(10) unsigned NOT NULL DEFAULT '1' COMMENT 'The number of times this notification was sent by CPMS (includes the original message and its duplicates)',
  `raw_notification` text NOT NULL COMMENT 'The raw JSON payload from CPMS',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `notification_id` (`notification_id`),
  KEY `ix_cpms_notification_scope_id_cpms_notification_scope_id` (`scope_id`),
  KEY `ix_cpms_notification_status_id_cpms_notification_status_id` (`status_id`),
  KEY `ix_cpms_notification_type_id_cpms_notification_type_id` (`type_id`),
  CONSTRAINT `ix_cpms_notification_scope_id_cpms_notification_scope_id` FOREIGN KEY (`scope_id`) REFERENCES `cpms_notification_scope` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `ix_cpms_notification_status_id_cpms_notification_status_id` FOREIGN KEY (`status_id`) REFERENCES `cpms_notification_status` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `ix_cpms_notification_type_id_cpms_notification_type_id` FOREIGN KEY (`type_id`) REFERENCES `cpms_notification_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_cpms_notification_bi`
BEFORE INSERT ON `mot2`.`cpms_notification`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_cpms_notification_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `cpms_notification_scope`
--

DROP TABLE IF EXISTS `cpms_notification_scope`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `cpms_notification_scope` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(30) NOT NULL,
  `code` varchar(20) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `ix_cpms_notification_scope_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=36 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_cpms_notification_scope_bi`
BEFORE INSERT ON `mot2`.`cpms_notification_scope`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_cpms_notification_scope_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `cpms_notification_status`
--

DROP TABLE IF EXISTS `cpms_notification_status`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `cpms_notification_status` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(20) NOT NULL,
  `code` varchar(5) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `ix_cpms_notification_status_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_cpms_notification_status_bi`
BEFORE INSERT ON `mot2`.`cpms_notification_status`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_cpms_notification_status_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `cpms_notification_type`
--

DROP TABLE IF EXISTS `cpms_notification_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `cpms_notification_type` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(20) NOT NULL,
  `code` varchar(5) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `ix_cpms_notification_type_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_cpms_notification_type_bi`
BEFORE INSERT ON `mot2`.`cpms_notification_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_cpms_notification_type_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `ctrl_sequence`
--

DROP TABLE IF EXISTS `ctrl_sequence`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ctrl_sequence` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `sequence_name` varchar(50) NOT NULL,
  `code` varchar(10) NOT NULL COMMENT 'Unique code for the app to identify the desired sequence',
  `prefix_str` varchar(50) DEFAULT NULL COMMENT 'An optional string to prefix to the sequence',
  `padding` tinyint(3) unsigned DEFAULT '0' COMMENT 'Optional padding for zero-padded strings. Use 0 for no padding',
  `sequence_number` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'The actual sequence value used to generate the sequence',
  `increment_val` smallint(6) NOT NULL DEFAULT '1' COMMENT 'The increment value to add to the sequence',
  `min_val` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'The minimum value for the sequence',
  `max_val` int(10) unsigned NOT NULL COMMENT 'The maximum value for the sequence',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) DEFAULT NULL,
  `last_updated_on` timestamp(6) NULL DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_ctrl_sequence_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Sequences used by the application: use the sp_sequence(:code) stored procedure to get the next sequence to use';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_ctrl_sequence_bi`
BEFORE INSERT ON `mot2`.`ctrl_sequence`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_ctrl_sequence_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `database_version`
--

DROP TABLE IF EXISTS `database_version`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `database_version` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `version_name` varchar(255) NOT NULL,
  `applied_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `direct_debit`
--

DROP TABLE IF EXISTS `direct_debit`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `direct_debit` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `organisation_id` int(10) unsigned NOT NULL,
  `person_id` int(10) unsigned NOT NULL,
  `status_id` smallint(5) unsigned NOT NULL,
  `mandate_reference` varchar(50) DEFAULT NULL COMMENT 'Unique reference to direct debit mandate created in CPMS',
  `unique_identifier` varchar(8) DEFAULT NULL COMMENT 'Last 8 char of mandate_reference searched on',
  `slots` int(10) unsigned NOT NULL,
  `setup_date` datetime NOT NULL,
  `next_collection_date` date NOT NULL,
  `last_increment_date` date DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  `is_active` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`id`),
  UNIQUE KEY `mandate_id` (`mandate_reference`),
  UNIQUE KEY `ux_direct_debit_mandate_reference_id` (`mandate_reference`,`id`),
  KEY `direct_debit_status_id_is_active_next_collection_date_idx` (`status_id`,`is_active`,`next_collection_date`),
  KEY `direct_debit_unique_identifier_idx` (`unique_identifier`),
  KEY `fk_direct_debit_organisation` (`organisation_id`),
  KEY `fk_direct_debit_person` (`person_id`),
  CONSTRAINT `fk_direct_debit_organisation` FOREIGN KEY (`organisation_id`) REFERENCES `organisation` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_direct_debit_person` FOREIGN KEY (`person_id`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_direct_debit_status` FOREIGN KEY (`status_id`) REFERENCES `direct_debit_status` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Direct debit mandates of organisations wanting to purchase slots regularly';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_direct_debit_bi`
BEFORE INSERT ON `mot2`.`direct_debit`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_direct_debit_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_direct_debit_bu`
BEFORE UPDATE ON `mot2`.`direct_debit`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_direct_debit_bu Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_direct_debit_au`
AFTER UPDATE ON `mot2`.`direct_debit`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_direct_debit_au Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`direct_debit_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`organisation_id`
        ,`person_id`
        ,`status_id`
        ,`mandate_reference`
        ,`unique_identifier`
        ,`slots`
        ,`setup_date`
        ,`next_collection_date`
        ,`last_increment_date`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`
        ,`is_active`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`organisation_id`
        ,OLD.`person_id`
        ,OLD.`status_id`
        ,OLD.`mandate_reference`
        ,OLD.`unique_identifier`
        ,OLD.`slots`
        ,OLD.`setup_date`
        ,OLD.`next_collection_date`
        ,OLD.`last_increment_date`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`
        ,OLD.`is_active`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_direct_debit_bd`
BEFORE DELETE ON `mot2`.`direct_debit`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_direct_debit_bd Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`direct_debit_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`organisation_id`
        ,`person_id`
        ,`status_id`
        ,`mandate_reference`
        ,`unique_identifier`
        ,`slots`
        ,`setup_date`
        ,`next_collection_date`
        ,`last_increment_date`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`
        ,`is_active`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`organisation_id`
        ,OLD.`person_id`
        ,OLD.`status_id`
        ,OLD.`mandate_reference`
        ,OLD.`unique_identifier`
        ,OLD.`slots`
        ,OLD.`setup_date`
        ,OLD.`next_collection_date`
        ,OLD.`last_increment_date`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`
        ,OLD.`is_active`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `direct_debit_hist`
--

DROP TABLE IF EXISTS `direct_debit_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `direct_debit_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `organisation_id` int(10) unsigned DEFAULT NULL,
  `person_id` int(10) unsigned DEFAULT NULL,
  `status_id` smallint(5) unsigned DEFAULT NULL,
  `mandate_reference` varchar(50) DEFAULT NULL,
  `unique_identifier` varchar(8) DEFAULT NULL,
  `slots` int(10) unsigned DEFAULT NULL,
  `setup_date` datetime DEFAULT NULL,
  `next_collection_date` date DEFAULT NULL,
  `last_increment_date` date DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  `is_active` tinyint(1) DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_direct_debit_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:07';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `direct_debit_history`
--

DROP TABLE IF EXISTS `direct_debit_history`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `direct_debit_history` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `direct_debit_id` int(10) unsigned NOT NULL,
  `transaction_id` int(10) unsigned DEFAULT NULL,
  `status_id` smallint(5) unsigned NOT NULL,
  `increment_date` datetime NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_direct_debit_history_dd_id` (`direct_debit_id`),
  KEY `fk_direct_debit_history_status` (`status_id`),
  KEY `fk_direct_debit_history_transaction` (`transaction_id`),
  CONSTRAINT `fk_direct_debit_history_dd_id` FOREIGN KEY (`direct_debit_id`) REFERENCES `direct_debit` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_direct_debit_history_status` FOREIGN KEY (`status_id`) REFERENCES `direct_debit_history_status` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_direct_debit_history_transaction` FOREIGN KEY (`transaction_id`) REFERENCES `test_slot_transaction` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_direct_debit_history_bi`
BEFORE INSERT ON `mot2`.`direct_debit_history`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_direct_debit_history_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `direct_debit_history_status`
--

DROP TABLE IF EXISTS `direct_debit_history_status`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `direct_debit_history_status` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_direct_debit_history_status_bi`
BEFORE INSERT ON `mot2`.`direct_debit_history_status`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_direct_debit_history_status_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `direct_debit_status`
--

DROP TABLE IF EXISTS `direct_debit_status`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `direct_debit_status` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  `cpms_code` varchar(5) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation of status of direct debit mandate';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_direct_debit_status_bi`
BEFORE INSERT ON `mot2`.`direct_debit_status`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_direct_debit_status_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `dvla_make`
--

DROP TABLE IF EXISTS `dvla_make`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `dvla_make` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_dvla_make_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=100020 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DVLA vehicle makes';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_dvla_make_bi`
BEFORE INSERT ON `mot2`.`dvla_make`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_dvla_make_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_dvla_make_bu`
BEFORE UPDATE ON `mot2`.`dvla_make`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_dvla_make_bu Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_dvla_make_au`
AFTER UPDATE ON `mot2`.`dvla_make`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_dvla_make_au Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`dvla_make_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`name`
        ,`code`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`name`
        ,OLD.`code`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_dvla_make_bd`
BEFORE DELETE ON `mot2`.`dvla_make`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_dvla_make_bd Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`dvla_make_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`name`
        ,`code`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`name`
        ,OLD.`code`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `dvla_make_hist`
--

DROP TABLE IF EXISTS `dvla_make_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `dvla_make_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `name` varchar(50) DEFAULT NULL,
  `code` varchar(5) CHARACTER SET latin1 DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_dvla_make_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:07';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `dvla_model`
--

DROP TABLE IF EXISTS `dvla_model`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `dvla_model` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) DEFAULT NULL COMMENT 'Sometimes not provided during DVLA batch import process',
  `make_code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_dvla_model_make_model_code` (`make_code`,`code`),
  CONSTRAINT `fk_dvla_model_dvla_make_code` FOREIGN KEY (`make_code`) REFERENCES `dvla_make` (`code`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=106783 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DVLA vehicle models';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_dvla_model_bi`
BEFORE INSERT ON `mot2`.`dvla_model`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_dvla_model_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_dvla_model_bu`
BEFORE UPDATE ON `mot2`.`dvla_model`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_dvla_model_bu Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_dvla_model_au`
AFTER UPDATE ON `mot2`.`dvla_model`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_dvla_model_au Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`dvla_model_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`name`
        ,`make_code`
        ,`code`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`name`
        ,OLD.`make_code`
        ,OLD.`code`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_dvla_model_bd`
BEFORE DELETE ON `mot2`.`dvla_model`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_dvla_model_bd Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`dvla_model_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`name`
        ,`make_code`
        ,`code`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`name`
        ,OLD.`make_code`
        ,OLD.`code`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `dvla_model_hist`
--

DROP TABLE IF EXISTS `dvla_model_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `dvla_model_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `name` varchar(50) DEFAULT NULL,
  `make_code` varchar(5) CHARACTER SET latin1 DEFAULT NULL,
  `code` varchar(5) CHARACTER SET latin1 DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_dvla_model_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:07';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `dvla_model_model_detail_code_map`
--

DROP TABLE IF EXISTS `dvla_model_model_detail_code_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `dvla_model_model_detail_code_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `dvla_make_code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `dvla_model_code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `make_id` int(10) unsigned NOT NULL,
  `model_id` int(10) unsigned DEFAULT NULL,
  `vsi_code` varchar(10) DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_dvla_model_model_detail_code_map_dvla_model_code` (`dvla_make_code`,`dvla_model_code`),
  KEY `fk_dvla_model_model_detail_code_map_make` (`make_id`),
  KEY `fk_dvla_model_model_detail_code_map_model` (`model_id`),
  CONSTRAINT `fk_dvla_model_model_detail_code_map_dvla_make_code` FOREIGN KEY (`dvla_make_code`) REFERENCES `dvla_make` (`code`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_dvla_model_model_detail_code_map_dvla_model_code` FOREIGN KEY (`dvla_make_code`, `dvla_model_code`) REFERENCES `dvla_model` (`make_code`, `code`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_dvla_model_model_detail_code_map_make` FOREIGN KEY (`make_id`) REFERENCES `make` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_dvla_model_model_detail_code_map_model` FOREIGN KEY (`model_id`) REFERENCES `model` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_dvla_model_model_detail_code_map_bi`
BEFORE INSERT ON `mot2`.`dvla_model_model_detail_code_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_dvla_model_model_detail_code_map_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_dvla_model_model_detail_code_map_bu`
BEFORE UPDATE ON `mot2`.`dvla_model_model_detail_code_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_dvla_model_model_detail_code_map_bu Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_dvla_model_model_detail_code_map_au`
AFTER UPDATE ON `mot2`.`dvla_model_model_detail_code_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_dvla_model_model_detail_code_map_au Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`dvla_model_model_detail_code_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`dvla_make_code`
        ,`dvla_model_code`
        ,`make_id`
        ,`model_id`
        ,`vsi_code`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`dvla_make_code`
        ,OLD.`dvla_model_code`
        ,OLD.`make_id`
        ,OLD.`model_id`
        ,OLD.`vsi_code`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_dvla_model_model_detail_code_map_bd`
BEFORE DELETE ON `mot2`.`dvla_model_model_detail_code_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_dvla_model_model_detail_code_map_bd Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`dvla_model_model_detail_code_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`dvla_make_code`
        ,`dvla_model_code`
        ,`make_id`
        ,`model_id`
        ,`vsi_code`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`dvla_make_code`
        ,OLD.`dvla_model_code`
        ,OLD.`make_id`
        ,OLD.`model_id`
        ,OLD.`vsi_code`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `dvla_model_model_detail_code_map_hist`
--

DROP TABLE IF EXISTS `dvla_model_model_detail_code_map_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `dvla_model_model_detail_code_map_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `dvla_make_code` varchar(5) CHARACTER SET latin1 DEFAULT NULL,
  `dvla_model_code` varchar(5) CHARACTER SET latin1 DEFAULT NULL,
  `make_id` int(10) unsigned DEFAULT NULL,
  `model_id` int(10) unsigned DEFAULT NULL,
  `vsi_code` varchar(10) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_dvla_model_model_detail_code_map_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:07';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `dvla_vehicle`
--

DROP TABLE IF EXISTS `dvla_vehicle`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `dvla_vehicle` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `registration` varchar(7) CHARACTER SET latin1 DEFAULT NULL,
  `registration_collapsed` varchar(13) CHARACTER SET latin1 DEFAULT NULL COMMENT 'registration/VRM with special characters removed by trigger',
  `registration_validation_character` varchar(1) DEFAULT NULL,
  `vin` varchar(20) CHARACTER SET latin1 DEFAULT NULL,
  `vin_collapsed` varchar(20) CHARACTER SET latin1 DEFAULT NULL COMMENT 'vin with special characters removed by trigger',
  `model_code` varchar(5) CHARACTER SET latin1 DEFAULT NULL,
  `make_code` varchar(5) CHARACTER SET latin1 DEFAULT NULL,
  `make_in_full` varchar(20) DEFAULT NULL COMMENT 'Make Full Text populated when the make id and model id are null',
  `colour_1_code` varchar(1) CHARACTER SET latin1 DEFAULT NULL,
  `colour_2_code` varchar(1) CHARACTER SET latin1 DEFAULT NULL,
  `propulsion_code` varchar(2) CHARACTER SET latin1 DEFAULT NULL,
  `designed_gross_weight` int(11) DEFAULT NULL,
  `unladen_weight` int(11) DEFAULT NULL,
  `engine_number` varchar(20) DEFAULT NULL,
  `engine_capacity` int(11) DEFAULT NULL,
  `seating_capacity` smallint(5) unsigned DEFAULT NULL,
  `manufacture_date` date DEFAULT NULL,
  `first_registration_date` date DEFAULT NULL,
  `is_seriously_damaged` tinyint(4) DEFAULT NULL,
  `recent_v5_document_number` varchar(11) DEFAULT NULL,
  `is_vehicle_new_at_first_registration` tinyint(4) DEFAULT NULL,
  `body_type_code` varchar(2) CHARACTER SET latin1 DEFAULT NULL,
  `wheelplan_code` varchar(1) CHARACTER SET latin1 DEFAULT NULL,
  `sva_emission_standard` varchar(6) DEFAULT NULL,
  `ct_related_mark` varchar(13) DEFAULT NULL,
  `vehicle_id` int(10) unsigned DEFAULT NULL,
  `dvla_vehicle_id` int(9) unsigned DEFAULT NULL,
  `eu_classification` varchar(2) DEFAULT NULL,
  `mass_in_service_weight` int(9) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `dvla_vehicle_colour_1_code_idx` (`colour_1_code`),
  KEY `dvla_vehicle_colour_2_code_idx` (`colour_2_code`),
  KEY `dvla_vehicle_dvla_vehicle_id_idx` (`dvla_vehicle_id`),
  KEY `dvla_vehicle_registration_idx` (`registration`),
  KEY `dvla_vehicle_vin_idx` (`vin`),
  KEY `dvla_vehicle_registration_collapsed_idx` (`registration_collapsed`),
  KEY `dvla_vehicle_vin_collapsed_idx` (`vin_collapsed`),
  KEY `fk_dvla_vehicle_vehicle` (`vehicle_id`),
  CONSTRAINT `fk_dvla_vehicle_vehicle` FOREIGN KEY (`vehicle_id`) REFERENCES `vehicle` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=31 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Vehicle data imported from the DVLA';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_dvla_vehicle_bi`
BEFORE INSERT ON `mot2`.`dvla_vehicle`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_dvla_vehicle_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
    SET NEW.`registration_collapsed` = f_collapse(NEW.`registration`);
    SET NEW.`vin_collapsed` = f_collapse(NEW.`vin`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_dvla_vehicle_bu`
BEFORE UPDATE ON `mot2`.`dvla_vehicle`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_dvla_vehicle_bu Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
    SET NEW.`registration_collapsed` = f_collapse(NEW.`registration`);
    SET NEW.`vin_collapsed` = f_collapse(NEW.`vin`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_dvla_vehicle_au`
AFTER UPDATE ON `mot2`.`dvla_vehicle`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_dvla_vehicle_au Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`dvla_vehicle_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`registration`
        ,`registration_collapsed`
        ,`registration_validation_character`
        ,`vin`
        ,`vin_collapsed`
        ,`model_code`
        ,`make_code`
        ,`make_in_full`
        ,`colour_1_code`
        ,`colour_2_code`
        ,`propulsion_code`
        ,`designed_gross_weight`
        ,`unladen_weight`
        ,`engine_number`
        ,`engine_capacity`
        ,`seating_capacity`
        ,`manufacture_date`
        ,`first_registration_date`
        ,`is_seriously_damaged`
        ,`recent_v5_document_number`
        ,`is_vehicle_new_at_first_registration`
        ,`body_type_code`
        ,`wheelplan_code`
        ,`sva_emission_standard`
        ,`ct_related_mark`
        ,`vehicle_id`
        ,`dvla_vehicle_id`
        ,`eu_classification`
        ,`mass_in_service_weight`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`registration`
        ,OLD.`registration_collapsed`
        ,OLD.`registration_validation_character`
        ,OLD.`vin`
        ,OLD.`vin_collapsed`
        ,OLD.`model_code`
        ,OLD.`make_code`
        ,OLD.`make_in_full`
        ,OLD.`colour_1_code`
        ,OLD.`colour_2_code`
        ,OLD.`propulsion_code`
        ,OLD.`designed_gross_weight`
        ,OLD.`unladen_weight`
        ,OLD.`engine_number`
        ,OLD.`engine_capacity`
        ,OLD.`seating_capacity`
        ,OLD.`manufacture_date`
        ,OLD.`first_registration_date`
        ,OLD.`is_seriously_damaged`
        ,OLD.`recent_v5_document_number`
        ,OLD.`is_vehicle_new_at_first_registration`
        ,OLD.`body_type_code`
        ,OLD.`wheelplan_code`
        ,OLD.`sva_emission_standard`
        ,OLD.`ct_related_mark`
        ,OLD.`vehicle_id`
        ,OLD.`dvla_vehicle_id`
        ,OLD.`eu_classification`
        ,OLD.`mass_in_service_weight`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_dvla_vehicle_bd`
BEFORE DELETE ON `mot2`.`dvla_vehicle`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_dvla_vehicle_bd Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`dvla_vehicle_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`registration`
        ,`registration_collapsed`
        ,`registration_validation_character`
        ,`vin`
        ,`vin_collapsed`
        ,`model_code`
        ,`make_code`
        ,`make_in_full`
        ,`colour_1_code`
        ,`colour_2_code`
        ,`propulsion_code`
        ,`designed_gross_weight`
        ,`unladen_weight`
        ,`engine_number`
        ,`engine_capacity`
        ,`seating_capacity`
        ,`manufacture_date`
        ,`first_registration_date`
        ,`is_seriously_damaged`
        ,`recent_v5_document_number`
        ,`is_vehicle_new_at_first_registration`
        ,`body_type_code`
        ,`wheelplan_code`
        ,`sva_emission_standard`
        ,`ct_related_mark`
        ,`vehicle_id`
        ,`dvla_vehicle_id`
        ,`eu_classification`
        ,`mass_in_service_weight`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`registration`
        ,OLD.`registration_collapsed`
        ,OLD.`registration_validation_character`
        ,OLD.`vin`
        ,OLD.`vin_collapsed`
        ,OLD.`model_code`
        ,OLD.`make_code`
        ,OLD.`make_in_full`
        ,OLD.`colour_1_code`
        ,OLD.`colour_2_code`
        ,OLD.`propulsion_code`
        ,OLD.`designed_gross_weight`
        ,OLD.`unladen_weight`
        ,OLD.`engine_number`
        ,OLD.`engine_capacity`
        ,OLD.`seating_capacity`
        ,OLD.`manufacture_date`
        ,OLD.`first_registration_date`
        ,OLD.`is_seriously_damaged`
        ,OLD.`recent_v5_document_number`
        ,OLD.`is_vehicle_new_at_first_registration`
        ,OLD.`body_type_code`
        ,OLD.`wheelplan_code`
        ,OLD.`sva_emission_standard`
        ,OLD.`ct_related_mark`
        ,OLD.`vehicle_id`
        ,OLD.`dvla_vehicle_id`
        ,OLD.`eu_classification`
        ,OLD.`mass_in_service_weight`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `dvla_vehicle_hist`
--

DROP TABLE IF EXISTS `dvla_vehicle_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `dvla_vehicle_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `registration` varchar(7) CHARACTER SET latin1 DEFAULT NULL,
  `registration_collapsed` varchar(13) CHARACTER SET latin1 DEFAULT NULL,
  `registration_validation_character` varchar(1) DEFAULT NULL,
  `vin` varchar(20) CHARACTER SET latin1 DEFAULT NULL,
  `vin_collapsed` varchar(20) CHARACTER SET latin1 DEFAULT NULL,
  `model_code` varchar(5) CHARACTER SET latin1 DEFAULT NULL,
  `make_code` varchar(5) CHARACTER SET latin1 DEFAULT NULL,
  `make_in_full` varchar(20) DEFAULT NULL,
  `colour_1_code` varchar(1) CHARACTER SET latin1 DEFAULT NULL,
  `colour_2_code` varchar(1) CHARACTER SET latin1 DEFAULT NULL,
  `propulsion_code` varchar(2) CHARACTER SET latin1 DEFAULT NULL,
  `designed_gross_weight` int(11) DEFAULT NULL,
  `unladen_weight` int(11) DEFAULT NULL,
  `engine_number` varchar(20) DEFAULT NULL,
  `engine_capacity` int(11) DEFAULT NULL,
  `seating_capacity` smallint(5) unsigned DEFAULT NULL,
  `manufacture_date` date DEFAULT NULL,
  `first_registration_date` date DEFAULT NULL,
  `is_seriously_damaged` tinyint(4) DEFAULT NULL,
  `recent_v5_document_number` varchar(11) DEFAULT NULL,
  `is_vehicle_new_at_first_registration` tinyint(4) DEFAULT NULL,
  `body_type_code` varchar(2) CHARACTER SET latin1 DEFAULT NULL,
  `wheelplan_code` varchar(1) CHARACTER SET latin1 DEFAULT NULL,
  `sva_emission_standard` varchar(6) DEFAULT NULL,
  `ct_related_mark` varchar(13) DEFAULT NULL,
  `vehicle_id` int(10) unsigned DEFAULT NULL,
  `dvla_vehicle_id` int(9) unsigned DEFAULT NULL,
  `eu_classification` varchar(2) DEFAULT NULL,
  `mass_in_service_weight` int(9) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_dvla_vehicle_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:07';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `dvla_vehicle_import_change_log`
--

DROP TABLE IF EXISTS `dvla_vehicle_import_change_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `dvla_vehicle_import_change_log` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `vehicle_id` int(10) unsigned NOT NULL,
  `vehicle_class_id` smallint(5) unsigned NOT NULL,
  `main_colour_code` varchar(5) NOT NULL COMMENT 'TODO:  CHARACTER SET latin1 ',
  `secondary_colour_code` varchar(5) DEFAULT NULL COMMENT 'TODO:  CHARACTER SET latin1 ',
  `fuel_type_code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `person_id` int(10) unsigned NOT NULL,
  `imported` datetime(6) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_dvla_vehicle_import_change_log_fuel_type_code` (`fuel_type_code`),
  KEY `fk_dvla_vehicle_import_change_log_main_colour` (`main_colour_code`),
  KEY `fk_dvla_vehicle_import_change_log_person_id` (`person_id`),
  KEY `fk_dvla_vehicle_import_change_log_secondary_colour` (`secondary_colour_code`),
  KEY `fk_dvla_vehicle_import_change_log_vehicle_class_id` (`vehicle_class_id`),
  KEY `fk_dvla_vehicle_import_change_log_vehicle_id` (`vehicle_id`),
  CONSTRAINT `fk_dvla_vehicle_import_change_log_fuel_type_code` FOREIGN KEY (`fuel_type_code`) REFERENCES `fuel_type` (`code`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_dvla_vehicle_import_change_log_main_colour` FOREIGN KEY (`main_colour_code`) REFERENCES `colour_lookup` (`code`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_dvla_vehicle_import_change_log_person_id` FOREIGN KEY (`person_id`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_dvla_vehicle_import_change_log_secondary_colour` FOREIGN KEY (`secondary_colour_code`) REFERENCES `colour_lookup` (`code`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_dvla_vehicle_import_change_log_vehicle_class_id` FOREIGN KEY (`vehicle_class_id`) REFERENCES `vehicle_class` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_dvla_vehicle_import_change_log_vehicle_id` FOREIGN KEY (`vehicle_id`) REFERENCES `vehicle` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Log of changes made to DVLA vehicle data by tester at start of test';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_dvla_vehicle_import_change_log_bi`
BEFORE INSERT ON `mot2`.`dvla_vehicle_import_change_log`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_dvla_vehicle_import_change_log_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `email`
--

DROP TABLE IF EXISTS `email`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `email` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `contact_detail_id` int(10) unsigned NOT NULL,
  `email` varchar(255) NOT NULL,
  `is_primary` tinyint(4) unsigned NOT NULL DEFAULT '0',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_email_contact_detail_id` (`contact_detail_id`),
  CONSTRAINT `fk_email_contact_detail_id` FOREIGN KEY (`contact_detail_id`) REFERENCES `contact_detail` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=26 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Representation of a email address';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_email_bi`
BEFORE INSERT ON `mot2`.`email`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_email_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_email_bu`
BEFORE UPDATE ON `mot2`.`email`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_email_bu Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_email_au`
AFTER UPDATE ON `mot2`.`email`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_email_au Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`email_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`contact_detail_id`
        ,`email`
        ,`is_primary`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`contact_detail_id`
        ,OLD.`email`
        ,OLD.`is_primary`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_email_bd`
BEFORE DELETE ON `mot2`.`email`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_email_bd Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`email_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`contact_detail_id`
        ,`email`
        ,`is_primary`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`contact_detail_id`
        ,OLD.`email`
        ,OLD.`is_primary`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `email_hist`
--

DROP TABLE IF EXISTS `email_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `email_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `contact_detail_id` int(10) unsigned DEFAULT NULL,
  `email` varchar(255) DEFAULT NULL,
  `is_primary` tinyint(4) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_email_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:07';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `emergency_log`
--

DROP TABLE IF EXISTS `emergency_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `emergency_log` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `number` varchar(10) NOT NULL COMMENT 'The emergency log code',
  `description` varchar(250) DEFAULT NULL COMMENT 'Full text description to explain reason for the code',
  `start_date` date DEFAULT NULL COMMENT 'Starting date for the contingency code',
  `end_date` date DEFAULT NULL COMMENT 'Ending date for using this code',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Log of emergency outages and the codes used';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_emergency_log_bi`
BEFORE INSERT ON `mot2`.`emergency_log`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_emergency_log_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_emergency_log_bu`
BEFORE UPDATE ON `mot2`.`emergency_log`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_emergency_log_bu Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_emergency_log_au`
AFTER UPDATE ON `mot2`.`emergency_log`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_emergency_log_au Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`emergency_log_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`number`
        ,`description`
        ,`start_date`
        ,`end_date`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`number`
        ,OLD.`description`
        ,OLD.`start_date`
        ,OLD.`end_date`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_emergency_log_bd`
BEFORE DELETE ON `mot2`.`emergency_log`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_emergency_log_bd Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`emergency_log_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`number`
        ,`description`
        ,`start_date`
        ,`end_date`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`number`
        ,OLD.`description`
        ,OLD.`start_date`
        ,OLD.`end_date`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `emergency_log_hist`
--

DROP TABLE IF EXISTS `emergency_log_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `emergency_log_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `number` varchar(10) DEFAULT NULL,
  `description` varchar(250) DEFAULT NULL,
  `start_date` date DEFAULT NULL,
  `end_date` date DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_emergency_log_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:07';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `emergency_reason_lookup`
--

DROP TABLE IF EXISTS `emergency_reason_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `emergency_reason_lookup` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL COMMENT 'Short name displayed to users in the GUI',
  `code` varchar(5) NOT NULL COMMENT 'Internal code assigned to contingency testing reasons',
  `description` varchar(50) DEFAULT NULL COMMENT 'Longer descriptive text for the reason code',
  `display_order` smallint(5) unsigned NOT NULL DEFAULT '1' COMMENT 'Preferred display order',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Codes and descriptions for reasons due to which contingency testing has to take place';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_emergency_reason_lookup_bi`
BEFORE INSERT ON `mot2`.`emergency_reason_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_emergency_reason_lookup_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `empty_reason_map`
--

DROP TABLE IF EXISTS `empty_reason_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `empty_reason_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `vehicle_id` int(10) unsigned NOT NULL,
  `empty_vin_reason_lookup_id` smallint(5) unsigned DEFAULT NULL,
  `empty_vrm_reason_lookup_id` smallint(5) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL DEFAULT '0',
  `created_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned NOT NULL DEFAULT '0',
  `last_updated_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_empty_reason_map_vehicle` (`vehicle_id`),
  KEY `fk_empty_reason_map_empty_vrm_reason_lookup` (`empty_vrm_reason_lookup_id`),
  KEY `fk_empty_reason_map_empty_vin_reason_lookup` (`empty_vin_reason_lookup_id`),
  CONSTRAINT `fk_empty_reason_map_empty_vin_reason_lookup` FOREIGN KEY (`empty_vin_reason_lookup_id`) REFERENCES `empty_vin_reason_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_empty_reason_map_empty_vrm_reason_lookup` FOREIGN KEY (`empty_vrm_reason_lookup_id`) REFERENCES `empty_vrm_reason_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_empty_reason_map_vehicle` FOREIGN KEY (`vehicle_id`) REFERENCES `vehicle` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_empty_reason_map_bi`
BEFORE INSERT ON `mot2`.`empty_reason_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_empty_reason_map_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_empty_reason_map_bu`
BEFORE UPDATE ON `mot2`.`empty_reason_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_empty_reason_map_bu Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_empty_reason_map_au`
AFTER UPDATE ON `mot2`.`empty_reason_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_empty_reason_map_au Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`empty_reason_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`vehicle_id`
        ,`empty_vin_reason_lookup_id`
        ,`empty_vrm_reason_lookup_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`vehicle_id`
        ,OLD.`empty_vin_reason_lookup_id`
        ,OLD.`empty_vrm_reason_lookup_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_empty_reason_map_bd`
BEFORE DELETE ON `mot2`.`empty_reason_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_empty_reason_map_bd Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`empty_reason_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`vehicle_id`
        ,`empty_vin_reason_lookup_id`
        ,`empty_vrm_reason_lookup_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`vehicle_id`
        ,OLD.`empty_vin_reason_lookup_id`
        ,OLD.`empty_vrm_reason_lookup_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `empty_reason_map_hist`
--

DROP TABLE IF EXISTS `empty_reason_map_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `empty_reason_map_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `vehicle_id` int(10) unsigned DEFAULT NULL,
  `empty_vin_reason_lookup_id` smallint(5) unsigned DEFAULT NULL,
  `empty_vrm_reason_lookup_id` smallint(5) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` timestamp(6) NULL DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` timestamp(6) NULL DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_empty_reason_map_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:07';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `empty_vin_reason_lookup`
--

DROP TABLE IF EXISTS `empty_vin_reason_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `empty_vin_reason_lookup` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `name` varchar(50) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_empty_vin_reason_lookup_bi`
BEFORE INSERT ON `mot2`.`empty_vin_reason_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_empty_vin_reason_lookup_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `empty_vrm_reason_lookup`
--

DROP TABLE IF EXISTS `empty_vrm_reason_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `empty_vrm_reason_lookup` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `name` varchar(50) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_empty_vrm_reason_lookup_bi`
BEFORE INSERT ON `mot2`.`empty_vrm_reason_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_empty_vrm_reason_lookup_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `enforcement_condition_appointment_lookup`
--

DROP TABLE IF EXISTS `enforcement_condition_appointment_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `enforcement_condition_appointment_lookup` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `description` varchar(50) DEFAULT NULL,
  `display_order` smallint(5) unsigned NOT NULL DEFAULT '1',
  `code` varchar(5) DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Descriptions of conditions of approval for recording a new Site by the VE';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_enforcement_condition_appointment_lookup_bi`
BEFORE INSERT ON `mot2`.`enforcement_condition_appointment_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_enforcement_condition_appointment_lookup_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `enforcement_decision_category_lookup`
--

DROP TABLE IF EXISTS `enforcement_decision_category_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `enforcement_decision_category_lookup` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `category` varchar(50) DEFAULT NULL COMMENT 'The outcome category description',
  `display_order` smallint(5) unsigned NOT NULL DEFAULT '1' COMMENT 'Preferred display order',
  `code` varchar(5) DEFAULT NULL COMMENT 'Internal representation code',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Enumerates the decisions a VE can make at the RFR level when comparing a VE Test to a Testers Test';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_enforcement_decision_category_lookup_bi`
BEFORE INSERT ON `mot2`.`enforcement_decision_category_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_enforcement_decision_category_lookup_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `enforcement_decision_lookup`
--

DROP TABLE IF EXISTS `enforcement_decision_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `enforcement_decision_lookup` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `decision` varchar(100) NOT NULL COMMENT 'Plain text description of the decision',
  `display_order` smallint(5) unsigned NOT NULL DEFAULT '1' COMMENT 'Preferred display order',
  `code` varchar(5) DEFAULT NULL COMMENT 'Internal representation code',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Comparison screen decision results';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_enforcement_decision_lookup_bi`
BEFORE INSERT ON `mot2`.`enforcement_decision_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_enforcement_decision_lookup_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `enforcement_decision_outcome_lookup`
--

DROP TABLE IF EXISTS `enforcement_decision_outcome_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `enforcement_decision_outcome_lookup` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `outcome` varchar(50) DEFAULT NULL COMMENT 'Plain text description of the outcome result',
  `display_order` smallint(5) unsigned NOT NULL DEFAULT '1' COMMENT 'Preferred display order',
  `code` varchar(5) DEFAULT NULL COMMENT 'Internal representation code',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Enforcement decision outcome reasons';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_enforcement_decision_outcome_lookup_bi`
BEFORE INSERT ON `mot2`.`enforcement_decision_outcome_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_enforcement_decision_outcome_lookup_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `enforcement_decision_reinspection_outcome_lookup`
--

DROP TABLE IF EXISTS `enforcement_decision_reinspection_outcome_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `enforcement_decision_reinspection_outcome_lookup` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `decision` varchar(50) DEFAULT NULL COMMENT 'Textual description of the outcome value',
  `display_order` smallint(5) unsigned NOT NULL DEFAULT '1' COMMENT 'Preferred display order',
  `code` varchar(5) DEFAULT NULL COMMENT 'Internal representation code',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='List of approved reinspection outcomes';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_enforcement_decision_reinspection_outcome_lookup_bi`
BEFORE INSERT ON `mot2`.`enforcement_decision_reinspection_outcome_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_enforcement_decision_reinspection_outcome_lookup_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `enforcement_decision_score_lookup`
--

DROP TABLE IF EXISTS `enforcement_decision_score_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `enforcement_decision_score_lookup` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `score` smallint(5) unsigned DEFAULT NULL COMMENT 'The numerical value of this score',
  `description` varchar(50) NOT NULL COMMENT 'The descriptive text for the score',
  `display_order` smallint(5) unsigned DEFAULT NULL COMMENT 'Preferred display order',
  `code` varchar(5) DEFAULT NULL COMMENT 'Internal representation code',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Comparison screen decision score selections';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_enforcement_decision_score_lookup_bi`
BEFORE INSERT ON `mot2`.`enforcement_decision_score_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_enforcement_decision_score_lookup_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `enforcement_fuel_type_lookup`
--

DROP TABLE IF EXISTS `enforcement_fuel_type_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `enforcement_fuel_type_lookup` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `description` varchar(50) DEFAULT NULL COMMENT 'Descriptive text for the fuel type',
  `display_order` smallint(5) unsigned NOT NULL DEFAULT '1' COMMENT 'Preferred display order',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Permissible fuel types for which a Site is approved';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_enforcement_fuel_type_lookup_bi`
BEFORE INSERT ON `mot2`.`enforcement_fuel_type_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_enforcement_fuel_type_lookup_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `enforcement_full_partial_retest_lookup`
--

DROP TABLE IF EXISTS `enforcement_full_partial_retest_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `enforcement_full_partial_retest_lookup` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL COMMENT 'Printable name for the test type',
  `description` varchar(50) DEFAULT NULL COMMENT 'Text description for the test type',
  `code` varchar(5) DEFAULT NULL COMMENT 'Internal representation code',
  `display_order` smallint(5) unsigned NOT NULL DEFAULT '1' COMMENT 'Preferred display order',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Record whether the VEs Test is full or partial';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_enforcement_full_partial_retest_lookup_bi`
BEFORE INSERT ON `mot2`.`enforcement_full_partial_retest_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_enforcement_full_partial_retest_lookup_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `enforcement_mot_demo_test`
--

DROP TABLE IF EXISTS `enforcement_mot_demo_test`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `enforcement_mot_demo_test` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `mot_test_id` bigint(20) unsigned NOT NULL COMMENT 'The MOT test demo test identifier',
  `result_id` tinyint(4) NOT NULL COMMENT 'The result of the demonstration test',
  `is_satisfactory` tinyint(4) NOT NULL DEFAULT '0',
  `comment_id` bigint(20) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_enforcement_mot_demo_test_comment` (`comment_id`),
  KEY `fk_enforcement_mot_demo_test_mot_test_id` (`mot_test_id`),
  CONSTRAINT `fk_enforcement_mot_demo_test_comment` FOREIGN KEY (`comment_id`) REFERENCES `comment` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_enforcement_mot_demo_test_mot_test_id` FOREIGN KEY (`mot_test_id`) REFERENCES `mot_test` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Demonstration tests, not for public viewing';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_enforcement_mot_demo_test_bi`
BEFORE INSERT ON `mot2`.`enforcement_mot_demo_test`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_enforcement_mot_demo_test_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `enforcement_mot_test_differences`
--

DROP TABLE IF EXISTS `enforcement_mot_test_differences`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `enforcement_mot_test_differences` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `enforcement_mot_test_result_id` int(10) unsigned NOT NULL,
  `rfr_id` int(10) unsigned DEFAULT NULL COMMENT 'denormalisation',
  `mot_test_id` bigint(20) unsigned NOT NULL COMMENT 'denormalisation',
  `mot_test_rfr_map_id` bigint(20) unsigned NOT NULL,
  `mot_test_type_id` smallint(5) unsigned NOT NULL COMMENT 'denormalisation',
  `enforcement_decision_score_lookup_id` smallint(5) unsigned NOT NULL,
  `enforcement_decision_lookup_id` smallint(5) unsigned NOT NULL,
  `enforcement_decision_category_lookup_id` smallint(5) unsigned NOT NULL,
  `comment_id` bigint(20) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_comment_enforcement_mot_test_differences` (`comment_id`),
  KEY `fk_enforcement_decision_category_lookup` (`enforcement_decision_category_lookup_id`),
  KEY `fk_enforcement_decision_lookup` (`enforcement_decision_lookup_id`),
  KEY `fk_enforcement_decision_score_lookup` (`enforcement_decision_score_lookup_id`),
  KEY `fk_enforcement_mot_test_differences_rfr_id` (`rfr_id`),
  KEY `fk_enforcement_mot_test_difference_mot_test_id` (`mot_test_id`),
  KEY `fk_enforcement_mot_test_result` (`enforcement_mot_test_result_id`),
  KEY `fk_mot_test_type_id` (`mot_test_type_id`),
  CONSTRAINT `fk_comment_enforcement_mot_test_differences` FOREIGN KEY (`comment_id`) REFERENCES `comment` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_enforcement_decision_category_lookup` FOREIGN KEY (`enforcement_decision_category_lookup_id`) REFERENCES `enforcement_decision_category_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_enforcement_decision_lookup` FOREIGN KEY (`enforcement_decision_lookup_id`) REFERENCES `enforcement_decision_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_enforcement_decision_score_lookup` FOREIGN KEY (`enforcement_decision_score_lookup_id`) REFERENCES `enforcement_decision_score_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_enforcement_mot_test_difference_mot_test_id` FOREIGN KEY (`mot_test_id`) REFERENCES `mot_test` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_enforcement_mot_test_differences_rfr_id` FOREIGN KEY (`rfr_id`) REFERENCES `reason_for_rejection` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_enforcement_mot_test_result` FOREIGN KEY (`enforcement_mot_test_result_id`) REFERENCES `enforcement_mot_test_result` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_type_id` FOREIGN KEY (`mot_test_type_id`) REFERENCES `mot_test_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Differences between tests: the comparison process output';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_enforcement_mot_test_differences_bi`
BEFORE INSERT ON `mot2`.`enforcement_mot_test_differences`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_enforcement_mot_test_differences_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_enforcement_mot_test_differences_bu`
BEFORE UPDATE ON `mot2`.`enforcement_mot_test_differences`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_enforcement_mot_test_differences_bu Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_enforcement_mot_test_differences_au`
AFTER UPDATE ON `mot2`.`enforcement_mot_test_differences`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_enforcement_mot_test_differences_au Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`enforcement_mot_test_differences_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`enforcement_mot_test_result_id`
        ,`rfr_id`
        ,`mot_test_id`
        ,`mot_test_rfr_map_id`
        ,`mot_test_type_id`
        ,`enforcement_decision_score_lookup_id`
        ,`enforcement_decision_lookup_id`
        ,`enforcement_decision_category_lookup_id`
        ,`comment_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`enforcement_mot_test_result_id`
        ,OLD.`rfr_id`
        ,OLD.`mot_test_id`
        ,OLD.`mot_test_rfr_map_id`
        ,OLD.`mot_test_type_id`
        ,OLD.`enforcement_decision_score_lookup_id`
        ,OLD.`enforcement_decision_lookup_id`
        ,OLD.`enforcement_decision_category_lookup_id`
        ,OLD.`comment_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_enforcement_mot_test_differences_bd`
BEFORE DELETE ON `mot2`.`enforcement_mot_test_differences`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_enforcement_mot_test_differences_bd Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`enforcement_mot_test_differences_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`enforcement_mot_test_result_id`
        ,`rfr_id`
        ,`mot_test_id`
        ,`mot_test_rfr_map_id`
        ,`mot_test_type_id`
        ,`enforcement_decision_score_lookup_id`
        ,`enforcement_decision_lookup_id`
        ,`enforcement_decision_category_lookup_id`
        ,`comment_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`enforcement_mot_test_result_id`
        ,OLD.`rfr_id`
        ,OLD.`mot_test_id`
        ,OLD.`mot_test_rfr_map_id`
        ,OLD.`mot_test_type_id`
        ,OLD.`enforcement_decision_score_lookup_id`
        ,OLD.`enforcement_decision_lookup_id`
        ,OLD.`enforcement_decision_category_lookup_id`
        ,OLD.`comment_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `enforcement_mot_test_differences_hist`
--

DROP TABLE IF EXISTS `enforcement_mot_test_differences_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `enforcement_mot_test_differences_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `enforcement_mot_test_result_id` int(10) unsigned DEFAULT NULL,
  `rfr_id` int(10) unsigned DEFAULT NULL,
  `mot_test_id` bigint(20) unsigned DEFAULT NULL,
  `mot_test_rfr_map_id` bigint(20) unsigned DEFAULT NULL,
  `mot_test_type_id` smallint(5) unsigned DEFAULT NULL,
  `enforcement_decision_score_lookup_id` smallint(5) unsigned DEFAULT NULL,
  `enforcement_decision_lookup_id` smallint(5) unsigned DEFAULT NULL,
  `enforcement_decision_category_lookup_id` smallint(5) unsigned DEFAULT NULL,
  `comment_id` bigint(20) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_enforcement_mot_test_differences_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:07';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `enforcement_mot_test_result`
--

DROP TABLE IF EXISTS `enforcement_mot_test_result`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `enforcement_mot_test_result` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `re_inspection_mot_test_id` bigint(20) unsigned NOT NULL COMMENT 'Re-inspection MOT Test Id',
  `mot_test_id` bigint(20) unsigned NOT NULL COMMENT 'MOT Test Id',
  `total_score` smallint(5) unsigned NOT NULL COMMENT 'Total points awarded on completion of the test',
  `enforcement_decision_outcome_lookup_id` smallint(5) unsigned NOT NULL COMMENT 'The awarded outcome decision',
  `comment_id` bigint(20) unsigned DEFAULT NULL COMMENT 'Link to free text comment made (optional)',
  `step` varchar(100) DEFAULT NULL COMMENT 'Application internal state: transition group operation',
  `enforcement_decision_reinspection_outcome_lookup_id` smallint(5) unsigned DEFAULT NULL,
  `awl_advice_given` varchar(255) DEFAULT NULL COMMENT 'Advisory warning letter: contents of the advisory warning letter text field',
  `awl_immediate_attention` varchar(255) DEFAULT NULL COMMENT 'Advisory warning letter: contents of the immediate attention text field',
  `awl_reply_comments` varchar(255) DEFAULT NULL COMMENT 'Advisory warning letter: comments from the VE who performed the test',
  `awl_name_a_ere` varchar(255) DEFAULT NULL COMMENT 'Advisory warning letter: Name of the AE of the Site the test took place at',
  `awl_mot_roles` varchar(255) DEFAULT NULL COMMENT 'Advisory warning letter: Roles',
  `awl_position_vts` varchar(255) DEFAULT NULL,
  `awl_user_id` varchar(255) DEFAULT NULL,
  `complainant_name` varchar(255) DEFAULT NULL COMMENT 'Who raised the need for the test',
  `complaint_detail` varchar(255) DEFAULT NULL COMMENT 'Details about the complainant',
  `repairs_detail` varchar(255) DEFAULT NULL,
  `complainant_address` varchar(255) DEFAULT NULL,
  `complainant_postcode` varchar(255) DEFAULT NULL,
  `complainant_phone_number` varchar(255) DEFAULT NULL,
  `ve_completed` varchar(255) DEFAULT NULL,
  `agree_vehicle_to_certificate` varchar(255) DEFAULT NULL,
  `input_agree_vehicle_to_certificate` varchar(255) DEFAULT NULL,
  `agree_vehicle_to_fail` varchar(255) DEFAULT NULL,
  `input_agree_vehicle_to_fail` varchar(255) DEFAULT NULL,
  `vehicle_switch` varchar(255) DEFAULT NULL,
  `input_vehicle_switch` varchar(255) DEFAULT NULL,
  `switch_police_status_report` varchar(255) DEFAULT NULL,
  `input_switch_detail_report` varchar(255) DEFAULT NULL,
  `switch_vehicle_result` varchar(255) DEFAULT NULL,
  `input_switch_police_status_report` varchar(255) DEFAULT NULL,
  `promote_sale_interest` varchar(255) DEFAULT NULL,
  `input_promote_sale_interest` varchar(255) DEFAULT NULL,
  `vehicle_defects` varchar(255) DEFAULT NULL,
  `reason_of_defects` varchar(255) DEFAULT NULL,
  `items_discussed` varchar(255) DEFAULT NULL,
  `concluding_remarks_tester` varchar(255) DEFAULT NULL,
  `concluding_remarks_ae` varchar(4000) DEFAULT NULL,
  `concluding_remarks_recommendation` varchar(4000) DEFAULT NULL,
  `concluding_remarks_name` varchar(200) DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_comment` (`comment_id`),
  KEY `fk_enforcement_decision_outcome_lookup` (`enforcement_decision_outcome_lookup_id`),
  KEY `fk_enforcement_decision_reinspection_outcome_lookup` (`enforcement_decision_reinspection_outcome_lookup_id`),
  KEY `fk_enforcement_mot_test_result_mot_test_id` (`mot_test_id`),
  KEY `fk_enforcement_mot_test_result_re_inspection_mot_test_id` (`re_inspection_mot_test_id`),
  CONSTRAINT `fk_comment` FOREIGN KEY (`comment_id`) REFERENCES `comment` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_enforcement_decision_outcome_lookup` FOREIGN KEY (`enforcement_decision_outcome_lookup_id`) REFERENCES `enforcement_decision_outcome_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_enforcement_decision_reinspection_outcome_lookup` FOREIGN KEY (`enforcement_decision_reinspection_outcome_lookup_id`) REFERENCES `enforcement_decision_reinspection_outcome_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_enforcement_mot_test_result_mot_test_id` FOREIGN KEY (`mot_test_id`) REFERENCES `mot_test` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_enforcement_mot_test_result_re_inspection_mot_test_id` FOREIGN KEY (`re_inspection_mot_test_id`) REFERENCES `mot_test` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_enforcement_mot_test_result_bi`
BEFORE INSERT ON `mot2`.`enforcement_mot_test_result`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_enforcement_mot_test_result_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_enforcement_mot_test_result_bu`
BEFORE UPDATE ON `mot2`.`enforcement_mot_test_result`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_enforcement_mot_test_result_bu Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_enforcement_mot_test_result_au`
AFTER UPDATE ON `mot2`.`enforcement_mot_test_result`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_enforcement_mot_test_result_au Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`enforcement_mot_test_result_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`re_inspection_mot_test_id`
        ,`mot_test_id`
        ,`total_score`
        ,`enforcement_decision_outcome_lookup_id`
        ,`comment_id`
        ,`step`
        ,`enforcement_decision_reinspection_outcome_lookup_id`
        ,`awl_advice_given`
        ,`awl_immediate_attention`
        ,`awl_reply_comments`
        ,`awl_name_a_ere`
        ,`awl_mot_roles`
        ,`awl_position_vts`
        ,`awl_user_id`
        ,`complainant_name`
        ,`complaint_detail`
        ,`repairs_detail`
        ,`complainant_address`
        ,`complainant_postcode`
        ,`complainant_phone_number`
        ,`ve_completed`
        ,`agree_vehicle_to_certificate`
        ,`input_agree_vehicle_to_certificate`
        ,`agree_vehicle_to_fail`
        ,`input_agree_vehicle_to_fail`
        ,`vehicle_switch`
        ,`input_vehicle_switch`
        ,`switch_police_status_report`
        ,`input_switch_detail_report`
        ,`switch_vehicle_result`
        ,`input_switch_police_status_report`
        ,`promote_sale_interest`
        ,`input_promote_sale_interest`
        ,`vehicle_defects`
        ,`reason_of_defects`
        ,`items_discussed`
        ,`concluding_remarks_tester`
        ,`concluding_remarks_ae`
        ,`concluding_remarks_recommendation`
        ,`concluding_remarks_name`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`re_inspection_mot_test_id`
        ,OLD.`mot_test_id`
        ,OLD.`total_score`
        ,OLD.`enforcement_decision_outcome_lookup_id`
        ,OLD.`comment_id`
        ,OLD.`step`
        ,OLD.`enforcement_decision_reinspection_outcome_lookup_id`
        ,OLD.`awl_advice_given`
        ,OLD.`awl_immediate_attention`
        ,OLD.`awl_reply_comments`
        ,OLD.`awl_name_a_ere`
        ,OLD.`awl_mot_roles`
        ,OLD.`awl_position_vts`
        ,OLD.`awl_user_id`
        ,OLD.`complainant_name`
        ,OLD.`complaint_detail`
        ,OLD.`repairs_detail`
        ,OLD.`complainant_address`
        ,OLD.`complainant_postcode`
        ,OLD.`complainant_phone_number`
        ,OLD.`ve_completed`
        ,OLD.`agree_vehicle_to_certificate`
        ,OLD.`input_agree_vehicle_to_certificate`
        ,OLD.`agree_vehicle_to_fail`
        ,OLD.`input_agree_vehicle_to_fail`
        ,OLD.`vehicle_switch`
        ,OLD.`input_vehicle_switch`
        ,OLD.`switch_police_status_report`
        ,OLD.`input_switch_detail_report`
        ,OLD.`switch_vehicle_result`
        ,OLD.`input_switch_police_status_report`
        ,OLD.`promote_sale_interest`
        ,OLD.`input_promote_sale_interest`
        ,OLD.`vehicle_defects`
        ,OLD.`reason_of_defects`
        ,OLD.`items_discussed`
        ,OLD.`concluding_remarks_tester`
        ,OLD.`concluding_remarks_ae`
        ,OLD.`concluding_remarks_recommendation`
        ,OLD.`concluding_remarks_name`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_enforcement_mot_test_result_bd`
BEFORE DELETE ON `mot2`.`enforcement_mot_test_result`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_enforcement_mot_test_result_bd Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`enforcement_mot_test_result_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`re_inspection_mot_test_id`
        ,`mot_test_id`
        ,`total_score`
        ,`enforcement_decision_outcome_lookup_id`
        ,`comment_id`
        ,`step`
        ,`enforcement_decision_reinspection_outcome_lookup_id`
        ,`awl_advice_given`
        ,`awl_immediate_attention`
        ,`awl_reply_comments`
        ,`awl_name_a_ere`
        ,`awl_mot_roles`
        ,`awl_position_vts`
        ,`awl_user_id`
        ,`complainant_name`
        ,`complaint_detail`
        ,`repairs_detail`
        ,`complainant_address`
        ,`complainant_postcode`
        ,`complainant_phone_number`
        ,`ve_completed`
        ,`agree_vehicle_to_certificate`
        ,`input_agree_vehicle_to_certificate`
        ,`agree_vehicle_to_fail`
        ,`input_agree_vehicle_to_fail`
        ,`vehicle_switch`
        ,`input_vehicle_switch`
        ,`switch_police_status_report`
        ,`input_switch_detail_report`
        ,`switch_vehicle_result`
        ,`input_switch_police_status_report`
        ,`promote_sale_interest`
        ,`input_promote_sale_interest`
        ,`vehicle_defects`
        ,`reason_of_defects`
        ,`items_discussed`
        ,`concluding_remarks_tester`
        ,`concluding_remarks_ae`
        ,`concluding_remarks_recommendation`
        ,`concluding_remarks_name`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`re_inspection_mot_test_id`
        ,OLD.`mot_test_id`
        ,OLD.`total_score`
        ,OLD.`enforcement_decision_outcome_lookup_id`
        ,OLD.`comment_id`
        ,OLD.`step`
        ,OLD.`enforcement_decision_reinspection_outcome_lookup_id`
        ,OLD.`awl_advice_given`
        ,OLD.`awl_immediate_attention`
        ,OLD.`awl_reply_comments`
        ,OLD.`awl_name_a_ere`
        ,OLD.`awl_mot_roles`
        ,OLD.`awl_position_vts`
        ,OLD.`awl_user_id`
        ,OLD.`complainant_name`
        ,OLD.`complaint_detail`
        ,OLD.`repairs_detail`
        ,OLD.`complainant_address`
        ,OLD.`complainant_postcode`
        ,OLD.`complainant_phone_number`
        ,OLD.`ve_completed`
        ,OLD.`agree_vehicle_to_certificate`
        ,OLD.`input_agree_vehicle_to_certificate`
        ,OLD.`agree_vehicle_to_fail`
        ,OLD.`input_agree_vehicle_to_fail`
        ,OLD.`vehicle_switch`
        ,OLD.`input_vehicle_switch`
        ,OLD.`switch_police_status_report`
        ,OLD.`input_switch_detail_report`
        ,OLD.`switch_vehicle_result`
        ,OLD.`input_switch_police_status_report`
        ,OLD.`promote_sale_interest`
        ,OLD.`input_promote_sale_interest`
        ,OLD.`vehicle_defects`
        ,OLD.`reason_of_defects`
        ,OLD.`items_discussed`
        ,OLD.`concluding_remarks_tester`
        ,OLD.`concluding_remarks_ae`
        ,OLD.`concluding_remarks_recommendation`
        ,OLD.`concluding_remarks_name`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `enforcement_mot_test_result_hist`
--

DROP TABLE IF EXISTS `enforcement_mot_test_result_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `enforcement_mot_test_result_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `re_inspection_mot_test_id` bigint(20) unsigned DEFAULT NULL,
  `mot_test_id` bigint(20) unsigned DEFAULT NULL,
  `total_score` smallint(5) unsigned DEFAULT NULL,
  `enforcement_decision_outcome_lookup_id` smallint(5) unsigned DEFAULT NULL,
  `comment_id` bigint(20) unsigned DEFAULT NULL,
  `step` varchar(100) DEFAULT NULL,
  `enforcement_decision_reinspection_outcome_lookup_id` smallint(5) unsigned DEFAULT NULL,
  `awl_advice_given` varchar(255) DEFAULT NULL,
  `awl_immediate_attention` varchar(255) DEFAULT NULL,
  `awl_reply_comments` varchar(255) DEFAULT NULL,
  `awl_name_a_ere` varchar(255) DEFAULT NULL,
  `awl_mot_roles` varchar(255) DEFAULT NULL,
  `awl_position_vts` varchar(255) DEFAULT NULL,
  `awl_user_id` varchar(255) DEFAULT NULL,
  `complainant_name` varchar(255) DEFAULT NULL,
  `complaint_detail` varchar(255) DEFAULT NULL,
  `repairs_detail` varchar(255) DEFAULT NULL,
  `complainant_address` varchar(255) DEFAULT NULL,
  `complainant_postcode` varchar(255) DEFAULT NULL,
  `complainant_phone_number` varchar(255) DEFAULT NULL,
  `ve_completed` varchar(255) DEFAULT NULL,
  `agree_vehicle_to_certificate` varchar(255) DEFAULT NULL,
  `input_agree_vehicle_to_certificate` varchar(255) DEFAULT NULL,
  `agree_vehicle_to_fail` varchar(255) DEFAULT NULL,
  `input_agree_vehicle_to_fail` varchar(255) DEFAULT NULL,
  `vehicle_switch` varchar(255) DEFAULT NULL,
  `input_vehicle_switch` varchar(255) DEFAULT NULL,
  `switch_police_status_report` varchar(255) DEFAULT NULL,
  `input_switch_detail_report` varchar(255) DEFAULT NULL,
  `switch_vehicle_result` varchar(255) DEFAULT NULL,
  `input_switch_police_status_report` varchar(255) DEFAULT NULL,
  `promote_sale_interest` varchar(255) DEFAULT NULL,
  `input_promote_sale_interest` varchar(255) DEFAULT NULL,
  `vehicle_defects` varchar(255) DEFAULT NULL,
  `reason_of_defects` varchar(255) DEFAULT NULL,
  `items_discussed` varchar(255) DEFAULT NULL,
  `concluding_remarks_tester` varchar(255) DEFAULT NULL,
  `concluding_remarks_ae` varchar(4000) DEFAULT NULL,
  `concluding_remarks_recommendation` varchar(4000) DEFAULT NULL,
  `concluding_remarks_name` varchar(200) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_enforcement_mot_test_result_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:07';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `enforcement_mot_test_result_witnesses`
--

DROP TABLE IF EXISTS `enforcement_mot_test_result_witnesses`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `enforcement_mot_test_result_witnesses` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL COMMENT 'Name of the witness',
  `position` varchar(255) DEFAULT NULL COMMENT 'Recognised position of the witness',
  `enforcement_mot_test_result_id` int(10) unsigned NOT NULL,
  `type` varchar(20) DEFAULT NULL COMMENT 'The type of the witness',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `enforcement_mot_test_result_witnesses_ibfk_1` (`enforcement_mot_test_result_id`),
  CONSTRAINT `enforcement_mot_test_result_witnesses_ibfk_1` FOREIGN KEY (`enforcement_mot_test_result_id`) REFERENCES `enforcement_mot_test_result` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Records witnesses to a test';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_enforcement_mot_test_result_witnesses_bi`
BEFORE INSERT ON `mot2`.`enforcement_mot_test_result_witnesses`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_enforcement_mot_test_result_witnesses_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `enforcement_site_assessment`
--

DROP TABLE IF EXISTS `enforcement_site_assessment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `enforcement_site_assessment` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `site_id` int(10) unsigned NOT NULL COMMENT 'The site that was inspected / assessed',
  `ae_organisation_id` int(10) unsigned NOT NULL,
  `site_assessment_score` decimal(9,2) DEFAULT NULL COMMENT 'The final asessment score',
  `ae_representative_person_id` int(11) unsigned DEFAULT NULL,
  `ae_representative_name` varchar(100) DEFAULT NULL COMMENT 'Free text AE or AEs representatives name',
  `ae_representative_position` varchar(100) DEFAULT NULL COMMENT 'Free text AE or AEs representative position in the organisation',
  `tester_person_id` int(10) unsigned DEFAULT NULL COMMENT 'Reference to the tester who was present during the on-site Site assessment',
  `examiner_person_id` int(10) unsigned NOT NULL,
  `visit_date` datetime(6) NOT NULL COMMENT 'The date the visit took place',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_enforcement_site_assessment_ae_representative_person_id` (`ae_representative_person_id`),
  KEY `fk_enforcement_site_assessment_examiner_person_id` (`examiner_person_id`),
  KEY `fk_enforcement_site_assessment_site_id` (`site_id`),
  KEY `fk_enforcement_site_assessment_tester_person_id` (`tester_person_id`),
  CONSTRAINT `fk_enforcement_site_assessment_ae_representative_person_id` FOREIGN KEY (`ae_representative_person_id`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_enforcement_site_assessment_examiner_person_id` FOREIGN KEY (`examiner_person_id`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_enforcement_site_assessment_site_id` FOREIGN KEY (`site_id`) REFERENCES `site` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_enforcement_site_assessment_tester_person_id` FOREIGN KEY (`tester_person_id`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Result table for a site assessment visit scoring';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_enforcement_site_assessment_bi`
BEFORE INSERT ON `mot2`.`enforcement_site_assessment`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_enforcement_site_assessment_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_enforcement_site_assessment_bu`
BEFORE UPDATE ON `mot2`.`enforcement_site_assessment`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_enforcement_site_assessment_bu Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_enforcement_site_assessment_au`
AFTER UPDATE ON `mot2`.`enforcement_site_assessment`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_enforcement_site_assessment_au Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`enforcement_site_assessment_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`site_id`
        ,`ae_organisation_id`
        ,`site_assessment_score`
        ,`ae_representative_person_id`
        ,`ae_representative_name`
        ,`ae_representative_position`
        ,`tester_person_id`
        ,`examiner_person_id`
        ,`visit_date`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`site_id`
        ,OLD.`ae_organisation_id`
        ,OLD.`site_assessment_score`
        ,OLD.`ae_representative_person_id`
        ,OLD.`ae_representative_name`
        ,OLD.`ae_representative_position`
        ,OLD.`tester_person_id`
        ,OLD.`examiner_person_id`
        ,OLD.`visit_date`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_enforcement_site_assessment_bd`
BEFORE DELETE ON `mot2`.`enforcement_site_assessment`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_enforcement_site_assessment_bd Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`enforcement_site_assessment_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`site_id`
        ,`ae_organisation_id`
        ,`site_assessment_score`
        ,`ae_representative_person_id`
        ,`ae_representative_name`
        ,`ae_representative_position`
        ,`tester_person_id`
        ,`examiner_person_id`
        ,`visit_date`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`site_id`
        ,OLD.`ae_organisation_id`
        ,OLD.`site_assessment_score`
        ,OLD.`ae_representative_person_id`
        ,OLD.`ae_representative_name`
        ,OLD.`ae_representative_position`
        ,OLD.`tester_person_id`
        ,OLD.`examiner_person_id`
        ,OLD.`visit_date`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `enforcement_site_assessment_hist`
--

DROP TABLE IF EXISTS `enforcement_site_assessment_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `enforcement_site_assessment_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `site_id` int(10) unsigned DEFAULT NULL,
  `ae_organisation_id` int(10) unsigned DEFAULT NULL,
  `site_assessment_score` decimal(9,2) DEFAULT NULL,
  `ae_representative_person_id` int(11) unsigned DEFAULT NULL,
  `ae_representative_name` varchar(100) DEFAULT NULL,
  `ae_representative_position` varchar(100) DEFAULT NULL,
  `tester_person_id` int(10) unsigned DEFAULT NULL,
  `examiner_person_id` int(10) unsigned DEFAULT NULL,
  `visit_date` datetime(6) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_enforcement_site_assessment_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:07';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `enforcement_visit_outcome_lookup`
--

DROP TABLE IF EXISTS `enforcement_visit_outcome_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `enforcement_visit_outcome_lookup` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `description` varchar(50) DEFAULT NULL COMMENT 'Text description of the outcome',
  `display_order` smallint(5) unsigned NOT NULL DEFAULT '1' COMMENT 'Preferred display order',
  `code` varchar(5) DEFAULT NULL COMMENT 'Internal representation code',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation of Enforcement site visit outcomes';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_enforcement_visit_outcome_lookup_bi`
BEFORE INSERT ON `mot2`.`enforcement_visit_outcome_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_enforcement_visit_outcome_lookup_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `equipment`
--

DROP TABLE IF EXISTS `equipment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `equipment` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `equipment_model_id` int(10) unsigned NOT NULL,
  `site_id` int(10) unsigned NOT NULL,
  `serial_number` varchar(50) NOT NULL,
  `date_added` datetime(6) NOT NULL,
  `date_removed` datetime(6) DEFAULT NULL,
  `equipment_status_id` smallint(5) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `bk_equipment` (`equipment_model_id`,`site_id`,`serial_number`),
  KEY `equipment_ibfk_2` (`site_id`),
  KEY `equipment_ibfk_3` (`equipment_status_id`),
  CONSTRAINT `equipment_ibfk_1` FOREIGN KEY (`equipment_model_id`) REFERENCES `equipment_model` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `equipment_ibfk_2` FOREIGN KEY (`site_id`) REFERENCES `site` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `equipment_ibfk_3` FOREIGN KEY (`equipment_status_id`) REFERENCES `equipment_status` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='An instance of a piece of equipment at a site';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_equipment_bi`
BEFORE INSERT ON `mot2`.`equipment`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_equipment_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `equipment_make`
--

DROP TABLE IF EXISTS `equipment_make`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `equipment_make` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `code` varchar(5) NOT NULL,
  `name` varchar(100) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `bk_equipment_make` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='List of different makes of equipment.';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_equipment_make_bi`
BEFORE INSERT ON `mot2`.`equipment_make`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_equipment_make_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `equipment_model`
--

DROP TABLE IF EXISTS `equipment_model`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `equipment_model` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `code` varchar(8) NOT NULL,
  `name` varchar(100) NOT NULL,
  `equipment_identification_number` varchar(25) DEFAULT NULL COMMENT 'Identifier given by DVSA',
  `equipment_make_id` int(10) unsigned NOT NULL,
  `equipment_type_id` int(10) unsigned NOT NULL,
  `software_version` varchar(20) DEFAULT NULL,
  `certified` date DEFAULT NULL,
  `last_used_date` datetime(6) DEFAULT NULL COMMENT 'After this DATE the status should be changed to WITHDRAWN, column currently for migration only.',
  `last_installable_date` datetime(6) DEFAULT NULL COMMENT 'After this DATE the status should be changed to NOT_INSTALLABLE, column currently for migration only.',
  `equipment_model_status_id` smallint(5) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `bk_equipment_model` (`code`,`equipment_identification_number`,`equipment_make_id`,`equipment_type_id`),
  KEY `equipment_model_ibfk_1` (`equipment_make_id`),
  KEY `equipment_model_ibfk_2` (`equipment_type_id`),
  KEY `equipment_model_ibfk_5` (`equipment_model_status_id`),
  CONSTRAINT `equipment_model_ibfk_1` FOREIGN KEY (`equipment_make_id`) REFERENCES `equipment_make` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `equipment_model_ibfk_2` FOREIGN KEY (`equipment_type_id`) REFERENCES `equipment_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `equipment_model_ibfk_5` FOREIGN KEY (`equipment_model_status_id`) REFERENCES `equipment_model_status` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_equipment_model_bi`
BEFORE INSERT ON `mot2`.`equipment_model`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_equipment_model_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `equipment_model_status`
--

DROP TABLE IF EXISTS `equipment_model_status`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `equipment_model_status` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(30) NOT NULL,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `description` varchar(100) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_equipment_model_status_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation of the equipment model status';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_equipment_model_status_bi`
BEFORE INSERT ON `mot2`.`equipment_model_status`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_equipment_model_status_bi Generated on 2016-07-04 12:27:10. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `equipment_model_vehicle_class_link`
--

DROP TABLE IF EXISTS `equipment_model_vehicle_class_link`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `equipment_model_vehicle_class_link` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `vehicle_class_id` smallint(5) unsigned NOT NULL,
  `equipment_model_id` int(10) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `bk_equipment_model_vehicle_class_map` (`equipment_model_id`,`vehicle_class_id`),
  KEY `fk_equipment_model_vehicle_class_map_vehicle_class_id` (`vehicle_class_id`),
  CONSTRAINT `fk_equipment_model_vehicle_class_map_equipment_model_id` FOREIGN KEY (`equipment_model_id`) REFERENCES `equipment_model` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_equipment_model_vehicle_class_map_vehicle_class_id` FOREIGN KEY (`vehicle_class_id`) REFERENCES `vehicle_class` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=34 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Used to link a piece of equipment to the vehicle class(es) it is valid for';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_equipment_model_vehicle_class_link_bi`
BEFORE INSERT ON `mot2`.`equipment_model_vehicle_class_link`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_equipment_model_vehicle_class_link_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `equipment_status`
--

DROP TABLE IF EXISTS `equipment_status`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `equipment_status` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(30) NOT NULL,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `description` varchar(100) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_equipment_status_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation of a piece of equipments status';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_equipment_status_bi`
BEFORE INSERT ON `mot2`.`equipment_status`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_equipment_status_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `equipment_type`
--

DROP TABLE IF EXISTS `equipment_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `equipment_type` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `code` varchar(5) NOT NULL,
  `name` varchar(50) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `bk_equipment_type` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_equipment_type_bi`
BEFORE INSERT ON `mot2`.`equipment_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_equipment_type_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `event`
--

DROP TABLE IF EXISTS `event`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `event` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `event_type_id` smallint(5) unsigned NOT NULL,
  `event_outcome_id` smallint(5) unsigned DEFAULT NULL,
  `description` varchar(500) NOT NULL DEFAULT '',
  `comment_id` bigint(20) unsigned DEFAULT NULL COMMENT 'Optional long description',
  `is_manual_event` tinyint(4) NOT NULL DEFAULT '0',
  `event_date` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_event_comment_id_comment_id` (`comment_id`),
  KEY `fk_event_event_outcome_id_event_outcome_id` (`event_outcome_id`),
  KEY `fk_event_event_type_id_event_type_id` (`event_type_id`),
  CONSTRAINT `fk_event_comment_id_comment_id` FOREIGN KEY (`comment_id`) REFERENCES `comment` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_event_event_outcome_id_event_outcome_id` FOREIGN KEY (`event_outcome_id`) REFERENCES `event_outcome_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_event_event_type_id_event_type_id` FOREIGN KEY (`event_type_id`) REFERENCES `event_type_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=53 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='System and manual events';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_event_bi`
BEFORE INSERT ON `mot2`.`event`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_event_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_event_bu`
BEFORE UPDATE ON `mot2`.`event`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_event_bu Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_event_au`
AFTER UPDATE ON `mot2`.`event`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_event_au Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`event_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`event_type_id`
        ,`event_outcome_id`
        ,`description`
        ,`comment_id`
        ,`is_manual_event`
        ,`event_date`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`event_type_id`
        ,OLD.`event_outcome_id`
        ,OLD.`description`
        ,OLD.`comment_id`
        ,OLD.`is_manual_event`
        ,OLD.`event_date`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_event_bd`
BEFORE DELETE ON `mot2`.`event`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_event_bd Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`event_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`event_type_id`
        ,`event_outcome_id`
        ,`description`
        ,`comment_id`
        ,`is_manual_event`
        ,`event_date`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`event_type_id`
        ,OLD.`event_outcome_id`
        ,OLD.`description`
        ,OLD.`comment_id`
        ,OLD.`is_manual_event`
        ,OLD.`event_date`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `event_category_lookup`
--

DROP TABLE IF EXISTS `event_category_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `event_category_lookup` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `code` varchar(5) NOT NULL,
  `name` varchar(50) NOT NULL,
  `description` varchar(250) NOT NULL,
  `display_order` smallint(5) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_code` (`code`),
  UNIQUE KEY `uk_display_order` (`display_order`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Category of events';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_event_category_lookup_bi`
BEFORE INSERT ON `mot2`.`event_category_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_event_category_lookup_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `event_hist`
--

DROP TABLE IF EXISTS `event_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `event_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `event_type_id` smallint(5) unsigned DEFAULT NULL,
  `event_outcome_id` smallint(5) unsigned DEFAULT NULL,
  `description` varchar(500) DEFAULT NULL,
  `comment_id` bigint(20) unsigned DEFAULT NULL,
  `is_manual_event` tinyint(4) DEFAULT NULL,
  `event_date` datetime(6) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_event_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:07';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `event_organisation_map`
--

DROP TABLE IF EXISTS `event_organisation_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `event_organisation_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `event_id` int(10) unsigned NOT NULL,
  `organisation_id` int(10) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_event_org_map_event_id_event_id` (`event_id`),
  KEY `fk_event_org_map_org_id_org_id` (`organisation_id`),
  CONSTRAINT `fk_event_org_map_event_id_event_id` FOREIGN KEY (`event_id`) REFERENCES `event` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_event_org_map_org_id_org_id` FOREIGN KEY (`organisation_id`) REFERENCES `organisation` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=27 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Map table to join event and organisation';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_event_organisation_map_bi`
BEFORE INSERT ON `mot2`.`event_organisation_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_event_organisation_map_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_event_organisation_map_bu`
BEFORE UPDATE ON `mot2`.`event_organisation_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_event_organisation_map_bu Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_event_organisation_map_au`
AFTER UPDATE ON `mot2`.`event_organisation_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_event_organisation_map_au Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`event_organisation_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`event_id`
        ,`organisation_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`event_id`
        ,OLD.`organisation_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_event_organisation_map_bd`
BEFORE DELETE ON `mot2`.`event_organisation_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_event_organisation_map_bd Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`event_organisation_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`event_id`
        ,`organisation_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`event_id`
        ,OLD.`organisation_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `event_organisation_map_hist`
--

DROP TABLE IF EXISTS `event_organisation_map_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `event_organisation_map_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `event_id` int(10) unsigned DEFAULT NULL,
  `organisation_id` int(10) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_event_organisation_map_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `event_outcome_lookup`
--

DROP TABLE IF EXISTS `event_outcome_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `event_outcome_lookup` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `code` varchar(5) NOT NULL,
  `name` varchar(100) NOT NULL,
  `display_order` smallint(5) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_code` (`code`),
  UNIQUE KEY `uk_display_order` (`display_order`)
) ENGINE=InnoDB AUTO_INCREMENT=86 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Event outcomes';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_event_outcome_lookup_bi`
BEFORE INSERT ON `mot2`.`event_outcome_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_event_outcome_lookup_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `event_person_map`
--

DROP TABLE IF EXISTS `event_person_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `event_person_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `event_id` int(10) unsigned NOT NULL,
  `person_id` int(10) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_event_person_map_event_id_event_id` (`event_id`),
  KEY `fk_event_person_map_person_id_person_id` (`person_id`),
  CONSTRAINT `fk_event_person_map_event_id_event_id` FOREIGN KEY (`event_id`) REFERENCES `event` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_event_person_map_person_id_person_id` FOREIGN KEY (`person_id`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Map table to join event and person';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_event_person_map_bi`
BEFORE INSERT ON `mot2`.`event_person_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_event_person_map_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_event_person_map_bu`
BEFORE UPDATE ON `mot2`.`event_person_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_event_person_map_bu Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_event_person_map_au`
AFTER UPDATE ON `mot2`.`event_person_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_event_person_map_au Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`event_person_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`event_id`
        ,`person_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`event_id`
        ,OLD.`person_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_event_person_map_bd`
BEFORE DELETE ON `mot2`.`event_person_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_event_person_map_bd Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`event_person_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`event_id`
        ,`person_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`event_id`
        ,OLD.`person_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `event_person_map_hist`
--

DROP TABLE IF EXISTS `event_person_map_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `event_person_map_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `event_id` int(10) unsigned DEFAULT NULL,
  `person_id` int(10) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_event_person_map_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `event_site_map`
--

DROP TABLE IF EXISTS `event_site_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `event_site_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `event_id` int(10) unsigned NOT NULL,
  `site_id` int(10) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_event_site_map_event_id_event_id` (`event_id`),
  KEY `fk_event_site_map_site_id_site_id` (`site_id`),
  CONSTRAINT `fk_event_site_map_event_id_event_id` FOREIGN KEY (`event_id`) REFERENCES `event` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_event_site_map_site_id_site_id` FOREIGN KEY (`site_id`) REFERENCES `site` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=33 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Map table to join event and site';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_event_site_map_bi`
BEFORE INSERT ON `mot2`.`event_site_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_event_site_map_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_event_site_map_bu`
BEFORE UPDATE ON `mot2`.`event_site_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_event_site_map_bu Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_event_site_map_au`
AFTER UPDATE ON `mot2`.`event_site_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_event_site_map_au Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`event_site_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`event_id`
        ,`site_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`event_id`
        ,OLD.`site_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_event_site_map_bd`
BEFORE DELETE ON `mot2`.`event_site_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_event_site_map_bd Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`event_site_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`event_id`
        ,`site_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`event_id`
        ,OLD.`site_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `event_site_map_hist`
--

DROP TABLE IF EXISTS `event_site_map_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `event_site_map_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `event_id` int(10) unsigned DEFAULT NULL,
  `site_id` int(10) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_event_site_map_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `event_type_lookup`
--

DROP TABLE IF EXISTS `event_type_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `event_type_lookup` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `code` varchar(5) NOT NULL,
  `name` varchar(50) NOT NULL,
  `display_order` smallint(5) unsigned DEFAULT NULL,
  `start_date` date NOT NULL,
  `end_date` date DEFAULT NULL COMMENT 'information is required from the business as to whether end_date is expected for all events',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_code` (`code`),
  UNIQUE KEY `uk_display_order` (`display_order`)
) ENGINE=InnoDB AUTO_INCREMENT=82 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Event types lookup table. Populated with MOT1 data';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_event_type_lookup_bi`
BEFORE INSERT ON `mot2`.`event_type_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_event_type_lookup_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `event_type_outcome_category_map`
--

DROP TABLE IF EXISTS `event_type_outcome_category_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `event_type_outcome_category_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `event_type_id` smallint(5) unsigned NOT NULL,
  `event_outcome_id` smallint(5) unsigned NOT NULL,
  `event_category_id` smallint(5) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_event_type_outcome_category_map_type_outcome_category` (`event_type_id`,`event_outcome_id`,`event_category_id`),
  KEY `fk_event_type_outcome_category_map_event_category_id` (`event_category_id`),
  KEY `fk_event_type_outcome_category_map_event_outcome_id` (`event_outcome_id`),
  CONSTRAINT `fk_event_type_outcome_category_map_event_category_id` FOREIGN KEY (`event_category_id`) REFERENCES `event_category_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_event_type_outcome_category_map_event_outcome_id` FOREIGN KEY (`event_outcome_id`) REFERENCES `event_outcome_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_event_type_outcome_category_map_event_type_id` FOREIGN KEY (`event_type_id`) REFERENCES `event_type_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=468 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Restrict event outcome for a specific event type by categories';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_event_type_outcome_category_map_bi`
BEFORE INSERT ON `mot2`.`event_type_outcome_category_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_event_type_outcome_category_map_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `evidence`
--

DROP TABLE IF EXISTS `evidence`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `evidence` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `document_type_id` smallint(5) unsigned NOT NULL,
  `document_ref` varchar(45) DEFAULT NULL,
  `method_of_delivery_id` smallint(5) unsigned zerofill NOT NULL,
  `recieved_on` datetime(6) DEFAULT NULL,
  `status_id` smallint(5) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_evidence_bi`
BEFORE INSERT ON `mot2`.`evidence`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_evidence_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `experience`
--

DROP TABLE IF EXISTS `experience`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `experience` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `employer` varchar(100) NOT NULL,
  `description` varchar(255) DEFAULT NULL,
  `person_id` int(10) unsigned NOT NULL,
  `date_from` datetime(6) DEFAULT NULL,
  `date_to` datetime(6) DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_experience_person` (`person_id`),
  CONSTRAINT `fk_experience_person` FOREIGN KEY (`person_id`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Experience a person has of work relating to the MOT trade, use in applications';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_experience_bi`
BEFORE INSERT ON `mot2`.`experience`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_experience_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `facility_type`
--

DROP TABLE IF EXISTS `facility_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `facility_type` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_facility_type_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation of facility types at a site';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_facility_type_bi`
BEFORE INSERT ON `mot2`.`facility_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_facility_type_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `failure_location_lookup`
--

DROP TABLE IF EXISTS `failure_location_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `failure_location_lookup` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `code` varchar(5) DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Location of a failure';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_failure_location_lookup_bi`
BEFORE INSERT ON `mot2`.`failure_location_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_failure_location_lookup_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `fuel_type`
--

DROP TABLE IF EXISTS `fuel_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `fuel_type` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `dvla_propulsion_code` varchar(2) CHARACTER SET latin1 DEFAULT NULL,
  `display_order` smallint(5) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_fuel_type_code` (`code`),
  UNIQUE KEY `uk_fuel_type_display_order` (`display_order`)
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Representation of the various fuel types';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_fuel_type_bi`
BEFORE INSERT ON `mot2`.`fuel_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_fuel_type_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `gender`
--

DROP TABLE IF EXISTS `gender`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `gender` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='normalisation of a persons gender';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_gender_bi`
BEFORE INSERT ON `mot2`.`gender`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_gender_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `identifying_token`
--

DROP TABLE IF EXISTS `identifying_token`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `identifying_token` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) DEFAULT NULL,
  `serial_number` varchar(20) DEFAULT NULL,
  `token_lookup_id` smallint(5) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_identifying_token_token_lookup1` (`token_lookup_id`),
  CONSTRAINT `fk_identifying_token_token_lookup1` FOREIGN KEY (`token_lookup_id`) REFERENCES `token_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_identifying_token_bi`
BEFORE INSERT ON `mot2`.`identifying_token`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_identifying_token_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `incognito_vehicle`
--

DROP TABLE IF EXISTS `incognito_vehicle`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `incognito_vehicle` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `vehicle_id` int(10) unsigned NOT NULL,
  `start_date` datetime DEFAULT NULL,
  `end_date` datetime DEFAULT NULL,
  `test_date` date DEFAULT NULL COMMENT 'visible date of last test',
  `expiry_date` date DEFAULT NULL COMMENT 'visible expiry date',
  `site_id` int(10) unsigned DEFAULT NULL COMMENT 'AO for this Vehicle',
  `person_id` int(10) unsigned DEFAULT NULL COMMENT 'VE for this vehicle',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_incognito_vehicle_person_id` (`person_id`),
  KEY `fk_incognito_vehicle_site_id` (`site_id`),
  KEY `fk_incognito_vehicle_vehicle_id` (`vehicle_id`),
  CONSTRAINT `fk_incognito_vehicle_person_id` FOREIGN KEY (`person_id`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_incognito_vehicle_site_id` FOREIGN KEY (`site_id`) REFERENCES `site` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_incognito_vehicle_vehicle_id` FOREIGN KEY (`vehicle_id`) REFERENCES `vehicle` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_incognito_vehicle_bi`
BEFORE INSERT ON `mot2`.`incognito_vehicle`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_incognito_vehicle_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `jasper_document`
--

DROP TABLE IF EXISTS `jasper_document`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `jasper_document` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `template_id` int(10) unsigned NOT NULL,
  `document_content` text COMMENT 'Column to store serialised data (json) used by jasper reports o generate documents. Max length 64k',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_jasper_document_template` (`template_id`),
  CONSTRAINT `fk_jasper_document_template` FOREIGN KEY (`template_id`) REFERENCES `jasper_template` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Jasper Reports related table.';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_jasper_document_bi`
BEFORE INSERT ON `mot2`.`jasper_document`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_jasper_document_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_jasper_document_bu`
BEFORE UPDATE ON `mot2`.`jasper_document`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_jasper_document_bu Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_jasper_document_au`
AFTER UPDATE ON `mot2`.`jasper_document`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_jasper_document_au Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`jasper_document_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`template_id`
        ,`document_content`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`template_id`
        ,OLD.`document_content`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_jasper_document_bd`
BEFORE DELETE ON `mot2`.`jasper_document`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_jasper_document_bd Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`jasper_document_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`template_id`
        ,`document_content`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`template_id`
        ,OLD.`document_content`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `jasper_document_hist`
--

DROP TABLE IF EXISTS `jasper_document_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `jasper_document_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` bigint(20) unsigned DEFAULT NULL,
  `template_id` int(10) unsigned DEFAULT NULL,
  `document_content` text,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_jasper_document_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `jasper_hard_copy`
--

DROP TABLE IF EXISTS `jasper_hard_copy`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `jasper_hard_copy` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `document_id` bigint(20) unsigned DEFAULT NULL,
  `file_path` varchar(255) DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `hard_copy_ibfk_1` (`document_id`),
  CONSTRAINT `hard_copy_ibfk_1` FOREIGN KEY (`document_id`) REFERENCES `jasper_document` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Jasper Reports related table.';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_jasper_hard_copy_bi`
BEFORE INSERT ON `mot2`.`jasper_hard_copy`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_jasper_hard_copy_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `jasper_template`
--

DROP TABLE IF EXISTS `jasper_template`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `jasper_template` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `template_type_id` int(10) unsigned NOT NULL,
  `jasper_report_name` varchar(255) NOT NULL,
  `is_active` tinyint(4) NOT NULL,
  `active_from` datetime(6) NOT NULL,
  `active_to` datetime(6) DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_jasper_template_jasper_template_type` (`template_type_id`),
  CONSTRAINT `fk_jasper_template_jasper_template_type` FOREIGN KEY (`template_type_id`) REFERENCES `jasper_template_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Jasper Reports related table.';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_jasper_template_bi`
BEFORE INSERT ON `mot2`.`jasper_template`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_jasper_template_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `jasper_template_type`
--

DROP TABLE IF EXISTS `jasper_template_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `jasper_template_type` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Jasper Reports related table.';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_jasper_template_type_bi`
BEFORE INSERT ON `mot2`.`jasper_template_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_jasper_template_type_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `jasper_template_variation`
--

DROP TABLE IF EXISTS `jasper_template_variation`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `jasper_template_variation` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `template_id` int(10) unsigned NOT NULL,
  `name` varchar(255) NOT NULL,
  `jasper_report_name` varchar(255) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `jasper_template_variation_ibfk_1` (`template_id`),
  CONSTRAINT `jasper_template_variation_ibfk_1` FOREIGN KEY (`template_id`) REFERENCES `jasper_template` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Jasper Reports related table.';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_jasper_template_variation_bi`
BEFORE INSERT ON `mot2`.`jasper_template_variation`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_jasper_template_variation_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `language_type`
--

DROP TABLE IF EXISTS `language_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `language_type` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Written languages used in application';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_language_type_bi`
BEFORE INSERT ON `mot2`.`language_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_language_type_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `licence`
--

DROP TABLE IF EXISTS `licence`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `licence` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `licence_number` varchar(45) NOT NULL,
  `licence_type_id` smallint(5) unsigned NOT NULL,
  `licence_country_id` bigint(20) unsigned DEFAULT NULL,
  `valid_from` datetime(6) DEFAULT NULL,
  `expiry_date` datetime(6) DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_licence_licence_country_id` (`licence_country_id`),
  KEY `fk_licence_licence_type` (`licence_type_id`),
  CONSTRAINT `fk_licence_licence_country_id` FOREIGN KEY (`licence_country_id`) REFERENCES `licence_country_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_licence_licence_type` FOREIGN KEY (`licence_type_id`) REFERENCES `licence_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='License held by a person, such as drivers license';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_licence_bi`
BEFORE INSERT ON `mot2`.`licence`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_licence_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_licence_bu`
BEFORE UPDATE ON `mot2`.`licence`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_licence_bu Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_licence_au`
AFTER UPDATE ON `mot2`.`licence`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_licence_au Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`licence_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`licence_number`
        ,`licence_type_id`
        ,`licence_country_id`
        ,`valid_from`
        ,`expiry_date`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`licence_number`
        ,OLD.`licence_type_id`
        ,OLD.`licence_country_id`
        ,OLD.`valid_from`
        ,OLD.`expiry_date`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_licence_bd`
BEFORE DELETE ON `mot2`.`licence`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_licence_bd Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`licence_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`licence_number`
        ,`licence_type_id`
        ,`licence_country_id`
        ,`valid_from`
        ,`expiry_date`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`licence_number`
        ,OLD.`licence_type_id`
        ,OLD.`licence_country_id`
        ,OLD.`valid_from`
        ,OLD.`expiry_date`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `licence_country_lookup`
--

DROP TABLE IF EXISTS `licence_country_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `licence_country_lookup` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) NOT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) DEFAULT NULL,
  `last_updated_on` timestamp(6) NULL DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Lookup for a licence''s issuing country';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_licence_country_lookup_bi`
BEFORE INSERT ON `mot2`.`licence_country_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_licence_country_lookup_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `licence_hist`
--

DROP TABLE IF EXISTS `licence_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `licence_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `licence_number` varchar(45) DEFAULT NULL,
  `licence_type_id` smallint(5) unsigned DEFAULT NULL,
  `licence_country_id` bigint(20) unsigned DEFAULT NULL,
  `valid_from` datetime(6) DEFAULT NULL,
  `expiry_date` datetime(6) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_licence_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `licence_type`
--

DROP TABLE IF EXISTS `licence_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `licence_type` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_licence_type_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Type of license i.e. Driving Licence';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_licence_type_bi`
BEFORE INSERT ON `mot2`.`licence_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_licence_type_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `make`
--

DROP TABLE IF EXISTS `make`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `make` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) DEFAULT NULL,
  `is_verified` tinyint(4) NOT NULL DEFAULT '0' COMMENT 'Verified and visible for dropdowns etc',
  `created_by` int(10) unsigned NOT NULL DEFAULT '0',
  `created_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned NOT NULL DEFAULT '0',
  `last_updated_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `ux_make_name` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=100233 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Vehicle makes';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_make_bi`
BEFORE INSERT ON `mot2`.`make`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_make_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `message`
--

DROP TABLE IF EXISTS `message`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `message` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `person_id` int(10) unsigned NOT NULL,
  `message_type_id` smallint(5) unsigned NOT NULL,
  `issue_date` datetime DEFAULT NULL,
  `expiry_date` datetime DEFAULT NULL,
  `is_acknowledged` tinyint(4) NOT NULL DEFAULT '0',
  `token` varchar(64) DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_message_token` (`token`),
  KEY `fk_message_message_type1` (`message_type_id`),
  KEY `fk_message_person` (`person_id`),
  CONSTRAINT `fk_message_message_type1` FOREIGN KEY (`message_type_id`) REFERENCES `message_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_message_person` FOREIGN KEY (`person_id`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Messages sent from the system i.e. Forgotten password';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_message_bi`
BEFORE INSERT ON `mot2`.`message`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_message_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_message_bu`
BEFORE UPDATE ON `mot2`.`message`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_message_bu Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_message_au`
AFTER UPDATE ON `mot2`.`message`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_message_au Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`message_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`person_id`
        ,`message_type_id`
        ,`issue_date`
        ,`expiry_date`
        ,`is_acknowledged`
        ,`token`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`person_id`
        ,OLD.`message_type_id`
        ,OLD.`issue_date`
        ,OLD.`expiry_date`
        ,OLD.`is_acknowledged`
        ,OLD.`token`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_message_bd`
BEFORE DELETE ON `mot2`.`message`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_message_bd Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`message_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`person_id`
        ,`message_type_id`
        ,`issue_date`
        ,`expiry_date`
        ,`is_acknowledged`
        ,`token`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`person_id`
        ,OLD.`message_type_id`
        ,OLD.`issue_date`
        ,OLD.`expiry_date`
        ,OLD.`is_acknowledged`
        ,OLD.`token`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `message_content`
--

DROP TABLE IF EXISTS `message_content`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `message_content` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `message_id` int(10) unsigned NOT NULL,
  `recipient_email` varchar(255) NOT NULL,
  `title` varchar(100) NOT NULL,
  `content` text NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_message_content_message1` (`message_id`),
  CONSTRAINT `fk_message_content_message1` FOREIGN KEY (`message_id`) REFERENCES `message` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Content of messages sent from the system';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_message_content_bi`
BEFORE INSERT ON `mot2`.`message_content`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_message_content_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `message_hist`
--

DROP TABLE IF EXISTS `message_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `message_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `person_id` int(10) unsigned DEFAULT NULL,
  `message_type_id` smallint(5) unsigned DEFAULT NULL,
  `issue_date` datetime DEFAULT NULL,
  `expiry_date` datetime DEFAULT NULL,
  `is_acknowledged` tinyint(4) DEFAULT NULL,
  `token` varchar(64) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_message_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `message_type`
--

DROP TABLE IF EXISTS `message_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `message_type` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `expiry_period` smallint(6) unsigned DEFAULT NULL COMMENT 'How long after sending do URLs expire (in hours)',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_message_type_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Types of messages i.e. Forgotten password, Username reminder etc';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_message_type_bi`
BEFORE INSERT ON `mot2`.`message_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_message_type_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `message_url`
--

DROP TABLE IF EXISTS `message_url`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `message_url` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `message_id` int(10) unsigned NOT NULL,
  `url_type_id` smallint(5) unsigned NOT NULL,
  `name` varchar(100) NOT NULL,
  `url` varchar(255) NOT NULL,
  `used_count` smallint(6) unsigned NOT NULL DEFAULT '0',
  `is_expired` tinyint(4) NOT NULL DEFAULT '0',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_message_url_message1` (`message_id`),
  KEY `fk_message_url_url_type1` (`url_type_id`),
  CONSTRAINT `fk_message_url_message1` FOREIGN KEY (`message_id`) REFERENCES `message` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_message_url_url_type1` FOREIGN KEY (`url_type_id`) REFERENCES `url_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='URLs used in messages';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_message_url_bi`
BEFORE INSERT ON `mot2`.`message_url`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_message_url_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `model`
--

DROP TABLE IF EXISTS `model`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `model` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `make_id` int(10) unsigned NOT NULL,
  `code` varchar(5) DEFAULT NULL COMMENT 'NULL for non DVLA models',
  `name` varchar(50) NOT NULL,
  `is_verified` tinyint(4) NOT NULL DEFAULT '0',
  `created_by` int(10) unsigned NOT NULL DEFAULT '0',
  `created_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned NOT NULL DEFAULT '0',
  `last_updated_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `ddr_make_id_model_name_unq` (`make_id`,`name`),
  CONSTRAINT `fk_model_make_id` FOREIGN KEY (`make_id`) REFERENCES `make` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=107691 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Vehicle models';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_model_bi`
BEFORE INSERT ON `mot2`.`model`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_model_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `model_detail`
--

DROP TABLE IF EXISTS `model_detail`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `model_detail` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `model_id` int(10) unsigned DEFAULT NULL,
  `is_verified` tinyint(4) NOT NULL DEFAULT '0',
  `vehicle_class_id` smallint(5) unsigned DEFAULT NULL,
  `body_type_id` smallint(5) unsigned DEFAULT NULL,
  `fuel_type_id` smallint(5) unsigned DEFAULT NULL,
  `wheelplan_type_id` smallint(5) unsigned DEFAULT NULL,
  `transmission_type_id` smallint(5) unsigned DEFAULT NULL,
  `eu_classification` varchar(2) DEFAULT NULL,
  `cylinder_capacity` int(10) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL DEFAULT '0',
  `created_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned NOT NULL DEFAULT '0',
  `last_updated_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  `sha1_concat_ws_chksum` char(40) CHARACTER SET latin1 DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `model_detail_sha1_unq` (`sha1_concat_ws_chksum`) COMMENT 'unique index to allow model_details to be derived from the vehicle table',
  KEY `fk_model_detail_model_id` (`model_id`),
  KEY `fk_model_detail_vehicle_class_id` (`vehicle_class_id`),
  KEY `fk_model_detail_body_type_id` (`body_type_id`),
  KEY `fk_model_detail_fuel_type_id` (`fuel_type_id`),
  KEY `fk_model_detail_transmission_type_id` (`transmission_type_id`),
  CONSTRAINT `fk_model_detail_body_type_id` FOREIGN KEY (`body_type_id`) REFERENCES `body_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_model_detail_fuel_type_id` FOREIGN KEY (`fuel_type_id`) REFERENCES `fuel_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_model_detail_model_id` FOREIGN KEY (`model_id`) REFERENCES `model` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_model_detail_transmission_type_id` FOREIGN KEY (`transmission_type_id`) REFERENCES `transmission_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_model_detail_vehicle_class_id` FOREIGN KEY (`vehicle_class_id`) REFERENCES `vehicle_class` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=127 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Model detail that would have come from the VSI.';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_model_detail_bi`
BEFORE INSERT ON `mot2`.`model_detail`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_model_detail_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `mot1_vts_device_status`
--

DROP TABLE IF EXISTS `mot1_vts_device_status`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mot1_vts_device_status` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_mot1_vts_device_status_bi`
BEFORE INSERT ON `mot2`.`mot1_vts_device_status`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_mot1_vts_device_status_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `mot_test`
--

DROP TABLE IF EXISTS `mot_test`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mot_test` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `person_id` int(10) unsigned NOT NULL,
  `vehicle_id` int(10) unsigned NOT NULL,
  `vehicle_version` int(10) unsigned DEFAULT NULL,
  `document_id` bigint(20) unsigned DEFAULT NULL,
  `site_id` int(10) unsigned DEFAULT NULL,
  `primary_colour_id` smallint(5) unsigned NOT NULL,
  `secondary_colour_id` smallint(5) unsigned DEFAULT NULL,
  `vehicle_class_id` smallint(5) unsigned DEFAULT NULL,
  `tested_as_fuel_type_id` smallint(5) unsigned DEFAULT NULL,
  `vin` varchar(30) CHARACTER SET latin1 DEFAULT NULL,
  `empty_vin_reason_id` smallint(5) unsigned DEFAULT NULL,
  `registration` varchar(20) CHARACTER SET latin1 DEFAULT NULL,
  `empty_vrm_reason_id` smallint(5) unsigned DEFAULT NULL,
  `make_id` int(10) unsigned DEFAULT NULL,
  `model_id` int(10) unsigned DEFAULT NULL,
  `model_detail_id` int(10) unsigned DEFAULT NULL,
  `country_of_registration_id` smallint(5) unsigned DEFAULT NULL,
  `has_registration` tinyint(4) unsigned NOT NULL,
  `mot_test_type_id` smallint(5) unsigned NOT NULL,
  `started_date` datetime(6) NOT NULL COMMENT 'It is populated by application due to contingency testing',
  `completed_date` datetime(6) DEFAULT NULL,
  `status_id` smallint(5) unsigned NOT NULL,
  `issued_date` datetime(6) DEFAULT NULL,
  `expiry_date` date DEFAULT NULL,
  `mot_test_id_original` bigint(20) unsigned DEFAULT NULL,
  `prs_mot_test_id` bigint(20) unsigned DEFAULT NULL,
  `mot_test_reason_for_cancel_id` smallint(5) unsigned DEFAULT NULL COMMENT 'Not null only for canceled tests',
  `reason_for_cancel_comment_id` bigint(20) unsigned DEFAULT NULL,
  `reason_for_termination_comment` varchar(240) DEFAULT NULL,
  `full_partial_retest_id` smallint(5) unsigned DEFAULT '1',
  `partial_reinspection_comment_id` bigint(20) unsigned DEFAULT NULL,
  `items_not_tested_comment_id` bigint(20) unsigned DEFAULT NULL,
  `one_person_test` tinyint(3) unsigned DEFAULT NULL,
  `one_person_reinspection` tinyint(3) unsigned DEFAULT NULL,
  `complaint_ref` varchar(30) DEFAULT NULL,
  `number` decimal(12,0) DEFAULT NULL COMMENT 'No sequencial test number',
  `odometer_reading_id` bigint(20) unsigned DEFAULT NULL COMMENT 'Updated during test so multiple odometer values may exist over test lifetime',
  `private` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT 'Do not fetch this row unless you know you are allowed to. See enforcement for details.',
  `emergency_log_id` int(10) unsigned DEFAULT NULL COMMENT 'This should be only have an entry if the Test is an emergency/contingency Test',
  `emergency_reason_lookup_id` smallint(5) unsigned DEFAULT NULL COMMENT 'An emergency/contingency Test should always have an emergency reason entered by the Tester or the person who enters the Test on the system',
  `emergency_reason_comment_id` bigint(20) unsigned DEFAULT NULL COMMENT 'Free text comments should be only be entered when the emergency_reason_lookup_id is "Other"',
  `vehicle_weight_source_lookup_id` smallint(5) unsigned DEFAULT NULL COMMENT 'Source of vehicle_weight',
  `vehicle_weight` int(10) unsigned DEFAULT NULL COMMENT 'Brake test weight from MOT1 VEHTESTBRAKEWEIGHT should be used in the calculation of brake efficiency. Recorded in kilograms. Migrated from MOT1 as brake test are not migrated',
  `incognito_vehicle_id` int(10) unsigned DEFAULT NULL,
  `address_comment_id` bigint(20) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  `make_name` varchar(50) DEFAULT NULL,
  `model_name` varchar(50) DEFAULT NULL,
  `model_detail_name` varchar(50) DEFAULT NULL,
  `client_ip` varchar(45) DEFAULT '0.0.0.0',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_mot_test_number` (`number`),
  KEY `mot_test_completed_date_idx` (`completed_date`),
  KEY `mot_test_site_id_started_date_completed_date_idx` (`site_id`,`started_date`,`completed_date`),
  KEY `mot_test_person_id_started_date_completed_date_idx` (`person_id`,`started_date`,`completed_date`),
  KEY `mot_test_site_id_status_id_idx` (`site_id`,`status_id`),
  KEY `mot_test_person_id_status_id_idx` (`person_id`,`status_id`),
  KEY `mot_test_created_on_emergency_log_id_idx` (`created_on`,`emergency_log_id`),
  KEY `fk_items_not_tested_comment_id` (`items_not_tested_comment_id`),
  KEY `fk_mot_test_address_comment_id` (`address_comment_id`),
  KEY `fk_mot_test_country_of_registration_id` (`country_of_registration_id`),
  KEY `fk_mot_test_emergency_log_id` (`emergency_log_id`),
  KEY `fk_mot_test_emergency_reason_comment_id` (`emergency_reason_comment_id`),
  KEY `fk_mot_test_emergency_reason_lookup_id` (`emergency_reason_lookup_id`),
  KEY `fk_mot_test_empty_vin_reason_id_empty_vin_reason_lookup_id` (`empty_vin_reason_id`),
  KEY `fk_mot_test_empty_vrm_reason_id_empty_vrm_reason_lookup_id` (`empty_vrm_reason_id`),
  KEY `fk_mot_test_fuel_lookup_id` (`tested_as_fuel_type_id`),
  KEY `fk_mot_test_full_partial_retest_id` (`full_partial_retest_id`),
  KEY `fk_mot_test_incognito_vehicle_id` (`incognito_vehicle_id`),
  KEY `fk_mot_test_jasper_document_id` (`document_id`),
  KEY `fk_mot_test_make_id` (`make_id`),
  KEY `fk_mot_test_model_detail_id` (`model_detail_id`),
  KEY `fk_mot_test_model_id` (`model_id`),
  KEY `fk_mot_test_mot_test_id_original_mot_test_id` (`mot_test_id_original`),
  KEY `fk_mot_test_mot_test_type_id` (`mot_test_type_id`),
  KEY `fk_mot_test_odometer_reading` (`odometer_reading_id`),
  KEY `fk_mot_test_prs_mot_test_id_mot_test_id` (`prs_mot_test_id`),
  KEY `fk_mot_test_reason_for_cancel_id` (`mot_test_reason_for_cancel_id`),
  KEY `fk_mot_test_status_id` (`status_id`),
  KEY `fk_mot_test_vehicle` (`vehicle_id`),
  KEY `fk_mot_test_vehicle_class` (`vehicle_class_id`),
  KEY `fk_mot_test_vehicle_weight_source_lookup_id` (`vehicle_weight_source_lookup_id`),
  KEY `fk_partial_reinspection_comment_id` (`partial_reinspection_comment_id`),
  KEY `fk_test_primary_colour` (`primary_colour_id`),
  KEY `fk_test_reason_for_cancel_comment_id` (`reason_for_cancel_comment_id`),
  KEY `fk_test_secondary_colour` (`secondary_colour_id`),
  CONSTRAINT `fk_items_not_tested_comment_id` FOREIGN KEY (`items_not_tested_comment_id`) REFERENCES `comment` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_address_comment_id` FOREIGN KEY (`address_comment_id`) REFERENCES `comment` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_country_of_registration_id` FOREIGN KEY (`country_of_registration_id`) REFERENCES `country_of_registration_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_emergency_log_id` FOREIGN KEY (`emergency_log_id`) REFERENCES `emergency_log` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_emergency_reason_comment_id` FOREIGN KEY (`emergency_reason_comment_id`) REFERENCES `comment` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_emergency_reason_lookup_id` FOREIGN KEY (`emergency_reason_lookup_id`) REFERENCES `emergency_reason_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_empty_vin_reason_id_empty_vin_reason_lookup_id` FOREIGN KEY (`empty_vin_reason_id`) REFERENCES `empty_vin_reason_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_empty_vrm_reason_id_empty_vrm_reason_lookup_id` FOREIGN KEY (`empty_vrm_reason_id`) REFERENCES `empty_vrm_reason_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_fuel_lookup_id` FOREIGN KEY (`tested_as_fuel_type_id`) REFERENCES `fuel_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_full_partial_retest_id` FOREIGN KEY (`full_partial_retest_id`) REFERENCES `enforcement_full_partial_retest_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_incognito_vehicle_id` FOREIGN KEY (`incognito_vehicle_id`) REFERENCES `incognito_vehicle` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_jasper_document_id` FOREIGN KEY (`document_id`) REFERENCES `jasper_document` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_make_id` FOREIGN KEY (`make_id`) REFERENCES `make` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_model_detail_id` FOREIGN KEY (`model_detail_id`) REFERENCES `model_detail` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_model_id` FOREIGN KEY (`model_id`) REFERENCES `model` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_mot_test_id_original_mot_test_id` FOREIGN KEY (`mot_test_id_original`) REFERENCES `mot_test` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_mot_test_type_id` FOREIGN KEY (`mot_test_type_id`) REFERENCES `mot_test_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_odometer_reading` FOREIGN KEY (`odometer_reading_id`) REFERENCES `odometer_reading` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_person` FOREIGN KEY (`person_id`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_prs_mot_test_id_mot_test_id` FOREIGN KEY (`prs_mot_test_id`) REFERENCES `mot_test` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_reason_for_cancel_id` FOREIGN KEY (`mot_test_reason_for_cancel_id`) REFERENCES `mot_test_reason_for_cancel_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_site` FOREIGN KEY (`site_id`) REFERENCES `site` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_status_id` FOREIGN KEY (`status_id`) REFERENCES `mot_test_status` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_vehicle` FOREIGN KEY (`vehicle_id`) REFERENCES `vehicle` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_vehicle_class` FOREIGN KEY (`vehicle_class_id`) REFERENCES `vehicle_class` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_vehicle_weight_source_lookup_id` FOREIGN KEY (`vehicle_weight_source_lookup_id`) REFERENCES `weight_source_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_partial_reinspection_comment_id` FOREIGN KEY (`partial_reinspection_comment_id`) REFERENCES `comment` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_test_primary_colour` FOREIGN KEY (`primary_colour_id`) REFERENCES `colour_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_test_reason_for_cancel_comment_id` FOREIGN KEY (`reason_for_cancel_comment_id`) REFERENCES `comment` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_test_secondary_colour` FOREIGN KEY (`secondary_colour_id`) REFERENCES `colour_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_mot_test_bi`
BEFORE INSERT ON `mot2`.`mot_test`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_mot_test_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    DECLARE c_active_status_id INTEGER DEFAULT 4;

    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;

    IF (NEW.`status_id` != c_active_status_id AND NEW.`completed_date` IS NULL)
    THEN
        SIGNAL SQLSTATE '10001' SET MESSAGE_TEXT = 'completed_date needs to be set for non ACTIVE mot tests';
    END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_mot_test_bu`
BEFORE UPDATE ON `mot2`.`mot_test`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_mot_test_bu Generated on 2016-07-04 12:27:11. $Id$';
    
    DECLARE c_active_status_id INTEGER DEFAULT 4;

    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;

    IF (NEW.`status_id` != c_active_status_id AND NEW.`completed_date` IS NULL)
    THEN
        SIGNAL SQLSTATE '10001' SET MESSAGE_TEXT = 'completed_date needs to be set for non ACTIVE mot tests';
    END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_mot_test_au`
AFTER UPDATE ON `mot2`.`mot_test`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_mot_test_au Generated on 2016-07-04 12:27:11. $Id$';
    
    DECLARE v_mot_test_status_code VARCHAR(5);

    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`mot_test_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`person_id`
        ,`vehicle_id`
        ,`vehicle_version`
        ,`document_id`
        ,`site_id`
        ,`primary_colour_id`
        ,`secondary_colour_id`
        ,`vehicle_class_id`
        ,`tested_as_fuel_type_id`
        ,`vin`
        ,`empty_vin_reason_id`
        ,`registration`
        ,`empty_vrm_reason_id`
        ,`make_id`
        ,`model_id`
        ,`model_detail_id`
        ,`country_of_registration_id`
        ,`has_registration`
        ,`mot_test_type_id`
        ,`started_date`
        ,`completed_date`
        ,`status_id`
        ,`issued_date`
        ,`expiry_date`
        ,`mot_test_id_original`
        ,`prs_mot_test_id`
        ,`mot_test_reason_for_cancel_id`
        ,`reason_for_cancel_comment_id`
        ,`reason_for_termination_comment`
        ,`full_partial_retest_id`
        ,`partial_reinspection_comment_id`
        ,`items_not_tested_comment_id`
        ,`one_person_test`
        ,`one_person_reinspection`
        ,`complaint_ref`
        ,`number`
        ,`odometer_reading_id`
        ,`private`
        ,`emergency_log_id`
        ,`emergency_reason_lookup_id`
        ,`emergency_reason_comment_id`
        ,`vehicle_weight_source_lookup_id`
        ,`vehicle_weight`
        ,`incognito_vehicle_id`
        ,`address_comment_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`
        ,`make_name`
        ,`model_name`
        ,`model_detail_name`
        ,`client_ip`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`person_id`
        ,OLD.`vehicle_id`
        ,OLD.`vehicle_version`
        ,OLD.`document_id`
        ,OLD.`site_id`
        ,OLD.`primary_colour_id`
        ,OLD.`secondary_colour_id`
        ,OLD.`vehicle_class_id`
        ,OLD.`tested_as_fuel_type_id`
        ,OLD.`vin`
        ,OLD.`empty_vin_reason_id`
        ,OLD.`registration`
        ,OLD.`empty_vrm_reason_id`
        ,OLD.`make_id`
        ,OLD.`model_id`
        ,OLD.`model_detail_id`
        ,OLD.`country_of_registration_id`
        ,OLD.`has_registration`
        ,OLD.`mot_test_type_id`
        ,OLD.`started_date`
        ,OLD.`completed_date`
        ,OLD.`status_id`
        ,OLD.`issued_date`
        ,OLD.`expiry_date`
        ,OLD.`mot_test_id_original`
        ,OLD.`prs_mot_test_id`
        ,OLD.`mot_test_reason_for_cancel_id`
        ,OLD.`reason_for_cancel_comment_id`
        ,OLD.`reason_for_termination_comment`
        ,OLD.`full_partial_retest_id`
        ,OLD.`partial_reinspection_comment_id`
        ,OLD.`items_not_tested_comment_id`
        ,OLD.`one_person_test`
        ,OLD.`one_person_reinspection`
        ,OLD.`complaint_ref`
        ,OLD.`number`
        ,OLD.`odometer_reading_id`
        ,OLD.`private`
        ,OLD.`emergency_log_id`
        ,OLD.`emergency_reason_lookup_id`
        ,OLD.`emergency_reason_comment_id`
        ,OLD.`vehicle_weight_source_lookup_id`
        ,OLD.`vehicle_weight`
        ,OLD.`incognito_vehicle_id`
        ,OLD.`address_comment_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`
        ,OLD.`make_name`
        ,OLD.`model_name`
        ,OLD.`model_detail_name`
        ,OLD.`client_ip`);

    IF (OLD.`document_id` IS NULL AND NEW.`document_id` IS NOT NULL)
    THEN
        SELECT `code` INTO v_mot_test_status_code FROM `mot2`.`mot_test_status` WHERE `id` = NEW.`status_id`;
        IF (v_mot_test_status_code IN ('P', 'F'))
        THEN
            INSERT INTO `mot2`.`mot_test_recent_certificate`
                (`tester_person_id`, `site_id`, `mot_test_id`, `prs_mot_test_id`, `vin`, `registration`, `make_id`, `model_id`, `model_detail_id`, `make_name`, `model_name`, `model_detail_name`, `mot_test_status_id`, `document_id`, `certificate_status`)
            VALUES
                (NEW.`person_id`, NEW.`site_id`, NEW.`id`, NEW.`prs_mot_test_id`, NEW.`vin`, NEW.`registration`, NEW.`make_id`, NEW.`model_id`, NEW.`model_detail_id`, NEW.`make_name`, NEW.`model_name`, NEW.`model_detail_name`, NEW.`status_id`, NEW.`document_id`, 'NEW');
        END IF;
    END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_mot_test_bd`
BEFORE DELETE ON `mot2`.`mot_test`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_mot_test_bd Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`mot_test_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`person_id`
        ,`vehicle_id`
        ,`vehicle_version`
        ,`document_id`
        ,`site_id`
        ,`primary_colour_id`
        ,`secondary_colour_id`
        ,`vehicle_class_id`
        ,`tested_as_fuel_type_id`
        ,`vin`
        ,`empty_vin_reason_id`
        ,`registration`
        ,`empty_vrm_reason_id`
        ,`make_id`
        ,`model_id`
        ,`model_detail_id`
        ,`country_of_registration_id`
        ,`has_registration`
        ,`mot_test_type_id`
        ,`started_date`
        ,`completed_date`
        ,`status_id`
        ,`issued_date`
        ,`expiry_date`
        ,`mot_test_id_original`
        ,`prs_mot_test_id`
        ,`mot_test_reason_for_cancel_id`
        ,`reason_for_cancel_comment_id`
        ,`reason_for_termination_comment`
        ,`full_partial_retest_id`
        ,`partial_reinspection_comment_id`
        ,`items_not_tested_comment_id`
        ,`one_person_test`
        ,`one_person_reinspection`
        ,`complaint_ref`
        ,`number`
        ,`odometer_reading_id`
        ,`private`
        ,`emergency_log_id`
        ,`emergency_reason_lookup_id`
        ,`emergency_reason_comment_id`
        ,`vehicle_weight_source_lookup_id`
        ,`vehicle_weight`
        ,`incognito_vehicle_id`
        ,`address_comment_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`
        ,`make_name`
        ,`model_name`
        ,`model_detail_name`
        ,`client_ip`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`person_id`
        ,OLD.`vehicle_id`
        ,OLD.`vehicle_version`
        ,OLD.`document_id`
        ,OLD.`site_id`
        ,OLD.`primary_colour_id`
        ,OLD.`secondary_colour_id`
        ,OLD.`vehicle_class_id`
        ,OLD.`tested_as_fuel_type_id`
        ,OLD.`vin`
        ,OLD.`empty_vin_reason_id`
        ,OLD.`registration`
        ,OLD.`empty_vrm_reason_id`
        ,OLD.`make_id`
        ,OLD.`model_id`
        ,OLD.`model_detail_id`
        ,OLD.`country_of_registration_id`
        ,OLD.`has_registration`
        ,OLD.`mot_test_type_id`
        ,OLD.`started_date`
        ,OLD.`completed_date`
        ,OLD.`status_id`
        ,OLD.`issued_date`
        ,OLD.`expiry_date`
        ,OLD.`mot_test_id_original`
        ,OLD.`prs_mot_test_id`
        ,OLD.`mot_test_reason_for_cancel_id`
        ,OLD.`reason_for_cancel_comment_id`
        ,OLD.`reason_for_termination_comment`
        ,OLD.`full_partial_retest_id`
        ,OLD.`partial_reinspection_comment_id`
        ,OLD.`items_not_tested_comment_id`
        ,OLD.`one_person_test`
        ,OLD.`one_person_reinspection`
        ,OLD.`complaint_ref`
        ,OLD.`number`
        ,OLD.`odometer_reading_id`
        ,OLD.`private`
        ,OLD.`emergency_log_id`
        ,OLD.`emergency_reason_lookup_id`
        ,OLD.`emergency_reason_comment_id`
        ,OLD.`vehicle_weight_source_lookup_id`
        ,OLD.`vehicle_weight`
        ,OLD.`incognito_vehicle_id`
        ,OLD.`address_comment_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`
        ,OLD.`make_name`
        ,OLD.`model_name`
        ,OLD.`model_detail_name`
        ,OLD.`client_ip`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `mot_test_event`
--

DROP TABLE IF EXISTS `mot_test_event`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mot_test_event` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `mot_test_id` bigint(20) unsigned NOT NULL,
  `mot_test_version` smallint(5) unsigned NOT NULL COMMENT 'version of test to identify record in history table if not current record',
  `tester_person_id` int(10) unsigned DEFAULT NULL COMMENT 'Person who entered/completed the test/certificate reissue data',
  `certificate_status_id` smallint(5) unsigned NOT NULL,
  `different_tester_reason_id` smallint(5) unsigned DEFAULT NULL,
  `reason_comment_id` bigint(20) unsigned DEFAULT NULL COMMENT 'Free text for further clarification of reason for different tester',
  `document_id` bigint(20) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_mot_test_certificate_status` (`certificate_status_id`),
  KEY `fk_mot_test_different_tester_reason_id_lookup` (`different_tester_reason_id`),
  KEY `fk_mot_test_event_mot_test_id` (`mot_test_id`),
  KEY `fk_mot_test_reason` (`reason_comment_id`),
  KEY `fk_test_event_document` (`document_id`),
  KEY `fk_test_event_person` (`tester_person_id`),
  CONSTRAINT `fk_mot_test_certificate_status` FOREIGN KEY (`certificate_status_id`) REFERENCES `certificate_status` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_different_tester_reason_id_lookup` FOREIGN KEY (`different_tester_reason_id`) REFERENCES `certificate_change_different_tester_reason_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_event_mot_test_id` FOREIGN KEY (`mot_test_id`) REFERENCES `mot_test` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_reason` FOREIGN KEY (`reason_comment_id`) REFERENCES `comment` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_test_event_document` FOREIGN KEY (`document_id`) REFERENCES `jasper_document` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_test_event_person` FOREIGN KEY (`tester_person_id`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Records details of a vehicle test (including non-MOT) with one record per certificate issuance';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_mot_test_event_bi`
BEFORE INSERT ON `mot2`.`mot_test_event`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_mot_test_event_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `mot_test_hist`
--

DROP TABLE IF EXISTS `mot_test_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mot_test_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` bigint(20) unsigned DEFAULT NULL,
  `person_id` int(10) unsigned DEFAULT NULL,
  `vehicle_id` int(10) unsigned DEFAULT NULL,
  `vehicle_version` int(10) unsigned DEFAULT NULL,
  `document_id` bigint(20) unsigned DEFAULT NULL,
  `site_id` int(10) unsigned DEFAULT NULL,
  `primary_colour_id` smallint(5) unsigned DEFAULT NULL,
  `secondary_colour_id` smallint(5) unsigned DEFAULT NULL,
  `vehicle_class_id` smallint(5) unsigned DEFAULT NULL,
  `tested_as_fuel_type_id` smallint(5) unsigned DEFAULT NULL,
  `vin` varchar(30) CHARACTER SET latin1 DEFAULT NULL,
  `empty_vin_reason_id` smallint(5) unsigned DEFAULT NULL,
  `registration` varchar(20) CHARACTER SET latin1 DEFAULT NULL,
  `empty_vrm_reason_id` smallint(5) unsigned DEFAULT NULL,
  `make_id` int(10) unsigned DEFAULT NULL,
  `model_id` int(10) unsigned DEFAULT NULL,
  `model_detail_id` int(10) unsigned DEFAULT NULL,
  `country_of_registration_id` smallint(5) unsigned DEFAULT NULL,
  `has_registration` tinyint(4) unsigned DEFAULT NULL,
  `mot_test_type_id` smallint(5) unsigned DEFAULT NULL,
  `started_date` datetime(6) DEFAULT NULL,
  `completed_date` datetime(6) DEFAULT NULL,
  `status_id` smallint(5) unsigned DEFAULT NULL,
  `issued_date` datetime(6) DEFAULT NULL,
  `expiry_date` date DEFAULT NULL,
  `mot_test_id_original` bigint(20) unsigned DEFAULT NULL,
  `prs_mot_test_id` bigint(20) unsigned DEFAULT NULL,
  `mot_test_reason_for_cancel_id` smallint(5) unsigned DEFAULT NULL,
  `reason_for_cancel_comment_id` bigint(20) unsigned DEFAULT NULL,
  `reason_for_termination_comment` varchar(240) DEFAULT NULL,
  `full_partial_retest_id` smallint(5) unsigned DEFAULT NULL,
  `partial_reinspection_comment_id` bigint(20) unsigned DEFAULT NULL,
  `items_not_tested_comment_id` bigint(20) unsigned DEFAULT NULL,
  `one_person_test` tinyint(3) unsigned DEFAULT NULL,
  `one_person_reinspection` tinyint(3) unsigned DEFAULT NULL,
  `complaint_ref` varchar(30) DEFAULT NULL,
  `number` decimal(12,0) DEFAULT NULL,
  `odometer_reading_id` bigint(20) unsigned DEFAULT NULL,
  `private` tinyint(3) unsigned DEFAULT NULL,
  `emergency_log_id` int(10) unsigned DEFAULT NULL,
  `emergency_reason_lookup_id` smallint(5) unsigned DEFAULT NULL,
  `emergency_reason_comment_id` bigint(20) unsigned DEFAULT NULL,
  `vehicle_weight_source_lookup_id` smallint(5) unsigned DEFAULT NULL,
  `vehicle_weight` int(10) unsigned DEFAULT NULL,
  `incognito_vehicle_id` int(10) unsigned DEFAULT NULL,
  `address_comment_id` bigint(20) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  `make_name` varchar(50) DEFAULT NULL,
  `model_name` varchar(50) DEFAULT NULL,
  `model_detail_name` varchar(50) DEFAULT NULL,
  `client_ip` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_mot_test_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `mot_test_reason_for_cancel_lookup`
--

DROP TABLE IF EXISTS `mot_test_reason_for_cancel_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mot_test_reason_for_cancel_lookup` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `reason` varchar(250) NOT NULL,
  `reason_cy` varchar(250) DEFAULT NULL COMMENT 'Welsh',
  `is_system_generated` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT 'Legacy from mot1. CRON jobs aborted long mot tests, e.g. 24h',
  `is_displayable` tinyint(4) unsigned NOT NULL DEFAULT '0' COMMENT 'Some values are not used anymore in MOT 2, but we keep the them as legacy from MOT 1',
  `is_abandoned` tinyint(4) unsigned NOT NULL DEFAULT '0',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=30 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Reasons for canceling a test';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_mot_test_reason_for_cancel_lookup_bi`
BEFORE INSERT ON `mot2`.`mot_test_reason_for_cancel_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_mot_test_reason_for_cancel_lookup_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `mot_test_reason_for_refusal_lookup`
--

DROP TABLE IF EXISTS `mot_test_reason_for_refusal_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mot_test_reason_for_refusal_lookup` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `reason` varchar(250) NOT NULL COMMENT 'English',
  `reason_cy` varchar(250) DEFAULT NULL COMMENT 'Welsh translation - if available',
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `display_order` smallint(5) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `mot_test_reason_for_refusal_lookup_code` (`code`),
  UNIQUE KEY `mot_test_reason_for_refusal_lookup_display_order` (`display_order`)
) ENGINE=InnoDB AUTO_INCREMENT=27 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Reasons for refusing to test';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_mot_test_reason_for_refusal_lookup_bi`
BEFORE INSERT ON `mot2`.`mot_test_reason_for_refusal_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_mot_test_reason_for_refusal_lookup_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `mot_test_recent_certificate`
--

DROP TABLE IF EXISTS `mot_test_recent_certificate`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mot_test_recent_certificate` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `tester_person_id` int(11) NOT NULL COMMENT 'id of tester who carried out test',
  `site_id` int(11) NOT NULL COMMENT 'id of site where test was carried out',
  `mot_test_id` bigint(20) NOT NULL COMMENT 'FK to mot test table',
  `prs_mot_test_id` bigint(20) DEFAULT NULL COMMENT 'Used to link related PRS rows. Null if not PRS',
  `vin` varchar(30) DEFAULT NULL COMMENT 'Plain text description for displaying in FE',
  `registration` varchar(20) DEFAULT NULL COMMENT 'registration of vehicle',
  `make_id` int(10) DEFAULT NULL COMMENT 'FK to make table',
  `model_id` int(10) DEFAULT NULL COMMENT 'FK to model table',
  `model_detail_id` int(10) DEFAULT NULL COMMENT 'FK to model table',
  `make_name` varchar(50) DEFAULT NULL,
  `model_name` varchar(50) DEFAULT NULL,
  `model_detail_name` varchar(50) DEFAULT NULL,
  `mot_test_status_id` smallint(5) DEFAULT NULL COMMENT 'FK to mot test status table',
  `generation_worker_id` int(11) DEFAULT NULL COMMENT 'identifies the worker process',
  `document_id` bigint(20) NOT NULL COMMENT 'FK to jasper_document table',
  `recipient_first_name` varchar(45) DEFAULT NULL COMMENT 'First name of recipient of emailed certificate. Used if certificate is being emailed to personalise it',
  `recipient_family_name` varchar(45) DEFAULT NULL COMMENT 'Family name of recipient of emailed certificate. Used if certificate is being emailed to personalise it',
  `recipient_email` varchar(255) DEFAULT NULL COMMENT 'Email of recipient of certificate. Used if certificate is being emailed',
  `certificate_status` varchar(20) NOT NULL COMMENT 'the current status of the certificate generation',
  `generation_started_on` datetime(6) DEFAULT NULL COMMENT 'time worker picked up row',
  `generation_completed_on` datetime(6) DEFAULT NULL COMMENT 'time worker completed certificate generation',
  `certificate_storage_key` varchar(50) DEFAULT NULL COMMENT 'unique key used to store certificate in Amazon S3 store',
  `created_on` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'time certificate generation was requested',
  `last_updated_on` timestamp(6) NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `mot_test_rfr_map`
--

DROP TABLE IF EXISTS `mot_test_rfr_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mot_test_rfr_map` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `mot_test_id` bigint(20) unsigned NOT NULL,
  `rfr_id` int(10) unsigned DEFAULT NULL,
  `type` varchar(50) NOT NULL,
  `location_lateral` varchar(50) DEFAULT NULL,
  `location_longitudinal` varchar(50) DEFAULT NULL,
  `location_vertical` varchar(50) DEFAULT NULL,
  `comment` varchar(255) DEFAULT NULL,
  `failure_dangerous` tinyint(4) NOT NULL DEFAULT '0' COMMENT 'User option available when can_be_dangerous flag is set in test_item_selector_rfr',
  `generated` tinyint(4) NOT NULL,
  `custom_description` varchar(100) DEFAULT NULL,
  `on_original_test` tinyint(4) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_mot_test_rfr_map_mot_test_id` (`mot_test_id`),
  KEY `fk_mot_test_rfr_map_reason_for_rejection_type` (`type`),
  KEY `fk_mot_test_rfr_map_rfr` (`rfr_id`),
  CONSTRAINT `fk_mot_test_rfr_map_mot_test_id` FOREIGN KEY (`mot_test_id`) REFERENCES `mot_test` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_rfr_map_reason_for_rejection_type` FOREIGN KEY (`type`) REFERENCES `reason_for_rejection_type` (`name`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_mot_test_rfr_map_rfr` FOREIGN KEY (`rfr_id`) REFERENCES `reason_for_rejection` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Records the RFR details of vehicle tests';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_mot_test_rfr_map_bi`
BEFORE INSERT ON `mot2`.`mot_test_rfr_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_mot_test_rfr_map_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_mot_test_rfr_map_bu`
BEFORE UPDATE ON `mot2`.`mot_test_rfr_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_mot_test_rfr_map_bu Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_mot_test_rfr_map_au`
AFTER UPDATE ON `mot2`.`mot_test_rfr_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_mot_test_rfr_map_au Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`mot_test_rfr_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`mot_test_id`
        ,`rfr_id`
        ,`type`
        ,`location_lateral`
        ,`location_longitudinal`
        ,`location_vertical`
        ,`comment`
        ,`failure_dangerous`
        ,`generated`
        ,`custom_description`
        ,`on_original_test`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`mot_test_id`
        ,OLD.`rfr_id`
        ,OLD.`type`
        ,OLD.`location_lateral`
        ,OLD.`location_longitudinal`
        ,OLD.`location_vertical`
        ,OLD.`comment`
        ,OLD.`failure_dangerous`
        ,OLD.`generated`
        ,OLD.`custom_description`
        ,OLD.`on_original_test`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_mot_test_rfr_map_bd`
BEFORE DELETE ON `mot2`.`mot_test_rfr_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_mot_test_rfr_map_bd Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`mot_test_rfr_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`mot_test_id`
        ,`rfr_id`
        ,`type`
        ,`location_lateral`
        ,`location_longitudinal`
        ,`location_vertical`
        ,`comment`
        ,`failure_dangerous`
        ,`generated`
        ,`custom_description`
        ,`on_original_test`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`mot_test_id`
        ,OLD.`rfr_id`
        ,OLD.`type`
        ,OLD.`location_lateral`
        ,OLD.`location_longitudinal`
        ,OLD.`location_vertical`
        ,OLD.`comment`
        ,OLD.`failure_dangerous`
        ,OLD.`generated`
        ,OLD.`custom_description`
        ,OLD.`on_original_test`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `mot_test_rfr_map_hist`
--

DROP TABLE IF EXISTS `mot_test_rfr_map_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mot_test_rfr_map_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` bigint(20) unsigned DEFAULT NULL,
  `mot_test_id` bigint(20) unsigned DEFAULT NULL,
  `rfr_id` int(10) unsigned DEFAULT NULL,
  `type` varchar(50) DEFAULT NULL,
  `location_lateral` varchar(50) DEFAULT NULL,
  `location_longitudinal` varchar(50) DEFAULT NULL,
  `location_vertical` varchar(50) DEFAULT NULL,
  `comment` varchar(255) DEFAULT NULL,
  `failure_dangerous` tinyint(4) DEFAULT NULL,
  `generated` tinyint(4) DEFAULT NULL,
  `custom_description` varchar(100) DEFAULT NULL,
  `on_original_test` tinyint(4) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_mot_test_rfr_map_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `mot_test_status`
--

DROP TABLE IF EXISTS `mot_test_status`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mot_test_status` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(10) NOT NULL,
  `description` varchar(250) NOT NULL,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_mot_test_status_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_mot_test_status_bi`
BEFORE INSERT ON `mot2`.`mot_test_status`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_mot_test_status_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `mot_test_survey_result`
--

DROP TABLE IF EXISTS `mot_test_survey_result`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mot_test_survey_result` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `mot_test_id` bigint(20) unsigned NOT NULL,
  `satisfaction_rating` tinyint(4) DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_mot_test_id_mot_test_id` (`mot_test_id`),
  CONSTRAINT `fk_mot_test_id_mot_test_id` FOREIGN KEY (`mot_test_id`) REFERENCES `mot_test` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_mot_test_survey_result_bi`
BEFORE INSERT ON `mot2`.`mot_test_survey_result`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_mot_test_survey_result_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `mot_test_type`
--

DROP TABLE IF EXISTS `mot_test_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mot_test_type` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `code` varchar(5) NOT NULL,
  `description` varchar(50) DEFAULT NULL,
  `display_order` smallint(5) unsigned NOT NULL DEFAULT '1',
  `is_demo` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `is_slot_consuming` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `is_reinspection` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation of types of test performed';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_mot_test_type_bi`
BEFORE INSERT ON `mot2`.`mot_test_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_mot_test_type_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `non_working_day_country_lookup`
--

DROP TABLE IF EXISTS `non_working_day_country_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `non_working_day_country_lookup` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `country_lookup_id` smallint(5) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_non_working_day_country_lookup_country_lookup_id` (`country_lookup_id`),
  CONSTRAINT `fk_non_working_day_country_lookup_country_lookup_id` FOREIGN KEY (`country_lookup_id`) REFERENCES `country_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_non_working_day_country_lookup_bi`
BEFORE INSERT ON `mot2`.`non_working_day_country_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_non_working_day_country_lookup_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `non_working_day_lookup`
--

DROP TABLE IF EXISTS `non_working_day_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `non_working_day_lookup` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `non_working_day_country_lookup_id` smallint(5) unsigned NOT NULL,
  `day` date NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_non_working_day_lookup_non_working_day_country_id_day,` (`non_working_day_country_lookup_id`,`day`),
  CONSTRAINT `fk_non_working_day_lookup_non_working_day_country_lookup_id` FOREIGN KEY (`non_working_day_country_lookup_id`) REFERENCES `non_working_day_country_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=101 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_non_working_day_lookup_bi`
BEFORE INSERT ON `mot2`.`non_working_day_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_non_working_day_lookup_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `notification`
--

DROP TABLE IF EXISTS `notification`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `notification` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `notification_template_id` int(10) unsigned NOT NULL,
  `recipient_id` int(10) unsigned NOT NULL,
  `read_on` datetime(6) DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_notification_notification_template_id` (`notification_template_id`),
  KEY `fk_notification_person_id` (`recipient_id`),
  CONSTRAINT `fk_notification_notification_template_id` FOREIGN KEY (`notification_template_id`) REFERENCES `notification_template` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_notification_person_id` FOREIGN KEY (`recipient_id`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Records instances of notifications to persons. Note these are different from Special Notices.';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_notification_bi`
BEFORE INSERT ON `mot2`.`notification`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_notification_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_notification_bu`
BEFORE UPDATE ON `mot2`.`notification`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_notification_bu Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_notification_au`
AFTER UPDATE ON `mot2`.`notification`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_notification_au Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`notification_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`notification_template_id`
        ,`recipient_id`
        ,`read_on`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`notification_template_id`
        ,OLD.`recipient_id`
        ,OLD.`read_on`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_notification_bd`
BEFORE DELETE ON `mot2`.`notification`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_notification_bd Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`notification_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`notification_template_id`
        ,`recipient_id`
        ,`read_on`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`notification_template_id`
        ,OLD.`recipient_id`
        ,OLD.`read_on`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `notification_action_lookup`
--

DROP TABLE IF EXISTS `notification_action_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `notification_action_lookup` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `action` varchar(100) NOT NULL,
  `display_order` smallint(5) unsigned NOT NULL DEFAULT '1',
  `code` varchar(5) DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_notification_action_lookup_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation of the types of action that can be taken for all types of notification';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_notification_action_lookup_bi`
BEFORE INSERT ON `mot2`.`notification_action_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_notification_action_lookup_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `notification_action_map`
--

DROP TABLE IF EXISTS `notification_action_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `notification_action_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `notification_id` int(10) unsigned NOT NULL,
  `action_id` smallint(5) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_notification_action_1` (`notification_id`),
  KEY `fk_notification_action_2` (`action_id`),
  CONSTRAINT `fk_notification_action_1` FOREIGN KEY (`notification_id`) REFERENCES `notification` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_notification_action_2` FOREIGN KEY (`action_id`) REFERENCES `notification_action_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Record of the action taken as a result of a notification';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_notification_action_map_bi`
BEFORE INSERT ON `mot2`.`notification_action_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_notification_action_map_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `notification_field`
--

DROP TABLE IF EXISTS `notification_field`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `notification_field` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `notification_id` int(10) unsigned NOT NULL,
  `field` varchar(30) NOT NULL,
  `content` varchar(250) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_notification_fields_1` (`notification_id`),
  CONSTRAINT `fk_notification_fields_1` FOREIGN KEY (`notification_id`) REFERENCES `notification` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Records the strings substituted into notification instances';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_notification_field_bi`
BEFORE INSERT ON `mot2`.`notification_field`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_notification_field_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_notification_field_bu`
BEFORE UPDATE ON `mot2`.`notification_field`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_notification_field_bu Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_notification_field_au`
AFTER UPDATE ON `mot2`.`notification_field`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_notification_field_au Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`notification_field_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`notification_id`
        ,`field`
        ,`content`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`notification_id`
        ,OLD.`field`
        ,OLD.`content`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_notification_field_bd`
BEFORE DELETE ON `mot2`.`notification_field`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_notification_field_bd Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`notification_field_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`notification_id`
        ,`field`
        ,`content`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`notification_id`
        ,OLD.`field`
        ,OLD.`content`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `notification_field_hist`
--

DROP TABLE IF EXISTS `notification_field_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `notification_field_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `notification_id` int(10) unsigned DEFAULT NULL,
  `field` varchar(30) DEFAULT NULL,
  `content` varchar(250) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_notification_field_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `notification_hist`
--

DROP TABLE IF EXISTS `notification_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `notification_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `notification_template_id` int(10) unsigned DEFAULT NULL,
  `recipient_id` int(10) unsigned DEFAULT NULL,
  `read_on` datetime(6) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_notification_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `notification_template`
--

DROP TABLE IF EXISTS `notification_template`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `notification_template` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `content` text,
  `subject` varchar(255) DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=29 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Template text of notification including placeholder fields';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_notification_template_bi`
BEFORE INSERT ON `mot2`.`notification_template`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_notification_template_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_notification_template_bu`
BEFORE UPDATE ON `mot2`.`notification_template`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_notification_template_bu Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_notification_template_au`
AFTER UPDATE ON `mot2`.`notification_template`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_notification_template_au Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`notification_template_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`content`
        ,`subject`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`content`
        ,OLD.`subject`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_notification_template_bd`
BEFORE DELETE ON `mot2`.`notification_template`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_notification_template_bd Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`notification_template_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`content`
        ,`subject`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`content`
        ,OLD.`subject`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `notification_template_action`
--

DROP TABLE IF EXISTS `notification_template_action`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `notification_template_action` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `notification_template_id` int(10) unsigned NOT NULL,
  `action_id` smallint(5) unsigned NOT NULL,
  `label` varchar(100) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_notification_template_action_1` (`notification_template_id`),
  KEY `fk_notification_template_action_2` (`action_id`),
  CONSTRAINT `fk_notification_template_action_1` FOREIGN KEY (`notification_template_id`) REFERENCES `notification_template` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_notification_template_action_2` FOREIGN KEY (`action_id`) REFERENCES `notification_action_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Names of actions that can be taken for a given notification template';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_notification_template_action_bi`
BEFORE INSERT ON `mot2`.`notification_template_action`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_notification_template_action_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `notification_template_hist`
--

DROP TABLE IF EXISTS `notification_template_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `notification_template_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `content` text,
  `subject` varchar(255) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_notification_template_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `odometer_reading`
--

DROP TABLE IF EXISTS `odometer_reading`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `odometer_reading` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `recorded_on` datetime(6) DEFAULT NULL COMMENT 'date reading was made so that incognito test results can be hidden',
  `value` int(11) DEFAULT NULL,
  `unit` varchar(2) DEFAULT NULL,
  `result_type` varchar(10) DEFAULT NULL,
  `is_deleted` tinyint(4) NOT NULL DEFAULT '0',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Holds odometer readings for tests';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_odometer_reading_bi`
BEFORE INSERT ON `mot2`.`odometer_reading`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_odometer_reading_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_odometer_reading_bu`
BEFORE UPDATE ON `mot2`.`odometer_reading`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_odometer_reading_bu Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_odometer_reading_au`
AFTER UPDATE ON `mot2`.`odometer_reading`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_odometer_reading_au Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`odometer_reading_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`recorded_on`
        ,`value`
        ,`unit`
        ,`result_type`
        ,`is_deleted`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`recorded_on`
        ,OLD.`value`
        ,OLD.`unit`
        ,OLD.`result_type`
        ,OLD.`is_deleted`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_odometer_reading_bd`
BEFORE DELETE ON `mot2`.`odometer_reading`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_odometer_reading_bd Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`odometer_reading_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`recorded_on`
        ,`value`
        ,`unit`
        ,`result_type`
        ,`is_deleted`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`recorded_on`
        ,OLD.`value`
        ,OLD.`unit`
        ,OLD.`result_type`
        ,OLD.`is_deleted`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `odometer_reading_hist`
--

DROP TABLE IF EXISTS `odometer_reading_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `odometer_reading_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` bigint(20) unsigned DEFAULT NULL,
  `recorded_on` datetime(6) DEFAULT NULL,
  `value` int(11) DEFAULT NULL,
  `unit` varchar(2) DEFAULT NULL,
  `result_type` varchar(10) DEFAULT NULL,
  `is_deleted` tinyint(4) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_odometer_reading_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `organisation`
--

DROP TABLE IF EXISTS `organisation`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `organisation` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(60) NOT NULL COMMENT '60 in MOT1',
  `registered_company_number` varchar(20) DEFAULT NULL,
  `vat_registration_number` varchar(20) DEFAULT NULL,
  `trading_name` varchar(60) DEFAULT NULL COMMENT '60 in MOT1',
  `company_type_id` smallint(5) unsigned DEFAULT NULL,
  `organisation_type_id` smallint(5) unsigned DEFAULT NULL,
  `transition_status_id` smallint(5) unsigned DEFAULT NULL,
  `transition_scheduled_on` date DEFAULT NULL,
  `sites_confirmed_ready_on` datetime(6) DEFAULT NULL,
  `transition_processed_on` datetime(6) DEFAULT NULL,
  `first_payment_setup_on` datetime(6) DEFAULT NULL,
  `first_slots_purchased_on` datetime(6) DEFAULT NULL,
  `mot1_total_running_balance` decimal(12,2) DEFAULT NULL COMMENT 'Total of all account balances in MOT1 before convertion to slots',
  `mot1_total_slots_converted` int(11) DEFAULT NULL COMMENT 'Total of slots converted from balance cash leaving remainder cash in mot1_remainder_migrated',
  `mot1_total_remainder_balance` decimal(12,2) DEFAULT NULL COMMENT 'Remainder of all account balances after convertion to slots',
  `mot1_total_vts_slots_merged` int(11) DEFAULT NULL COMMENT 'Total slots currently available accross all VTS devices in the AE',
  `mot1_total_slots_merged` int(11) DEFAULT NULL COMMENT 'Total of merged and converted MOT1 slots',
  `mot1_slots_migrated_on` datetime(6) DEFAULT NULL,
  `mot1_details_updated_on` datetime(6) DEFAULT NULL,
  `slots_balance` int(10) NOT NULL DEFAULT '0',
  `slots_warning` int(10) unsigned NOT NULL DEFAULT '15',
  `slots_purchased` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Negative slot balance in overdraft field may be migrated from MOT1 and occur if a cheque is bounced.This field is always positive.',
  `slots_overdraft` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Negative slot balance in overdraft field may be migrated from MOT1 and occur if a cheque is bounced.',
  `data_may_be_disclosed` tinyint(4) NOT NULL DEFAULT '0',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `organisation_name_idx` (`name`),
  KEY `organisation_registered_company_number_idx` (`registered_company_number`),
  KEY `organisation_vat_registration_number_idx` (`vat_registration_number`),
  KEY `fk_organisation_company_type_id` (`company_type_id`),
  KEY `fk_organisation_organisation_type_id` (`organisation_type_id`),
  KEY `fk_organisation_transition_status_id` (`transition_status_id`),
  CONSTRAINT `fk_organisation_company_type_id` FOREIGN KEY (`company_type_id`) REFERENCES `company_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_organisation_organisation_type_id` FOREIGN KEY (`organisation_type_id`) REFERENCES `organisation_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_organisation_transition_status_id` FOREIGN KEY (`transition_status_id`) REFERENCES `transition_status` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=2002 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Representation of an organisation in the system';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_organisation_bi`
BEFORE INSERT ON `mot2`.`organisation`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_organisation_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_organisation_bu`
BEFORE UPDATE ON `mot2`.`organisation`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_organisation_bu Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_organisation_au`
AFTER UPDATE ON `mot2`.`organisation`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_organisation_au Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`organisation_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`name`
        ,`registered_company_number`
        ,`vat_registration_number`
        ,`trading_name`
        ,`company_type_id`
        ,`organisation_type_id`
        ,`transition_status_id`
        ,`transition_scheduled_on`
        ,`sites_confirmed_ready_on`
        ,`transition_processed_on`
        ,`first_payment_setup_on`
        ,`first_slots_purchased_on`
        ,`mot1_total_running_balance`
        ,`mot1_total_slots_converted`
        ,`mot1_total_remainder_balance`
        ,`mot1_total_vts_slots_merged`
        ,`mot1_total_slots_merged`
        ,`mot1_slots_migrated_on`
        ,`mot1_details_updated_on`
        ,`slots_balance`
        ,`slots_warning`
        ,`slots_purchased`
        ,`slots_overdraft`
        ,`data_may_be_disclosed`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`name`
        ,OLD.`registered_company_number`
        ,OLD.`vat_registration_number`
        ,OLD.`trading_name`
        ,OLD.`company_type_id`
        ,OLD.`organisation_type_id`
        ,OLD.`transition_status_id`
        ,OLD.`transition_scheduled_on`
        ,OLD.`sites_confirmed_ready_on`
        ,OLD.`transition_processed_on`
        ,OLD.`first_payment_setup_on`
        ,OLD.`first_slots_purchased_on`
        ,OLD.`mot1_total_running_balance`
        ,OLD.`mot1_total_slots_converted`
        ,OLD.`mot1_total_remainder_balance`
        ,OLD.`mot1_total_vts_slots_merged`
        ,OLD.`mot1_total_slots_merged`
        ,OLD.`mot1_slots_migrated_on`
        ,OLD.`mot1_details_updated_on`
        ,OLD.`slots_balance`
        ,OLD.`slots_warning`
        ,OLD.`slots_purchased`
        ,OLD.`slots_overdraft`
        ,OLD.`data_may_be_disclosed`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_organisation_bd`
BEFORE DELETE ON `mot2`.`organisation`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_organisation_bd Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`organisation_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`name`
        ,`registered_company_number`
        ,`vat_registration_number`
        ,`trading_name`
        ,`company_type_id`
        ,`organisation_type_id`
        ,`transition_status_id`
        ,`transition_scheduled_on`
        ,`sites_confirmed_ready_on`
        ,`transition_processed_on`
        ,`first_payment_setup_on`
        ,`first_slots_purchased_on`
        ,`mot1_total_running_balance`
        ,`mot1_total_slots_converted`
        ,`mot1_total_remainder_balance`
        ,`mot1_total_vts_slots_merged`
        ,`mot1_total_slots_merged`
        ,`mot1_slots_migrated_on`
        ,`mot1_details_updated_on`
        ,`slots_balance`
        ,`slots_warning`
        ,`slots_purchased`
        ,`slots_overdraft`
        ,`data_may_be_disclosed`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`name`
        ,OLD.`registered_company_number`
        ,OLD.`vat_registration_number`
        ,OLD.`trading_name`
        ,OLD.`company_type_id`
        ,OLD.`organisation_type_id`
        ,OLD.`transition_status_id`
        ,OLD.`transition_scheduled_on`
        ,OLD.`sites_confirmed_ready_on`
        ,OLD.`transition_processed_on`
        ,OLD.`first_payment_setup_on`
        ,OLD.`first_slots_purchased_on`
        ,OLD.`mot1_total_running_balance`
        ,OLD.`mot1_total_slots_converted`
        ,OLD.`mot1_total_remainder_balance`
        ,OLD.`mot1_total_vts_slots_merged`
        ,OLD.`mot1_total_slots_merged`
        ,OLD.`mot1_slots_migrated_on`
        ,OLD.`mot1_details_updated_on`
        ,OLD.`slots_balance`
        ,OLD.`slots_warning`
        ,OLD.`slots_purchased`
        ,OLD.`slots_overdraft`
        ,OLD.`data_may_be_disclosed`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `organisation_assembly_role_map`
--

DROP TABLE IF EXISTS `organisation_assembly_role_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `organisation_assembly_role_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `organisation_id` int(10) unsigned NOT NULL,
  `assembly_id` int(10) unsigned NOT NULL,
  `assembly_role_id` smallint(5) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_organisation_assembly_role_map_org_assembly_assembly_role` (`organisation_id`,`assembly_id`,`assembly_role_id`),
  KEY `fk_organisation_assembly_role_map_assembly_id` (`assembly_id`),
  KEY `fk_organisation_assembly_role_map_assembly_role_id` (`assembly_role_id`),
  CONSTRAINT `fk_organisation_assembly_organisation_id` FOREIGN KEY (`organisation_id`) REFERENCES `organisation` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_organisation_assembly_role_map_assembly_id` FOREIGN KEY (`assembly_id`) REFERENCES `assembly` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_organisation_assembly_role_map_assembly_role_id` FOREIGN KEY (`assembly_role_id`) REFERENCES `assembly_role_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_organisation_assembly_role_map_bi`
BEFORE INSERT ON `mot2`.`organisation_assembly_role_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_organisation_assembly_role_map_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `organisation_business_role`
--

DROP TABLE IF EXISTS `organisation_business_role`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `organisation_business_role` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `description` varchar(250) NOT NULL,
  `code` varchar(5) NOT NULL,
  `organisation_type_id` smallint(5) unsigned DEFAULT NULL,
  `role_id` int(10) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_organisation_business_role_code` (`code`),
  KEY `fk_organisation_business_role_role` (`role_id`),
  CONSTRAINT `fk_organisation_business_role_role` FOREIGN KEY (`role_id`) REFERENCES `role` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_organisation_business_role_bi`
BEFORE INSERT ON `mot2`.`organisation_business_role`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_organisation_business_role_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `organisation_business_role_map`
--

DROP TABLE IF EXISTS `organisation_business_role_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `organisation_business_role_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `organisation_id` int(10) unsigned NOT NULL,
  `business_role_id` smallint(5) unsigned NOT NULL,
  `person_id` int(10) unsigned NOT NULL,
  `status_id` smallint(5) unsigned NOT NULL,
  `status_changed_on` datetime(6) DEFAULT NULL,
  `valid_from` datetime(6) DEFAULT NULL,
  `expiry_date` datetime(6) DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_organisation_business_role_map` (`business_role_id`),
  KEY `fk_organisation_business_role_map_status` (`status_id`),
  KEY `fk_organisation_role_map_organisation` (`organisation_id`),
  KEY `fk_organisation_role_map_person` (`person_id`),
  CONSTRAINT `fk_organisation_business_role_map` FOREIGN KEY (`business_role_id`) REFERENCES `organisation_business_role` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_organisation_business_role_map_status` FOREIGN KEY (`status_id`) REFERENCES `business_role_status` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_organisation_role_map_organisation` FOREIGN KEY (`organisation_id`) REFERENCES `organisation` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_organisation_role_map_person` FOREIGN KEY (`person_id`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=33 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='A persons business role within an Organisation i.e. AEDM';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_organisation_business_role_map_bi`
BEFORE INSERT ON `mot2`.`organisation_business_role_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_organisation_business_role_map_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_organisation_business_role_map_bu`
BEFORE UPDATE ON `mot2`.`organisation_business_role_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_organisation_business_role_map_bu Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_organisation_business_role_map_au`
AFTER UPDATE ON `mot2`.`organisation_business_role_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_organisation_business_role_map_au Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`organisation_business_role_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`organisation_id`
        ,`business_role_id`
        ,`person_id`
        ,`status_id`
        ,`status_changed_on`
        ,`valid_from`
        ,`expiry_date`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`organisation_id`
        ,OLD.`business_role_id`
        ,OLD.`person_id`
        ,OLD.`status_id`
        ,OLD.`status_changed_on`
        ,OLD.`valid_from`
        ,OLD.`expiry_date`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_organisation_business_role_map_bd`
BEFORE DELETE ON `mot2`.`organisation_business_role_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_organisation_business_role_map_bd Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`organisation_business_role_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`organisation_id`
        ,`business_role_id`
        ,`person_id`
        ,`status_id`
        ,`status_changed_on`
        ,`valid_from`
        ,`expiry_date`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`organisation_id`
        ,OLD.`business_role_id`
        ,OLD.`person_id`
        ,OLD.`status_id`
        ,OLD.`status_changed_on`
        ,OLD.`valid_from`
        ,OLD.`expiry_date`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `organisation_business_role_map_hist`
--

DROP TABLE IF EXISTS `organisation_business_role_map_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `organisation_business_role_map_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `organisation_id` int(10) unsigned DEFAULT NULL,
  `business_role_id` smallint(5) unsigned DEFAULT NULL,
  `person_id` int(10) unsigned DEFAULT NULL,
  `status_id` smallint(5) unsigned DEFAULT NULL,
  `status_changed_on` datetime(6) DEFAULT NULL,
  `valid_from` datetime(6) DEFAULT NULL,
  `expiry_date` datetime(6) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_organisation_business_role_map_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `organisation_contact_detail_map`
--

DROP TABLE IF EXISTS `organisation_contact_detail_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `organisation_contact_detail_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `organisation_id` int(10) unsigned NOT NULL,
  `contact_detail_id` int(10) unsigned NOT NULL,
  `organisation_contact_type_id` smallint(5) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_organisation_contact_detail_map_contact_detail_id` (`contact_detail_id`),
  KEY `fk_organisation_contact_detail_map_contact_type_id` (`organisation_contact_type_id`),
  KEY `fk_organisation_contact_detail_map_organisation_id` (`organisation_id`),
  CONSTRAINT `fk_organisation_contact_detail_map_contact_detail_id` FOREIGN KEY (`contact_detail_id`) REFERENCES `contact_detail` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_organisation_contact_detail_map_contact_type_id` FOREIGN KEY (`organisation_contact_type_id`) REFERENCES `organisation_contact_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_organisation_contact_detail_map_organisation_id` FOREIGN KEY (`organisation_id`) REFERENCES `organisation` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Link table between an organisation and a set of contact details';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_organisation_contact_detail_map_bi`
BEFORE INSERT ON `mot2`.`organisation_contact_detail_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_organisation_contact_detail_map_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_organisation_contact_detail_map_bu`
BEFORE UPDATE ON `mot2`.`organisation_contact_detail_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_organisation_contact_detail_map_bu Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_organisation_contact_detail_map_au`
AFTER UPDATE ON `mot2`.`organisation_contact_detail_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_organisation_contact_detail_map_au Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`organisation_contact_detail_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`organisation_id`
        ,`contact_detail_id`
        ,`organisation_contact_type_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`organisation_id`
        ,OLD.`contact_detail_id`
        ,OLD.`organisation_contact_type_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_organisation_contact_detail_map_bd`
BEFORE DELETE ON `mot2`.`organisation_contact_detail_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_organisation_contact_detail_map_bd Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`organisation_contact_detail_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`organisation_id`
        ,`contact_detail_id`
        ,`organisation_contact_type_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`organisation_id`
        ,OLD.`contact_detail_id`
        ,OLD.`organisation_contact_type_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `organisation_contact_detail_map_hist`
--

DROP TABLE IF EXISTS `organisation_contact_detail_map_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `organisation_contact_detail_map_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `organisation_id` int(10) unsigned DEFAULT NULL,
  `contact_detail_id` int(10) unsigned DEFAULT NULL,
  `organisation_contact_type_id` smallint(5) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_organisation_contact_detail_map_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `organisation_contact_type`
--

DROP TABLE IF EXISTS `organisation_contact_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `organisation_contact_type` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_organisation_contact_type_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation of types of contact detail of an organisation';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_organisation_contact_type_bi`
BEFORE INSERT ON `mot2`.`organisation_contact_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_organisation_contact_type_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `organisation_hist`
--

DROP TABLE IF EXISTS `organisation_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `organisation_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `name` varchar(60) DEFAULT NULL,
  `registered_company_number` varchar(20) DEFAULT NULL,
  `vat_registration_number` varchar(20) DEFAULT NULL,
  `trading_name` varchar(60) DEFAULT NULL,
  `company_type_id` smallint(5) unsigned DEFAULT NULL,
  `organisation_type_id` smallint(5) unsigned DEFAULT NULL,
  `transition_status_id` smallint(5) unsigned DEFAULT NULL,
  `transition_scheduled_on` date DEFAULT NULL,
  `sites_confirmed_ready_on` datetime(6) DEFAULT NULL,
  `transition_processed_on` datetime(6) DEFAULT NULL,
  `first_payment_setup_on` datetime(6) DEFAULT NULL,
  `first_slots_purchased_on` datetime(6) DEFAULT NULL,
  `mot1_total_running_balance` decimal(12,2) DEFAULT NULL,
  `mot1_total_slots_converted` int(11) DEFAULT NULL,
  `mot1_total_remainder_balance` decimal(12,2) DEFAULT NULL,
  `mot1_total_vts_slots_merged` int(11) DEFAULT NULL,
  `mot1_total_slots_merged` int(11) DEFAULT NULL,
  `mot1_slots_migrated_on` datetime(6) DEFAULT NULL,
  `mot1_details_updated_on` datetime(6) DEFAULT NULL,
  `slots_balance` int(10) DEFAULT NULL,
  `slots_warning` int(10) unsigned DEFAULT NULL,
  `slots_purchased` int(10) unsigned DEFAULT NULL,
  `slots_overdraft` int(10) unsigned DEFAULT NULL,
  `data_may_be_disclosed` tinyint(4) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_organisation_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `organisation_site_map`
--

DROP TABLE IF EXISTS `organisation_site_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `organisation_site_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `organisation_id` int(10) unsigned NOT NULL,
  `site_id` int(10) unsigned NOT NULL,
  `trading_name` varchar(60) DEFAULT NULL,
  `status_id` smallint(5) unsigned NOT NULL,
  `status_changed_on` datetime(6) NOT NULL,
  `start_date` datetime(6) DEFAULT NULL,
  `end_date` datetime(6) DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_organisation_site_map_organisation_id` (`organisation_id`),
  KEY `fk_organisation_site_map_organisation_site_status` (`status_id`),
  KEY `fk_organisation_site_map_site_id` (`site_id`),
  CONSTRAINT `fk_organisation_site_map_organisation_id` FOREIGN KEY (`organisation_id`) REFERENCES `organisation` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_organisation_site_map_organisation_site_status` FOREIGN KEY (`status_id`) REFERENCES `organisation_site_status` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_organisation_site_map_site_id` FOREIGN KEY (`site_id`) REFERENCES `site` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=86 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_organisation_site_map_bi`
BEFORE INSERT ON `mot2`.`organisation_site_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_organisation_site_map_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_organisation_site_map_bu`
BEFORE UPDATE ON `mot2`.`organisation_site_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_organisation_site_map_bu Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_organisation_site_map_au`
AFTER UPDATE ON `mot2`.`organisation_site_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_organisation_site_map_au Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`organisation_site_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`organisation_id`
        ,`site_id`
        ,`trading_name`
        ,`status_id`
        ,`status_changed_on`
        ,`start_date`
        ,`end_date`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`organisation_id`
        ,OLD.`site_id`
        ,OLD.`trading_name`
        ,OLD.`status_id`
        ,OLD.`status_changed_on`
        ,OLD.`start_date`
        ,OLD.`end_date`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_organisation_site_map_bd`
BEFORE DELETE ON `mot2`.`organisation_site_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_organisation_site_map_bd Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`organisation_site_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`organisation_id`
        ,`site_id`
        ,`trading_name`
        ,`status_id`
        ,`status_changed_on`
        ,`start_date`
        ,`end_date`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`organisation_id`
        ,OLD.`site_id`
        ,OLD.`trading_name`
        ,OLD.`status_id`
        ,OLD.`status_changed_on`
        ,OLD.`start_date`
        ,OLD.`end_date`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `organisation_site_map_hist`
--

DROP TABLE IF EXISTS `organisation_site_map_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `organisation_site_map_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `organisation_id` int(10) unsigned DEFAULT NULL,
  `site_id` int(10) unsigned DEFAULT NULL,
  `trading_name` varchar(60) DEFAULT NULL,
  `status_id` smallint(5) unsigned DEFAULT NULL,
  `status_changed_on` datetime(6) DEFAULT NULL,
  `start_date` datetime(6) DEFAULT NULL,
  `end_date` datetime(6) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_organisation_site_map_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `organisation_site_status`
--

DROP TABLE IF EXISTS `organisation_site_status`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `organisation_site_status` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) DEFAULT NULL,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_organisation_site_status_code` (`code`),
  UNIQUE KEY `uk_organisation_site_status_name` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation of the status of a site. ';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_organisation_site_status_bi`
BEFORE INSERT ON `mot2`.`organisation_site_status`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_organisation_site_status_bi Generated on 2016-07-04 12:27:11. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `organisation_type`
--

DROP TABLE IF EXISTS `organisation_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `organisation_type` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_organisation_type_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation of the type of an organisation i.e. DVSA, DVLA, Examining Body, Authorised Examiner, Other';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_organisation_type_bi`
BEFORE INSERT ON `mot2`.`organisation_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_organisation_type_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `password_detail`
--

DROP TABLE IF EXISTS `password_detail`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `password_detail` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `person_id` int(10) unsigned NOT NULL,
  `password_expiry_notification_sent_date` datetime(6) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_password_detail_person_id_person_id` (`person_id`),
  CONSTRAINT `fk_password_detail_person_id_person_id` FOREIGN KEY (`person_id`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Password details';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_password_detail_bi`
BEFORE INSERT ON `mot2`.`password_detail`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_password_detail_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_password_detail_bu`
BEFORE UPDATE ON `mot2`.`password_detail`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_password_detail_bu Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_password_detail_au`
AFTER UPDATE ON `mot2`.`password_detail`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_password_detail_au Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`password_detail_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`person_id`
        ,`password_expiry_notification_sent_date`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`person_id`
        ,OLD.`password_expiry_notification_sent_date`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_password_detail_bd`
BEFORE DELETE ON `mot2`.`password_detail`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_password_detail_bd Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`password_detail_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`person_id`
        ,`password_expiry_notification_sent_date`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`person_id`
        ,OLD.`password_expiry_notification_sent_date`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `password_detail_hist`
--

DROP TABLE IF EXISTS `password_detail_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `password_detail_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `person_id` int(10) unsigned DEFAULT NULL,
  `password_expiry_notification_sent_date` datetime(6) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_password_detail_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `payment`
--

DROP TABLE IF EXISTS `payment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `payment` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `amount` decimal(10,2) NOT NULL,
  `receipt_reference` varchar(55) DEFAULT NULL COMMENT 'Unique reference received from CPMS to identify the payment',
  `unique_identifier` varchar(8) DEFAULT NULL COMMENT 'Last 8 char of receipt reference searched on',
  `payment_details` text,
  `status_id` smallint(5) unsigned NOT NULL,
  `type` smallint(5) unsigned NOT NULL,
  `created` datetime(6) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `payment_receipt_reference_id_idx` (`receipt_reference`,`id`),
  KEY `payment_unique_identifier_created_idx` (`unique_identifier`,`created`),
  KEY `fk_payment_payment_type` (`type`),
  KEY `fk_payment_status_id_payment_status_id` (`status_id`),
  CONSTRAINT `fk_payment_payment_type` FOREIGN KEY (`type`) REFERENCES `payment_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_payment_status_id_payment_status_id` FOREIGN KEY (`status_id`) REFERENCES `payment_status` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Records payments made for slots. Potentially more than one payment could be made per slot transaction.';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_payment_bi`
BEFORE INSERT ON `mot2`.`payment`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_payment_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_payment_bu`
BEFORE UPDATE ON `mot2`.`payment`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_payment_bu Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_payment_au`
AFTER UPDATE ON `mot2`.`payment`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_payment_au Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`payment_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`amount`
        ,`receipt_reference`
        ,`unique_identifier`
        ,`payment_details`
        ,`status_id`
        ,`type`
        ,`created`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`amount`
        ,OLD.`receipt_reference`
        ,OLD.`unique_identifier`
        ,OLD.`payment_details`
        ,OLD.`status_id`
        ,OLD.`type`
        ,OLD.`created`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_payment_bd`
BEFORE DELETE ON `mot2`.`payment`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_payment_bd Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`payment_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`amount`
        ,`receipt_reference`
        ,`unique_identifier`
        ,`payment_details`
        ,`status_id`
        ,`type`
        ,`created`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`amount`
        ,OLD.`receipt_reference`
        ,OLD.`unique_identifier`
        ,OLD.`payment_details`
        ,OLD.`status_id`
        ,OLD.`type`
        ,OLD.`created`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `payment_hist`
--

DROP TABLE IF EXISTS `payment_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `payment_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `amount` decimal(10,2) DEFAULT NULL,
  `receipt_reference` varchar(55) DEFAULT NULL,
  `unique_identifier` varchar(8) DEFAULT NULL,
  `payment_details` text,
  `status_id` smallint(5) unsigned DEFAULT NULL,
  `type` smallint(5) unsigned DEFAULT NULL,
  `created` datetime(6) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_payment_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `payment_status`
--

DROP TABLE IF EXISTS `payment_status`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `payment_status` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) NOT NULL,
  `cpms_code` smallint(5) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='CPMS code for given status type';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_payment_status_bi`
BEFORE INSERT ON `mot2`.`payment_status`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_payment_status_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `payment_type`
--

DROP TABLE IF EXISTS `payment_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `payment_type` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `type_name` varchar(75) NOT NULL DEFAULT '' COMMENT 'Name of the payment type',
  `code` varchar(40) DEFAULT NULL,
  `active` tinyint(4) NOT NULL DEFAULT '1' COMMENT 'Whether the payment type is active',
  `display_order` smallint(5) unsigned NOT NULL DEFAULT '1' COMMENT 'Order the payment type appears in a list',
  `is_adjustable` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT 'Determines if this payment type can be adjusted',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation of types of payment. Not all payment types are currently implemented';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_payment_type_bi`
BEFORE INSERT ON `mot2`.`payment_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_payment_type_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `permission`
--

DROP TABLE IF EXISTS `permission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `permission` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `is_restricted` tinyint(4) NOT NULL DEFAULT '0',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_permission_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=314 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_permission_bi`
BEFORE INSERT ON `mot2`.`permission`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_permission_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_permission_bu`
BEFORE UPDATE ON `mot2`.`permission`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_permission_bu Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_permission_au`
AFTER UPDATE ON `mot2`.`permission`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_permission_au Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`permission_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`name`
        ,`code`
        ,`is_restricted`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`name`
        ,OLD.`code`
        ,OLD.`is_restricted`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_permission_bd`
BEFORE DELETE ON `mot2`.`permission`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_permission_bd Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`permission_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`name`
        ,`code`
        ,`is_restricted`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`name`
        ,OLD.`code`
        ,OLD.`is_restricted`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `permission_hist`
--

DROP TABLE IF EXISTS `permission_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `permission_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `name` varchar(50) DEFAULT NULL,
  `code` varchar(50) CHARACTER SET latin1 DEFAULT NULL,
  `is_restricted` tinyint(4) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_permission_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `permission_to_assign_role_map`
--

DROP TABLE IF EXISTS `permission_to_assign_role_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `permission_to_assign_role_map` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `permission_id` int(10) unsigned NOT NULL,
  `role_id` int(10) unsigned NOT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) DEFAULT NULL,
  `last_updated_on` timestamp(6) NULL DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_permission_to_assign_role_map` (`role_id`,`permission_id`),
  KEY `fk_permission_to_assign_role_map_permission_id` (`permission_id`),
  CONSTRAINT `fk_permission_to_assign_role_map_permission_id` FOREIGN KEY (`permission_id`) REFERENCES `permission` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_permission_to_assign_role_map_role_id` FOREIGN KEY (`role_id`) REFERENCES `role` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='A One To One relationship to explain which permission is needed to manage the given role, the user should have this permission granted to them by RBAC';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_permission_to_assign_role_map_bi`
BEFORE INSERT ON `mot2`.`permission_to_assign_role_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_permission_to_assign_role_map_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `person`
--

DROP TABLE IF EXISTS `person`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `person` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(50) DEFAULT NULL,
  `pin` varchar(60) DEFAULT NULL,
  `person_auth_type_lookup_id` bigint(20) unsigned NOT NULL,
  `user_reference` varchar(100) DEFAULT NULL,
  `mot_one_user_id` varchar(100) DEFAULT NULL,
  `title_id` smallint(5) unsigned DEFAULT NULL,
  `first_name` varchar(45) DEFAULT NULL,
  `middle_name` varchar(45) DEFAULT NULL,
  `family_name` varchar(45) NOT NULL,
  `driving_licence_id` int(10) unsigned DEFAULT NULL,
  `gender_id` smallint(5) unsigned DEFAULT NULL,
  `date_of_birth` date DEFAULT NULL,
  `disability` text,
  `demo_test_tester_status_id` smallint(5) unsigned DEFAULT NULL,
  `otp_failed_attempts` smallint(5) unsigned DEFAULT NULL,
  `is_account_claim_required` tinyint(3) unsigned DEFAULT '1',
  `is_password_change_required` tinyint(3) unsigned DEFAULT '0',
  `transition_status_id` smallint(5) unsigned DEFAULT NULL,
  `mot1_userid` varchar(8) DEFAULT NULL,
  `mot1_current_smartcard_id` varchar(100) DEFAULT NULL,
  `2fa_token_id` varchar(100) DEFAULT NULL COMMENT 'current 2FA token identifier',
  `2fa_token_sent_on` datetime(6) DEFAULT NULL COMMENT 'date current 2fa token was sent',
  `details_confirmed_on` datetime(6) DEFAULT NULL,
  `first_training_test_done_on` datetime(6) DEFAULT NULL COMMENT 'Date first MOT2 training test was done',
  `first_live_test_done_on` datetime(6) DEFAULT NULL COMMENT 'Date first live MOT2 test was done by user',
  `is_deceased` tinyint(1) unsigned NOT NULL DEFAULT '0',
  `deceased_on` datetime(6) DEFAULT NULL,
  `mot1_details_updated_on` datetime(6) DEFAULT NULL COMMENT 'Date of last MOT1 sync update for this record',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`),
  KEY `fk_person_1` (`driving_licence_id`),
  KEY `fk_person_auth_type_lookup_id` (`person_auth_type_lookup_id`),
  KEY `fk_person_gender` (`gender_id`),
  KEY `fk_person_title` (`title_id`),
  KEY `fk_person_transition_status` (`transition_status_id`),
  CONSTRAINT `fk_person_1` FOREIGN KEY (`driving_licence_id`) REFERENCES `licence` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_auth_type_lookup_id` FOREIGN KEY (`person_auth_type_lookup_id`) REFERENCES `person_auth_type_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_gender` FOREIGN KEY (`gender_id`) REFERENCES `gender` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_title` FOREIGN KEY (`title_id`) REFERENCES `title` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_transition_status` FOREIGN KEY (`transition_status_id`) REFERENCES `transition_status` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=3020 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_person_bi`
BEFORE INSERT ON `mot2`.`person`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_person_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_person_bu`
BEFORE UPDATE ON `mot2`.`person`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_person_bu Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_person_au`
AFTER UPDATE ON `mot2`.`person`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_person_au Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`person_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`username`
        ,`pin`
        ,`person_auth_type_lookup_id`
        ,`user_reference`
        ,`mot_one_user_id`
        ,`title_id`
        ,`first_name`
        ,`middle_name`
        ,`family_name`
        ,`driving_licence_id`
        ,`gender_id`
        ,`date_of_birth`
        ,`disability`
        ,`demo_test_tester_status_id`
        ,`otp_failed_attempts`
        ,`is_account_claim_required`
        ,`is_password_change_required`
        ,`transition_status_id`
        ,`mot1_userid`
        ,`mot1_current_smartcard_id`
        ,`2fa_token_id`
        ,`2fa_token_sent_on`
        ,`details_confirmed_on`
        ,`first_training_test_done_on`
        ,`first_live_test_done_on`
        ,`is_deceased`
        ,`deceased_on`
        ,`mot1_details_updated_on`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`username`
        ,OLD.`pin`
        ,OLD.`person_auth_type_lookup_id`
        ,OLD.`user_reference`
        ,OLD.`mot_one_user_id`
        ,OLD.`title_id`
        ,OLD.`first_name`
        ,OLD.`middle_name`
        ,OLD.`family_name`
        ,OLD.`driving_licence_id`
        ,OLD.`gender_id`
        ,OLD.`date_of_birth`
        ,OLD.`disability`
        ,OLD.`demo_test_tester_status_id`
        ,OLD.`otp_failed_attempts`
        ,OLD.`is_account_claim_required`
        ,OLD.`is_password_change_required`
        ,OLD.`transition_status_id`
        ,OLD.`mot1_userid`
        ,OLD.`mot1_current_smartcard_id`
        ,OLD.`2fa_token_id`
        ,OLD.`2fa_token_sent_on`
        ,OLD.`details_confirmed_on`
        ,OLD.`first_training_test_done_on`
        ,OLD.`first_live_test_done_on`
        ,OLD.`is_deceased`
        ,OLD.`deceased_on`
        ,OLD.`mot1_details_updated_on`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_person_bd`
BEFORE DELETE ON `mot2`.`person`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_person_bd Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`person_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`username`
        ,`pin`
        ,`person_auth_type_lookup_id`
        ,`user_reference`
        ,`mot_one_user_id`
        ,`title_id`
        ,`first_name`
        ,`middle_name`
        ,`family_name`
        ,`driving_licence_id`
        ,`gender_id`
        ,`date_of_birth`
        ,`disability`
        ,`demo_test_tester_status_id`
        ,`otp_failed_attempts`
        ,`is_account_claim_required`
        ,`is_password_change_required`
        ,`transition_status_id`
        ,`mot1_userid`
        ,`mot1_current_smartcard_id`
        ,`2fa_token_id`
        ,`2fa_token_sent_on`
        ,`details_confirmed_on`
        ,`first_training_test_done_on`
        ,`first_live_test_done_on`
        ,`is_deceased`
        ,`deceased_on`
        ,`mot1_details_updated_on`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`username`
        ,OLD.`pin`
        ,OLD.`person_auth_type_lookup_id`
        ,OLD.`user_reference`
        ,OLD.`mot_one_user_id`
        ,OLD.`title_id`
        ,OLD.`first_name`
        ,OLD.`middle_name`
        ,OLD.`family_name`
        ,OLD.`driving_licence_id`
        ,OLD.`gender_id`
        ,OLD.`date_of_birth`
        ,OLD.`disability`
        ,OLD.`demo_test_tester_status_id`
        ,OLD.`otp_failed_attempts`
        ,OLD.`is_account_claim_required`
        ,OLD.`is_password_change_required`
        ,OLD.`transition_status_id`
        ,OLD.`mot1_userid`
        ,OLD.`mot1_current_smartcard_id`
        ,OLD.`2fa_token_id`
        ,OLD.`2fa_token_sent_on`
        ,OLD.`details_confirmed_on`
        ,OLD.`first_training_test_done_on`
        ,OLD.`first_live_test_done_on`
        ,OLD.`is_deceased`
        ,OLD.`deceased_on`
        ,OLD.`mot1_details_updated_on`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `person_accesslog`
--

DROP TABLE IF EXISTS `person_accesslog`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `person_accesslog` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `person_id` int(10) unsigned NOT NULL,
  `is_successful` tinyint(4) NOT NULL DEFAULT '0',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_person_accesslog_person1` (`person_id`),
  CONSTRAINT `fk_person_accesslog_person1` FOREIGN KEY (`person_id`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_person_accesslog_bi`
BEFORE INSERT ON `mot2`.`person_accesslog`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_person_accesslog_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `person_auth_type_lookup`
--

DROP TABLE IF EXISTS `person_auth_type_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `person_auth_type_lookup` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) NOT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) DEFAULT NULL,
  `last_updated_on` timestamp(6) NULL DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_person_auth_type_lookup_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Lookup table for the 2FA method for a person';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_person_auth_type_lookup_bi`
BEFORE INSERT ON `mot2`.`person_auth_type_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_person_auth_type_lookup_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `person_contact_detail_map`
--

DROP TABLE IF EXISTS `person_contact_detail_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `person_contact_detail_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `contact_type_id` smallint(5) unsigned NOT NULL,
  `person_id` int(10) unsigned NOT NULL,
  `contact_id` int(10) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_person_contact_detail_map_contact_details` (`contact_id`),
  KEY `fk_person_contact_detail_map_person` (`person_id`),
  KEY `fk_person_contact_detail_map_person_contact_type` (`contact_type_id`),
  CONSTRAINT `fk_person_contact_detail_map_contact_details` FOREIGN KEY (`contact_id`) REFERENCES `contact_detail` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_contact_detail_map_person` FOREIGN KEY (`person_id`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_contact_detail_map_person_contact_type` FOREIGN KEY (`contact_type_id`) REFERENCES `person_contact_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=302 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Used to link a person to their contact details';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_person_contact_detail_map_bi`
BEFORE INSERT ON `mot2`.`person_contact_detail_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_person_contact_detail_map_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_person_contact_detail_map_bu`
BEFORE UPDATE ON `mot2`.`person_contact_detail_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_person_contact_detail_map_bu Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_person_contact_detail_map_au`
AFTER UPDATE ON `mot2`.`person_contact_detail_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_person_contact_detail_map_au Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`person_contact_detail_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`contact_type_id`
        ,`person_id`
        ,`contact_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`contact_type_id`
        ,OLD.`person_id`
        ,OLD.`contact_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_person_contact_detail_map_bd`
BEFORE DELETE ON `mot2`.`person_contact_detail_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_person_contact_detail_map_bd Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`person_contact_detail_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`contact_type_id`
        ,`person_id`
        ,`contact_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`contact_type_id`
        ,OLD.`person_id`
        ,OLD.`contact_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `person_contact_detail_map_hist`
--

DROP TABLE IF EXISTS `person_contact_detail_map_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `person_contact_detail_map_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `contact_type_id` smallint(5) unsigned DEFAULT NULL,
  `person_id` int(10) unsigned DEFAULT NULL,
  `contact_id` int(10) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_person_contact_detail_map_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `person_contact_type`
--

DROP TABLE IF EXISTS `person_contact_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `person_contact_type` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_person_contact_type_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='The contact type for a contact record held against a person';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_person_contact_type_bi`
BEFORE INSERT ON `mot2`.`person_contact_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_person_contact_type_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `person_hist`
--

DROP TABLE IF EXISTS `person_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `person_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `username` varchar(50) DEFAULT NULL,
  `pin` varchar(60) DEFAULT NULL,
  `person_auth_type_lookup_id` bigint(20) unsigned DEFAULT NULL,
  `user_reference` varchar(100) DEFAULT NULL,
  `mot_one_user_id` varchar(100) DEFAULT NULL,
  `title_id` smallint(5) unsigned DEFAULT NULL,
  `first_name` varchar(45) DEFAULT NULL,
  `middle_name` varchar(45) DEFAULT NULL,
  `family_name` varchar(45) DEFAULT NULL,
  `driving_licence_id` int(10) unsigned DEFAULT NULL,
  `gender_id` smallint(5) unsigned DEFAULT NULL,
  `date_of_birth` date DEFAULT NULL,
  `disability` text,
  `demo_test_tester_status_id` smallint(5) unsigned DEFAULT NULL,
  `otp_failed_attempts` smallint(5) unsigned DEFAULT NULL,
  `is_account_claim_required` tinyint(3) unsigned DEFAULT NULL,
  `is_password_change_required` tinyint(3) unsigned DEFAULT NULL,
  `transition_status_id` smallint(5) unsigned DEFAULT NULL,
  `mot1_userid` varchar(8) DEFAULT NULL,
  `mot1_current_smartcard_id` varchar(100) DEFAULT NULL,
  `2fa_token_id` varchar(100) DEFAULT NULL,
  `2fa_token_sent_on` datetime(6) DEFAULT NULL,
  `details_confirmed_on` datetime(6) DEFAULT NULL,
  `first_training_test_done_on` datetime(6) DEFAULT NULL,
  `first_live_test_done_on` datetime(6) DEFAULT NULL,
  `is_deceased` tinyint(1) unsigned DEFAULT NULL,
  `deceased_on` datetime(6) DEFAULT NULL,
  `mot1_details_updated_on` datetime(6) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_person_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `person_identifying_token_map`
--

DROP TABLE IF EXISTS `person_identifying_token_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `person_identifying_token_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `person_id` int(10) unsigned NOT NULL,
  `identifying_token_id` int(10) unsigned NOT NULL,
  `start_date` datetime(6) DEFAULT NULL,
  `end_date` datetime(6) DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_generic table_identifying_token1` (`identifying_token_id`),
  KEY `fk_generic table_person1` (`person_id`),
  CONSTRAINT `fk_generic table_identifying_token1` FOREIGN KEY (`identifying_token_id`) REFERENCES `identifying_token` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_generic table_person1` FOREIGN KEY (`person_id`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_person_identifying_token_map_bi`
BEFORE INSERT ON `mot2`.`person_identifying_token_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_person_identifying_token_map_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `person_security_question_answer`
--

DROP TABLE IF EXISTS `person_security_question_answer`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `person_security_question_answer` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `person_security_question_map_id` int(10) unsigned NOT NULL,
  `is_answered_correctly` tinyint(4) NOT NULL DEFAULT '0',
  `is_service_desk` tinyint(4) NOT NULL DEFAULT '0',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_answer_person_security_question_map` (`person_security_question_map_id`),
  CONSTRAINT `fk_answer_person_security_question_map` FOREIGN KEY (`person_security_question_map_id`) REFERENCES `person_security_question_map` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_person_security_question_answer_bi`
BEFORE INSERT ON `mot2`.`person_security_question_answer`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_person_security_question_answer_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `person_security_question_map`
--

DROP TABLE IF EXISTS `person_security_question_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `person_security_question_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `person_id` int(10) unsigned NOT NULL,
  `security_question_id` int(10) unsigned NOT NULL,
  `answer` varchar(80) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_person_has_security_question_person1` (`person_id`),
  KEY `fk_person_has_security_question_security_question1` (`security_question_id`),
  CONSTRAINT `fk_person_has_security_question_person1` FOREIGN KEY (`person_id`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_has_security_question_security_question1` FOREIGN KEY (`security_question_id`) REFERENCES `security_question` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=405 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_person_security_question_map_bi`
BEFORE INSERT ON `mot2`.`person_security_question_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_person_security_question_map_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_person_security_question_map_bu`
BEFORE UPDATE ON `mot2`.`person_security_question_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_person_security_question_map_bu Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_person_security_question_map_au`
AFTER UPDATE ON `mot2`.`person_security_question_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_person_security_question_map_au Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`person_security_question_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`person_id`
        ,`security_question_id`
        ,`answer`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`person_id`
        ,OLD.`security_question_id`
        ,OLD.`answer`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_person_security_question_map_bd`
BEFORE DELETE ON `mot2`.`person_security_question_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_person_security_question_map_bd Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`person_security_question_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`person_id`
        ,`security_question_id`
        ,`answer`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`person_id`
        ,OLD.`security_question_id`
        ,OLD.`answer`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `person_security_question_map_hist`
--

DROP TABLE IF EXISTS `person_security_question_map_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `person_security_question_map_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `person_id` int(10) unsigned DEFAULT NULL,
  `security_question_id` int(10) unsigned DEFAULT NULL,
  `answer` varchar(80) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_person_security_question_map_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `person_system_role`
--

DROP TABLE IF EXISTS `person_system_role`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `person_system_role` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `full_name` varchar(250) NOT NULL,
  `short_name` varchar(50) NOT NULL,
  `role_id` int(10) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_person_system_role_role` (`role_id`),
  CONSTRAINT `fk_person_system_role_role` FOREIGN KEY (`role_id`) REFERENCES `role` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=22 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Roles in the system that are not organisation/site specific. e.g. Root, Admin, Login';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_person_system_role_bi`
BEFORE INSERT ON `mot2`.`person_system_role`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_person_system_role_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_person_system_role_bu`
BEFORE UPDATE ON `mot2`.`person_system_role`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_person_system_role_bu Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_person_system_role_au`
AFTER UPDATE ON `mot2`.`person_system_role`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_person_system_role_au Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`person_system_role_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`name`
        ,`full_name`
        ,`short_name`
        ,`role_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`name`
        ,OLD.`full_name`
        ,OLD.`short_name`
        ,OLD.`role_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_person_system_role_bd`
BEFORE DELETE ON `mot2`.`person_system_role`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_person_system_role_bd Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`person_system_role_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`name`
        ,`full_name`
        ,`short_name`
        ,`role_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`name`
        ,OLD.`full_name`
        ,OLD.`short_name`
        ,OLD.`role_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `person_system_role_hist`
--

DROP TABLE IF EXISTS `person_system_role_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `person_system_role_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` smallint(5) unsigned DEFAULT NULL,
  `name` varchar(50) DEFAULT NULL,
  `full_name` varchar(250) DEFAULT NULL,
  `short_name` varchar(50) DEFAULT NULL,
  `role_id` int(10) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_person_system_role_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `person_system_role_map`
--

DROP TABLE IF EXISTS `person_system_role_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `person_system_role_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `person_id` int(10) unsigned NOT NULL,
  `person_system_role_id` smallint(5) unsigned NOT NULL,
  `status_id` smallint(5) unsigned NOT NULL,
  `status_changed_on` datetime(6) DEFAULT NULL,
  `valid_from` datetime(6) DEFAULT NULL,
  `expiry_date` datetime(6) DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_person_system_role_map` (`person_system_role_id`),
  KEY `fk_person_system_role_map_person` (`person_id`),
  KEY `fk_person_system_role_map_status` (`status_id`),
  CONSTRAINT `fk_person_system_role_map` FOREIGN KEY (`person_system_role_id`) REFERENCES `person_system_role` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_system_role_map_person` FOREIGN KEY (`person_id`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_system_role_map_status` FOREIGN KEY (`status_id`) REFERENCES `business_role_status` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=326 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='A persons role within the system  i.e. Admin';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_person_system_role_map_bi`
BEFORE INSERT ON `mot2`.`person_system_role_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_person_system_role_map_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_person_system_role_map_bu`
BEFORE UPDATE ON `mot2`.`person_system_role_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_person_system_role_map_bu Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_person_system_role_map_au`
AFTER UPDATE ON `mot2`.`person_system_role_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_person_system_role_map_au Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`person_system_role_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`person_id`
        ,`person_system_role_id`
        ,`status_id`
        ,`status_changed_on`
        ,`valid_from`
        ,`expiry_date`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`person_id`
        ,OLD.`person_system_role_id`
        ,OLD.`status_id`
        ,OLD.`status_changed_on`
        ,OLD.`valid_from`
        ,OLD.`expiry_date`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_person_system_role_map_bd`
BEFORE DELETE ON `mot2`.`person_system_role_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_person_system_role_map_bd Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`person_system_role_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`person_id`
        ,`person_system_role_id`
        ,`status_id`
        ,`status_changed_on`
        ,`valid_from`
        ,`expiry_date`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`person_id`
        ,OLD.`person_system_role_id`
        ,OLD.`status_id`
        ,OLD.`status_changed_on`
        ,OLD.`valid_from`
        ,OLD.`expiry_date`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `person_system_role_map_hist`
--

DROP TABLE IF EXISTS `person_system_role_map_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `person_system_role_map_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `person_id` int(10) unsigned DEFAULT NULL,
  `person_system_role_id` smallint(5) unsigned DEFAULT NULL,
  `status_id` smallint(5) unsigned DEFAULT NULL,
  `status_changed_on` datetime(6) DEFAULT NULL,
  `valid_from` datetime(6) DEFAULT NULL,
  `expiry_date` datetime(6) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_person_system_role_map_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `phone`
--

DROP TABLE IF EXISTS `phone`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `phone` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `contact_detail_id` int(10) unsigned NOT NULL,
  `number` varchar(24) NOT NULL,
  `phone_contact_type_id` smallint(5) unsigned NOT NULL,
  `is_primary` tinyint(4) unsigned NOT NULL DEFAULT '0',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_phone_contact_detail_id` (`contact_detail_id`),
  KEY `fk_phone_contact_phone_contact_type_id` (`phone_contact_type_id`),
  CONSTRAINT `fk_phone_contact_detail_id` FOREIGN KEY (`contact_detail_id`) REFERENCES `contact_detail` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_phone_contact_phone_contact_type_id` FOREIGN KEY (`phone_contact_type_id`) REFERENCES `phone_contact_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=26 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Representation of a phone number.';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_phone_bi`
BEFORE INSERT ON `mot2`.`phone`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_phone_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_phone_bu`
BEFORE UPDATE ON `mot2`.`phone`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_phone_bu Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_phone_au`
AFTER UPDATE ON `mot2`.`phone`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_phone_au Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`phone_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`contact_detail_id`
        ,`number`
        ,`phone_contact_type_id`
        ,`is_primary`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`contact_detail_id`
        ,OLD.`number`
        ,OLD.`phone_contact_type_id`
        ,OLD.`is_primary`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_phone_bd`
BEFORE DELETE ON `mot2`.`phone`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_phone_bd Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`phone_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`contact_detail_id`
        ,`number`
        ,`phone_contact_type_id`
        ,`is_primary`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`contact_detail_id`
        ,OLD.`number`
        ,OLD.`phone_contact_type_id`
        ,OLD.`is_primary`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `phone_contact_type`
--

DROP TABLE IF EXISTS `phone_contact_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `phone_contact_type` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_phone_contact_type_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation of the type of contact record.';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_phone_contact_type_bi`
BEFORE INSERT ON `mot2`.`phone_contact_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_phone_contact_type_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `phone_hist`
--

DROP TABLE IF EXISTS `phone_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `phone_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `contact_detail_id` int(10) unsigned DEFAULT NULL,
  `number` varchar(24) DEFAULT NULL,
  `phone_contact_type_id` smallint(5) unsigned DEFAULT NULL,
  `is_primary` tinyint(4) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_phone_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `qualification`
--

DROP TABLE IF EXISTS `qualification`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `qualification` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL,
  `description` varchar(255) DEFAULT NULL,
  `qualification_type_id` smallint(5) unsigned NOT NULL,
  `awarded_by_organisation_id` int(10) unsigned NOT NULL,
  `country_lookup_id` smallint(5) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_qualification_country_lookup_id` (`country_lookup_id`),
  KEY `fk_qualification_qualification_type` (`qualification_type_id`),
  CONSTRAINT `fk_qualification_country_lookup_id` FOREIGN KEY (`country_lookup_id`) REFERENCES `country_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_qualification_qualification_type` FOREIGN KEY (`qualification_type_id`) REFERENCES `qualification_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Qualification held by a person';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_qualification_bi`
BEFORE INSERT ON `mot2`.`qualification`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_qualification_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `qualification_award`
--

DROP TABLE IF EXISTS `qualification_award`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `qualification_award` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `person_id` int(10) unsigned NOT NULL,
  `site_id` int(10) unsigned DEFAULT NULL,
  `vehicle_class_group_id` int(10) unsigned NOT NULL,
  `certificate_number` varchar(50) DEFAULT NULL,
  `date_of_qualification` date DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_qualification_award_person_id_person_id` (`person_id`),
  KEY `fk_qualification_award_site_id_site_id` (`site_id`),
  CONSTRAINT `fk_qualification_award_person_id_person_id` FOREIGN KEY (`person_id`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_qualification_award_site_id_site_id` FOREIGN KEY (`site_id`) REFERENCES `site` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_qualification_award_bi`
BEFORE INSERT ON `mot2`.`qualification_award`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_qualification_award_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `qualification_type`
--

DROP TABLE IF EXISTS `qualification_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `qualification_type` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation of the type of qualification held by a person';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_qualification_type_bi`
BEFORE INSERT ON `mot2`.`qualification_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_qualification_type_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `reason_for_rejection`
--

DROP TABLE IF EXISTS `reason_for_rejection`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `reason_for_rejection` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `test_item_category_id` int(10) unsigned NOT NULL,
  `test_item_selector_name` varchar(100) NOT NULL,
  `test_item_selector_name_cy` varchar(100) NOT NULL,
  `inspection_manual_reference` varchar(10) NOT NULL,
  `minor_item` tinyint(4) NOT NULL,
  `location_marker` tinyint(4) NOT NULL,
  `qt_marker` tinyint(4) NOT NULL,
  `note` tinyint(4) NOT NULL,
  `manual` varchar(1) NOT NULL,
  `spec_proc` tinyint(4) NOT NULL,
  `is_advisory` tinyint(3) unsigned NOT NULL,
  `is_prs_fail` tinyint(3) unsigned NOT NULL,
  `section_test_item_selector_id` int(10) unsigned NOT NULL,
  `can_be_dangerous` tinyint(4) NOT NULL DEFAULT '0' COMMENT 'Flag to show whether to display failure_dangerous checkbox',
  `date_first_used` datetime DEFAULT NULL,
  `audience` varchar(1) NOT NULL DEFAULT 'b' COMMENT 'TODO: This should be replaced by a business rule when rules engine supports permissions',
  `end_date` date DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_test_item_selector_rfr_section_test_item_selector_id` (`section_test_item_selector_id`),
  KEY `fk_test_item_selector_rfr_test_item_selector_id` (`test_item_category_id`),
  FULLTEXT KEY `ft_description` (`test_item_selector_name`),
  CONSTRAINT `fk_test_item_selector_rfr_section_test_item_selector_id` FOREIGN KEY (`section_test_item_selector_id`) REFERENCES `test_item_category` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_test_item_selector_rfr_test_item_selector_id` FOREIGN KEY (`test_item_category_id`) REFERENCES `test_item_category` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=10110 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Reasons For Rejection including advisory only and items not tested';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_reason_for_rejection_bi`
BEFORE INSERT ON `mot2`.`reason_for_rejection`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_reason_for_rejection_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_reason_for_rejection_bu`
BEFORE UPDATE ON `mot2`.`reason_for_rejection`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_reason_for_rejection_bu Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_reason_for_rejection_au`
AFTER UPDATE ON `mot2`.`reason_for_rejection`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_reason_for_rejection_au Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`reason_for_rejection_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`test_item_category_id`
        ,`test_item_selector_name`
        ,`test_item_selector_name_cy`
        ,`inspection_manual_reference`
        ,`minor_item`
        ,`location_marker`
        ,`qt_marker`
        ,`note`
        ,`manual`
        ,`spec_proc`
        ,`is_advisory`
        ,`is_prs_fail`
        ,`section_test_item_selector_id`
        ,`can_be_dangerous`
        ,`date_first_used`
        ,`audience`
        ,`end_date`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`test_item_category_id`
        ,OLD.`test_item_selector_name`
        ,OLD.`test_item_selector_name_cy`
        ,OLD.`inspection_manual_reference`
        ,OLD.`minor_item`
        ,OLD.`location_marker`
        ,OLD.`qt_marker`
        ,OLD.`note`
        ,OLD.`manual`
        ,OLD.`spec_proc`
        ,OLD.`is_advisory`
        ,OLD.`is_prs_fail`
        ,OLD.`section_test_item_selector_id`
        ,OLD.`can_be_dangerous`
        ,OLD.`date_first_used`
        ,OLD.`audience`
        ,OLD.`end_date`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_reason_for_rejection_bd`
BEFORE DELETE ON `mot2`.`reason_for_rejection`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_reason_for_rejection_bd Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`reason_for_rejection_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`test_item_category_id`
        ,`test_item_selector_name`
        ,`test_item_selector_name_cy`
        ,`inspection_manual_reference`
        ,`minor_item`
        ,`location_marker`
        ,`qt_marker`
        ,`note`
        ,`manual`
        ,`spec_proc`
        ,`is_advisory`
        ,`is_prs_fail`
        ,`section_test_item_selector_id`
        ,`can_be_dangerous`
        ,`date_first_used`
        ,`audience`
        ,`end_date`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`test_item_category_id`
        ,OLD.`test_item_selector_name`
        ,OLD.`test_item_selector_name_cy`
        ,OLD.`inspection_manual_reference`
        ,OLD.`minor_item`
        ,OLD.`location_marker`
        ,OLD.`qt_marker`
        ,OLD.`note`
        ,OLD.`manual`
        ,OLD.`spec_proc`
        ,OLD.`is_advisory`
        ,OLD.`is_prs_fail`
        ,OLD.`section_test_item_selector_id`
        ,OLD.`can_be_dangerous`
        ,OLD.`date_first_used`
        ,OLD.`audience`
        ,OLD.`end_date`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `reason_for_rejection_hist`
--

DROP TABLE IF EXISTS `reason_for_rejection_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `reason_for_rejection_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `test_item_category_id` int(10) unsigned DEFAULT NULL,
  `test_item_selector_name` varchar(100) DEFAULT NULL,
  `test_item_selector_name_cy` varchar(100) DEFAULT NULL,
  `inspection_manual_reference` varchar(10) DEFAULT NULL,
  `minor_item` tinyint(4) DEFAULT NULL,
  `location_marker` tinyint(4) DEFAULT NULL,
  `qt_marker` tinyint(4) DEFAULT NULL,
  `note` tinyint(4) DEFAULT NULL,
  `manual` varchar(1) DEFAULT NULL,
  `spec_proc` tinyint(4) DEFAULT NULL,
  `is_advisory` tinyint(3) unsigned DEFAULT NULL,
  `is_prs_fail` tinyint(3) unsigned DEFAULT NULL,
  `section_test_item_selector_id` int(10) unsigned DEFAULT NULL,
  `can_be_dangerous` tinyint(4) DEFAULT NULL,
  `date_first_used` datetime DEFAULT NULL,
  `audience` varchar(1) DEFAULT NULL,
  `end_date` date DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_reason_for_rejection_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `reason_for_rejection_type`
--

DROP TABLE IF EXISTS `reason_for_rejection_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `reason_for_rejection_type` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) NOT NULL,
  `description` varchar(250) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_reason_for_rejection_type_name` (`name`),
  UNIQUE KEY `uk_reason_for_rejection_type_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation of type of RFR';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_reason_for_rejection_type_bi`
BEFORE INSERT ON `mot2`.`reason_for_rejection_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_reason_for_rejection_type_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `replacement_certificate_draft`
--

DROP TABLE IF EXISTS `replacement_certificate_draft`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `replacement_certificate_draft` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `mot_test_id` bigint(20) unsigned NOT NULL,
  `mot_test_version` int(10) unsigned NOT NULL,
  `odometer_reading_id` bigint(20) unsigned DEFAULT NULL,
  `vrm` varchar(20) DEFAULT NULL,
  `empty_vrm_reason_id` smallint(5) unsigned DEFAULT NULL,
  `vin` varchar(30) DEFAULT NULL,
  `empty_vin_reason_id` smallint(5) unsigned DEFAULT NULL,
  `vehicle_testing_station_id` int(10) unsigned DEFAULT NULL,
  `make_id` int(10) unsigned DEFAULT NULL,
  `make_name` varchar(50) DEFAULT NULL,
  `model_id` int(10) unsigned DEFAULT NULL,
  `model_name` varchar(50) DEFAULT NULL,
  `primary_colour_id` smallint(5) unsigned NOT NULL,
  `secondary_colour_id` smallint(5) unsigned DEFAULT NULL,
  `country_of_registration_id` smallint(5) unsigned NOT NULL,
  `expiry_date` datetime DEFAULT NULL,
  `different_tester_reason_id` smallint(5) unsigned DEFAULT NULL,
  `replacement_reason` text,
  `is_vin_vrm_expiry_changed` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `include_in_mismatch_file` tinyint(4) DEFAULT '0',
  `include_in_passes_file` tinyint(4) DEFAULT '0',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  `is_deleted` tinyint(4) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `fk_different_tester_reason_id` (`different_tester_reason_id`),
  KEY `fk_replacement_certificate_draft_cor` (`country_of_registration_id`),
  KEY `fk_replacement_certificate_draft_empty_vin_reason_id` (`empty_vin_reason_id`),
  KEY `fk_replacement_certificate_draft_empty_vrm_reason_id` (`empty_vrm_reason_id`),
  KEY `fk_replacement_certificate_draft_make` (`make_id`),
  KEY `fk_replacement_certificate_draft_model` (`model_id`),
  KEY `fk_replacement_certificate_draft_mot_test_id` (`mot_test_id`),
  KEY `fk_replacement_certificate_draft_odometer_reading` (`odometer_reading_id`),
  KEY `fk_replacement_certificate_draft_primary_colour` (`primary_colour_id`),
  KEY `fk_replacement_certificate_draft_secondary_colour` (`secondary_colour_id`),
  KEY `fk_replacement_certificate_draft_vts` (`vehicle_testing_station_id`),
  CONSTRAINT `fk_different_tester_reason_id` FOREIGN KEY (`different_tester_reason_id`) REFERENCES `certificate_change_different_tester_reason_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_replacement_certificate_draft_cor` FOREIGN KEY (`country_of_registration_id`) REFERENCES `country_of_registration_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_replacement_certificate_draft_empty_vin_reason_id` FOREIGN KEY (`empty_vin_reason_id`) REFERENCES `empty_vin_reason_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_replacement_certificate_draft_empty_vrm_reason_id` FOREIGN KEY (`empty_vrm_reason_id`) REFERENCES `empty_vrm_reason_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_replacement_certificate_draft_make` FOREIGN KEY (`make_id`) REFERENCES `make` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_replacement_certificate_draft_model` FOREIGN KEY (`model_id`) REFERENCES `model` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_replacement_certificate_draft_mot_test_id` FOREIGN KEY (`mot_test_id`) REFERENCES `mot_test` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_replacement_certificate_draft_odometer_reading` FOREIGN KEY (`odometer_reading_id`) REFERENCES `odometer_reading` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_replacement_certificate_draft_primary_colour` FOREIGN KEY (`primary_colour_id`) REFERENCES `colour_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_replacement_certificate_draft_secondary_colour` FOREIGN KEY (`secondary_colour_id`) REFERENCES `colour_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_replacement_certificate_draft_vts` FOREIGN KEY (`vehicle_testing_station_id`) REFERENCES `site` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_replacement_certificate_draft_bi`
BEFORE INSERT ON `mot2`.`replacement_certificate_draft`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_replacement_certificate_draft_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_replacement_certificate_draft_bu`
BEFORE UPDATE ON `mot2`.`replacement_certificate_draft`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_replacement_certificate_draft_bu Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_replacement_certificate_draft_au`
AFTER UPDATE ON `mot2`.`replacement_certificate_draft`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_replacement_certificate_draft_au Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`replacement_certificate_draft_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`mot_test_id`
        ,`mot_test_version`
        ,`odometer_reading_id`
        ,`vrm`
        ,`empty_vrm_reason_id`
        ,`vin`
        ,`empty_vin_reason_id`
        ,`vehicle_testing_station_id`
        ,`make_id`
        ,`make_name`
        ,`model_id`
        ,`model_name`
        ,`primary_colour_id`
        ,`secondary_colour_id`
        ,`country_of_registration_id`
        ,`expiry_date`
        ,`different_tester_reason_id`
        ,`replacement_reason`
        ,`is_vin_vrm_expiry_changed`
        ,`include_in_mismatch_file`
        ,`include_in_passes_file`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`
        ,`is_deleted`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`mot_test_id`
        ,OLD.`mot_test_version`
        ,OLD.`odometer_reading_id`
        ,OLD.`vrm`
        ,OLD.`empty_vrm_reason_id`
        ,OLD.`vin`
        ,OLD.`empty_vin_reason_id`
        ,OLD.`vehicle_testing_station_id`
        ,OLD.`make_id`
        ,OLD.`make_name`
        ,OLD.`model_id`
        ,OLD.`model_name`
        ,OLD.`primary_colour_id`
        ,OLD.`secondary_colour_id`
        ,OLD.`country_of_registration_id`
        ,OLD.`expiry_date`
        ,OLD.`different_tester_reason_id`
        ,OLD.`replacement_reason`
        ,OLD.`is_vin_vrm_expiry_changed`
        ,OLD.`include_in_mismatch_file`
        ,OLD.`include_in_passes_file`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`
        ,OLD.`is_deleted`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_replacement_certificate_draft_bd`
BEFORE DELETE ON `mot2`.`replacement_certificate_draft`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_replacement_certificate_draft_bd Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`replacement_certificate_draft_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`mot_test_id`
        ,`mot_test_version`
        ,`odometer_reading_id`
        ,`vrm`
        ,`empty_vrm_reason_id`
        ,`vin`
        ,`empty_vin_reason_id`
        ,`vehicle_testing_station_id`
        ,`make_id`
        ,`make_name`
        ,`model_id`
        ,`model_name`
        ,`primary_colour_id`
        ,`secondary_colour_id`
        ,`country_of_registration_id`
        ,`expiry_date`
        ,`different_tester_reason_id`
        ,`replacement_reason`
        ,`is_vin_vrm_expiry_changed`
        ,`include_in_mismatch_file`
        ,`include_in_passes_file`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`
        ,`is_deleted`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`mot_test_id`
        ,OLD.`mot_test_version`
        ,OLD.`odometer_reading_id`
        ,OLD.`vrm`
        ,OLD.`empty_vrm_reason_id`
        ,OLD.`vin`
        ,OLD.`empty_vin_reason_id`
        ,OLD.`vehicle_testing_station_id`
        ,OLD.`make_id`
        ,OLD.`make_name`
        ,OLD.`model_id`
        ,OLD.`model_name`
        ,OLD.`primary_colour_id`
        ,OLD.`secondary_colour_id`
        ,OLD.`country_of_registration_id`
        ,OLD.`expiry_date`
        ,OLD.`different_tester_reason_id`
        ,OLD.`replacement_reason`
        ,OLD.`is_vin_vrm_expiry_changed`
        ,OLD.`include_in_mismatch_file`
        ,OLD.`include_in_passes_file`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`
        ,OLD.`is_deleted`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `replacement_certificate_draft_hist`
--

DROP TABLE IF EXISTS `replacement_certificate_draft_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `replacement_certificate_draft_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `mot_test_id` bigint(20) unsigned DEFAULT NULL,
  `mot_test_version` int(10) unsigned DEFAULT NULL,
  `odometer_reading_id` bigint(20) unsigned DEFAULT NULL,
  `vrm` varchar(20) DEFAULT NULL,
  `empty_vrm_reason_id` smallint(5) unsigned DEFAULT NULL,
  `vin` varchar(30) DEFAULT NULL,
  `empty_vin_reason_id` smallint(5) unsigned DEFAULT NULL,
  `vehicle_testing_station_id` int(10) unsigned DEFAULT NULL,
  `make_id` int(10) unsigned DEFAULT NULL,
  `make_name` varchar(50) DEFAULT NULL,
  `model_id` int(10) unsigned DEFAULT NULL,
  `model_name` varchar(50) DEFAULT NULL,
  `primary_colour_id` smallint(5) unsigned DEFAULT NULL,
  `secondary_colour_id` smallint(5) unsigned DEFAULT NULL,
  `country_of_registration_id` smallint(5) unsigned DEFAULT NULL,
  `expiry_date` datetime DEFAULT NULL,
  `different_tester_reason_id` smallint(5) unsigned DEFAULT NULL,
  `replacement_reason` text,
  `is_vin_vrm_expiry_changed` tinyint(3) unsigned DEFAULT NULL,
  `include_in_mismatch_file` tinyint(4) DEFAULT NULL,
  `include_in_passes_file` tinyint(4) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  `is_deleted` tinyint(4) DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_replacement_certificate_draft_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `rfr_business_rule_map`
--

DROP TABLE IF EXISTS `rfr_business_rule_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `rfr_business_rule_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `rfr_id` int(10) unsigned NOT NULL,
  `business_rule_id` int(10) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_rfr_business_rule_map_business_rule1` (`business_rule_id`),
  KEY `fk_rfr_business_rule_map_reason_for_rejection1` (`rfr_id`),
  CONSTRAINT `fk_rfr_business_rule_map_business_rule1` FOREIGN KEY (`business_rule_id`) REFERENCES `business_rule` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_rfr_business_rule_map_reason_for_rejection1` FOREIGN KEY (`rfr_id`) REFERENCES `reason_for_rejection` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Business rule on how to apply this RFR helps to facilitate mutiple rules based on class i.e. rule may apply to older class 4 then class 5 vehicles';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_rfr_business_rule_map_bi`
BEFORE INSERT ON `mot2`.`rfr_business_rule_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_rfr_business_rule_map_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `rfr_language_content_map`
--

DROP TABLE IF EXISTS `rfr_language_content_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `rfr_language_content_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `rfr_id` int(10) unsigned NOT NULL,
  `language_type_id` smallint(5) unsigned NOT NULL,
  `name` varchar(500) NOT NULL,
  `inspection_manual_description` varchar(500) DEFAULT NULL,
  `advisory_text` varchar(250) DEFAULT NULL,
  `test_item_selector_name` varchar(100) DEFAULT NULL COMMENT 'FOR FULLTEXT SEARCH',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_rfr_language_media_map_language_type1` (`language_type_id`),
  KEY `fk_rfr_language_media_map_reason_for_rejection1` (`rfr_id`),
  FULLTEXT KEY `ft_name` (`name`,`test_item_selector_name`),
  CONSTRAINT `fk_rfr_language_media_map_language_type1` FOREIGN KEY (`language_type_id`) REFERENCES `language_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_rfr_language_media_map_reason_for_rejection1` FOREIGN KEY (`rfr_id`) REFERENCES `reason_for_rejection` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=10108 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='How RFRs are displayed in different languages and presented';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_rfr_language_content_map_bi`
BEFORE INSERT ON `mot2`.`rfr_language_content_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_rfr_language_content_map_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `rfr_vehicle_class_map`
--

DROP TABLE IF EXISTS `rfr_vehicle_class_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `rfr_vehicle_class_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `rfr_id` int(10) unsigned NOT NULL,
  `vehicle_class_id` smallint(5) unsigned NOT NULL,
  `business_rule_id` int(10) unsigned DEFAULT NULL COMMENT 'Filter for RFRs to handle rules that require more than vehicle class',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_rfr_vehicle_class_mapq` (`vehicle_class_id`),
  KEY `fk_rfr_vehicle_class_map_business_rule1` (`business_rule_id`),
  KEY `fk_rfr_vehicle_class_map_test_item_selector_rfr` (`rfr_id`),
  CONSTRAINT `fk_rfr_vehicle_class_map_business_rule1` FOREIGN KEY (`business_rule_id`) REFERENCES `business_rule` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_rfr_vehicle_class_map_test_item_selector_rfr` FOREIGN KEY (`rfr_id`) REFERENCES `reason_for_rejection` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_rfr_vehicle_class_mapq` FOREIGN KEY (`vehicle_class_id`) REFERENCES `vehicle_class` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=10396 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='reasons for rejection for a specific class';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_rfr_vehicle_class_map_bi`
BEFORE INSERT ON `mot2`.`rfr_vehicle_class_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_rfr_vehicle_class_map_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `role`
--

DROP TABLE IF EXISTS `role`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `role` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(40) CHARACTER SET latin1 NOT NULL,
  `is_internal` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT 'An internal role relates to a government worker, not someone who perfoms MOTs',
  `is_trade` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT 'A trade role is associated to an MOT tester or MOT testing management',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_role_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=38 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_role_bi`
BEFORE INSERT ON `mot2`.`role`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_role_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_role_bu`
BEFORE UPDATE ON `mot2`.`role`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_role_bu Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_role_au`
AFTER UPDATE ON `mot2`.`role`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_role_au Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`role_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`name`
        ,`code`
        ,`is_internal`
        ,`is_trade`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`name`
        ,OLD.`code`
        ,OLD.`is_internal`
        ,OLD.`is_trade`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_role_bd`
BEFORE DELETE ON `mot2`.`role`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_role_bd Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`role_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`name`
        ,`code`
        ,`is_internal`
        ,`is_trade`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`name`
        ,OLD.`code`
        ,OLD.`is_internal`
        ,OLD.`is_trade`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `role_hist`
--

DROP TABLE IF EXISTS `role_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `role_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `name` varchar(50) DEFAULT NULL,
  `code` varchar(40) CHARACTER SET latin1 DEFAULT NULL,
  `is_internal` tinyint(3) unsigned DEFAULT NULL,
  `is_trade` tinyint(3) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_role_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `role_permission_map`
--

DROP TABLE IF EXISTS `role_permission_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `role_permission_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `role_id` int(10) unsigned NOT NULL,
  `permission_id` int(10) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_role_permission_map_role_id_permission_id` (`role_id`,`permission_id`),
  KEY `fk_role_permission_map_permission` (`permission_id`),
  CONSTRAINT `fk_role_permission_map_permission` FOREIGN KEY (`permission_id`) REFERENCES `permission` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_role_permission_map_role` FOREIGN KEY (`role_id`) REFERENCES `role` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=2098 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_role_permission_map_bi`
BEFORE INSERT ON `mot2`.`role_permission_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_role_permission_map_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_role_permission_map_bu`
BEFORE UPDATE ON `mot2`.`role_permission_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_role_permission_map_bu Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_role_permission_map_au`
AFTER UPDATE ON `mot2`.`role_permission_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_role_permission_map_au Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`role_permission_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`role_id`
        ,`permission_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`role_id`
        ,OLD.`permission_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_role_permission_map_bd`
BEFORE DELETE ON `mot2`.`role_permission_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_role_permission_map_bd Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`role_permission_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`role_id`
        ,`permission_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`role_id`
        ,OLD.`permission_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `role_permission_map_hist`
--

DROP TABLE IF EXISTS `role_permission_map_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `role_permission_map_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `role_id` int(10) unsigned DEFAULT NULL,
  `permission_id` int(10) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_role_permission_map_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `security_question`
--

DROP TABLE IF EXISTS `security_question`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `security_question` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `question_text` varchar(80) NOT NULL,
  `question_group` tinyint(4) NOT NULL,
  `display_order` smallint(5) unsigned NOT NULL DEFAULT '0',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_security_question_bi`
BEFORE INSERT ON `mot2`.`security_question`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_security_question_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `site`
--

DROP TABLE IF EXISTS `site`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `site` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `organisation_id` int(10) unsigned DEFAULT NULL,
  `name` varchar(100) NOT NULL,
  `site_number` varchar(45) NOT NULL,
  `site_status_id` bigint(20) unsigned NOT NULL COMMENT 'Vehicle Testing Station Status',
  `status_changed_on` datetime(6) DEFAULT NULL COMMENT 'Vehicle Testing Station Status Effective Date',
  `default_brake_test_class_1_and_2_id` smallint(5) unsigned DEFAULT NULL,
  `default_service_brake_test_class_3_and_above_id` smallint(5) unsigned DEFAULT NULL,
  `default_parking_brake_test_class_3_and_above_id` smallint(5) unsigned DEFAULT NULL,
  `last_site_assessment_id` int(10) unsigned DEFAULT NULL,
  `dual_language` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `scottish_bank_holiday` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `latitude` decimal(8,5) DEFAULT NULL,
  `longitude` decimal(8,5) DEFAULT NULL,
  `type_id` smallint(5) unsigned NOT NULL,
  `transition_status_id` smallint(5) unsigned DEFAULT NULL,
  `non_working_day_country_lookup_id` smallint(5) unsigned DEFAULT NULL,
  `first_login_by` int(10) unsigned DEFAULT NULL,
  `first_login_on` datetime(6) DEFAULT NULL,
  `first_test_carried_out_by` int(10) unsigned DEFAULT NULL,
  `first_test_carried_out_number` int(10) unsigned DEFAULT NULL,
  `first_test_carried_out_on` datetime(6) DEFAULT NULL,
  `first_live_test_carried_out_by` int(10) unsigned DEFAULT NULL,
  `first_live_test_carried_out_number` int(10) unsigned DEFAULT NULL,
  `first_live_test_carried_out_on` datetime(6) DEFAULT NULL,
  `mot1_details_updated_on` datetime(6) DEFAULT NULL,
  `mot1_vts_device_status_id` smallint(5) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_site_site_number` (`site_number`),
  KEY `fk_site_assessment_id` (`last_site_assessment_id`),
  KEY `fk_site_default_brake_test_class_1_and_2_id` (`default_brake_test_class_1_and_2_id`),
  KEY `fk_site_default_parking_brake_test_class_3_and_above_id` (`default_parking_brake_test_class_3_and_above_id`),
  KEY `fk_site_default_service_brake_test_class_3_and_above_id` (`default_service_brake_test_class_3_and_above_id`),
  KEY `fk_site_first_live_test_person` (`first_live_test_carried_out_by`),
  KEY `fk_site_first_login_person` (`first_login_by`),
  KEY `fk_site_first_test_person` (`first_test_carried_out_by`),
  KEY `fk_site_mot1_vts_device_status_id` (`mot1_vts_device_status_id`),
  KEY `fk_site_non_working_day_country_lookup_id` (`non_working_day_country_lookup_id`),
  KEY `fk_site_organisation` (`organisation_id`),
  KEY `fk_site_site_status_id_site_status_lookup_id` (`site_status_id`),
  KEY `fk_site_transition_status_id` (`transition_status_id`),
  KEY `fk_site_type_id` (`type_id`),
  FULLTEXT KEY `ft_site_number_name` (`site_number`,`name`),
  CONSTRAINT `fk_site_assessment_id` FOREIGN KEY (`last_site_assessment_id`) REFERENCES `enforcement_site_assessment` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_site_default_brake_test_class_1_and_2_id` FOREIGN KEY (`default_brake_test_class_1_and_2_id`) REFERENCES `brake_test_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_site_default_parking_brake_test_class_3_and_above_id` FOREIGN KEY (`default_parking_brake_test_class_3_and_above_id`) REFERENCES `brake_test_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_site_default_service_brake_test_class_3_and_above_id` FOREIGN KEY (`default_service_brake_test_class_3_and_above_id`) REFERENCES `brake_test_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_site_first_live_test_person` FOREIGN KEY (`first_live_test_carried_out_by`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_site_first_login_person` FOREIGN KEY (`first_login_by`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_site_first_test_person` FOREIGN KEY (`first_test_carried_out_by`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_site_mot1_vts_device_status_id` FOREIGN KEY (`mot1_vts_device_status_id`) REFERENCES `mot1_vts_device_status` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_site_non_working_day_country_lookup_id` FOREIGN KEY (`non_working_day_country_lookup_id`) REFERENCES `non_working_day_country_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_site_organisation` FOREIGN KEY (`organisation_id`) REFERENCES `organisation` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_site_site_status_id_site_status_lookup_id` FOREIGN KEY (`site_status_id`) REFERENCES `site_status_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_site_transition_status_id` FOREIGN KEY (`transition_status_id`) REFERENCES `transition_status` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_site_type_id` FOREIGN KEY (`type_id`) REFERENCES `site_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=3019 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Representation of a site in the system';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_bi`
BEFORE INSERT ON `mot2`.`site`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_bu`
BEFORE UPDATE ON `mot2`.`site`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_bu Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_au`
AFTER UPDATE ON `mot2`.`site`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_au Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`site_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`organisation_id`
        ,`name`
        ,`site_number`
        ,`site_status_id`
        ,`status_changed_on`
        ,`default_brake_test_class_1_and_2_id`
        ,`default_service_brake_test_class_3_and_above_id`
        ,`default_parking_brake_test_class_3_and_above_id`
        ,`last_site_assessment_id`
        ,`dual_language`
        ,`scottish_bank_holiday`
        ,`latitude`
        ,`longitude`
        ,`type_id`
        ,`transition_status_id`
        ,`non_working_day_country_lookup_id`
        ,`first_login_by`
        ,`first_login_on`
        ,`first_test_carried_out_by`
        ,`first_test_carried_out_number`
        ,`first_test_carried_out_on`
        ,`first_live_test_carried_out_by`
        ,`first_live_test_carried_out_number`
        ,`first_live_test_carried_out_on`
        ,`mot1_details_updated_on`
        ,`mot1_vts_device_status_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`organisation_id`
        ,OLD.`name`
        ,OLD.`site_number`
        ,OLD.`site_status_id`
        ,OLD.`status_changed_on`
        ,OLD.`default_brake_test_class_1_and_2_id`
        ,OLD.`default_service_brake_test_class_3_and_above_id`
        ,OLD.`default_parking_brake_test_class_3_and_above_id`
        ,OLD.`last_site_assessment_id`
        ,OLD.`dual_language`
        ,OLD.`scottish_bank_holiday`
        ,OLD.`latitude`
        ,OLD.`longitude`
        ,OLD.`type_id`
        ,OLD.`transition_status_id`
        ,OLD.`non_working_day_country_lookup_id`
        ,OLD.`first_login_by`
        ,OLD.`first_login_on`
        ,OLD.`first_test_carried_out_by`
        ,OLD.`first_test_carried_out_number`
        ,OLD.`first_test_carried_out_on`
        ,OLD.`first_live_test_carried_out_by`
        ,OLD.`first_live_test_carried_out_number`
        ,OLD.`first_live_test_carried_out_on`
        ,OLD.`mot1_details_updated_on`
        ,OLD.`mot1_vts_device_status_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_bd`
BEFORE DELETE ON `mot2`.`site`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_bd Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`site_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`organisation_id`
        ,`name`
        ,`site_number`
        ,`site_status_id`
        ,`status_changed_on`
        ,`default_brake_test_class_1_and_2_id`
        ,`default_service_brake_test_class_3_and_above_id`
        ,`default_parking_brake_test_class_3_and_above_id`
        ,`last_site_assessment_id`
        ,`dual_language`
        ,`scottish_bank_holiday`
        ,`latitude`
        ,`longitude`
        ,`type_id`
        ,`transition_status_id`
        ,`non_working_day_country_lookup_id`
        ,`first_login_by`
        ,`first_login_on`
        ,`first_test_carried_out_by`
        ,`first_test_carried_out_number`
        ,`first_test_carried_out_on`
        ,`first_live_test_carried_out_by`
        ,`first_live_test_carried_out_number`
        ,`first_live_test_carried_out_on`
        ,`mot1_details_updated_on`
        ,`mot1_vts_device_status_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`organisation_id`
        ,OLD.`name`
        ,OLD.`site_number`
        ,OLD.`site_status_id`
        ,OLD.`status_changed_on`
        ,OLD.`default_brake_test_class_1_and_2_id`
        ,OLD.`default_service_brake_test_class_3_and_above_id`
        ,OLD.`default_parking_brake_test_class_3_and_above_id`
        ,OLD.`last_site_assessment_id`
        ,OLD.`dual_language`
        ,OLD.`scottish_bank_holiday`
        ,OLD.`latitude`
        ,OLD.`longitude`
        ,OLD.`type_id`
        ,OLD.`transition_status_id`
        ,OLD.`non_working_day_country_lookup_id`
        ,OLD.`first_login_by`
        ,OLD.`first_login_on`
        ,OLD.`first_test_carried_out_by`
        ,OLD.`first_test_carried_out_number`
        ,OLD.`first_test_carried_out_on`
        ,OLD.`first_live_test_carried_out_by`
        ,OLD.`first_live_test_carried_out_number`
        ,OLD.`first_live_test_carried_out_on`
        ,OLD.`mot1_details_updated_on`
        ,OLD.`mot1_vts_device_status_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `site_assembly_role_map`
--

DROP TABLE IF EXISTS `site_assembly_role_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `site_assembly_role_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `site_id` int(10) unsigned NOT NULL,
  `assembly_id` int(10) unsigned NOT NULL,
  `assembly_role_id` smallint(5) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_site_assembly_role_map_site_id_assembly_id_assembly_role_id` (`site_id`,`assembly_id`,`assembly_role_id`),
  KEY `fk_site_assembly_role_map_assembly_id` (`assembly_id`),
  KEY `fk_site_assembly_role_map_assembly_role_id` (`assembly_role_id`),
  CONSTRAINT `fk_site_assembly_role_map_assembly_id` FOREIGN KEY (`assembly_id`) REFERENCES `assembly` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_site_assembly_role_map_assembly_role_id` FOREIGN KEY (`assembly_role_id`) REFERENCES `assembly_role_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_site_assembly_role_map_site_id` FOREIGN KEY (`site_id`) REFERENCES `site` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_assembly_role_map_bi`
BEFORE INSERT ON `mot2`.`site_assembly_role_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_assembly_role_map_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `site_business_role`
--

DROP TABLE IF EXISTS `site_business_role`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `site_business_role` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `role_id` int(10) unsigned DEFAULT NULL,
  `code` varchar(40) CHARACTER SET latin1 NOT NULL,
  `name` varchar(50) NOT NULL,
  `description` varchar(250) NOT NULL,
  `organisation_type_id` smallint(5) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_site_business_role_organisation_type_id` (`organisation_type_id`),
  KEY `fk_site_business_role_role` (`role_id`),
  CONSTRAINT `fk_site_business_role_organisation_type_id` FOREIGN KEY (`organisation_type_id`) REFERENCES `organisation_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_site_business_role_role` FOREIGN KEY (`role_id`) REFERENCES `role` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_business_role_bi`
BEFORE INSERT ON `mot2`.`site_business_role`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_business_role_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `site_business_role_map`
--

DROP TABLE IF EXISTS `site_business_role_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `site_business_role_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `site_id` int(10) unsigned NOT NULL,
  `person_id` int(10) unsigned NOT NULL,
  `site_business_role_id` smallint(5) unsigned NOT NULL,
  `status_id` smallint(5) unsigned NOT NULL,
  `status_changed_on` datetime(6) DEFAULT NULL,
  `valid_from` datetime(6) DEFAULT NULL,
  `expiry_date` datetime(6) DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_site_business_role_map` (`site_business_role_id`),
  KEY `fk_site_role_map_person` (`person_id`),
  KEY `fk_site_role_map_site` (`site_id`),
  KEY `fk_site_role_map_status` (`status_id`),
  CONSTRAINT `fk_site_business_role_map` FOREIGN KEY (`site_business_role_id`) REFERENCES `site_business_role` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_site_role_map_person` FOREIGN KEY (`person_id`) REFERENCES `person` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_site_role_map_site` FOREIGN KEY (`site_id`) REFERENCES `site` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_site_role_map_status` FOREIGN KEY (`status_id`) REFERENCES `business_role_status` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=151 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_business_role_map_bi`
BEFORE INSERT ON `mot2`.`site_business_role_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_business_role_map_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_business_role_map_bu`
BEFORE UPDATE ON `mot2`.`site_business_role_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_business_role_map_bu Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_business_role_map_au`
AFTER UPDATE ON `mot2`.`site_business_role_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_business_role_map_au Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`site_business_role_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`site_id`
        ,`person_id`
        ,`site_business_role_id`
        ,`status_id`
        ,`status_changed_on`
        ,`valid_from`
        ,`expiry_date`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`site_id`
        ,OLD.`person_id`
        ,OLD.`site_business_role_id`
        ,OLD.`status_id`
        ,OLD.`status_changed_on`
        ,OLD.`valid_from`
        ,OLD.`expiry_date`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_business_role_map_bd`
BEFORE DELETE ON `mot2`.`site_business_role_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_business_role_map_bd Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`site_business_role_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`site_id`
        ,`person_id`
        ,`site_business_role_id`
        ,`status_id`
        ,`status_changed_on`
        ,`valid_from`
        ,`expiry_date`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`site_id`
        ,OLD.`person_id`
        ,OLD.`site_business_role_id`
        ,OLD.`status_id`
        ,OLD.`status_changed_on`
        ,OLD.`valid_from`
        ,OLD.`expiry_date`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `site_business_role_map_hist`
--

DROP TABLE IF EXISTS `site_business_role_map_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `site_business_role_map_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `site_id` int(10) unsigned DEFAULT NULL,
  `person_id` int(10) unsigned DEFAULT NULL,
  `site_business_role_id` smallint(5) unsigned DEFAULT NULL,
  `status_id` smallint(5) unsigned DEFAULT NULL,
  `status_changed_on` datetime(6) DEFAULT NULL,
  `valid_from` datetime(6) DEFAULT NULL,
  `expiry_date` datetime(6) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_site_business_role_map_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `site_comment_map`
--

DROP TABLE IF EXISTS `site_comment_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `site_comment_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `site_id` int(10) unsigned NOT NULL,
  `comment_id` bigint(20) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_site_comment_map_comment` (`comment_id`),
  KEY `fk_site_comment_map_site` (`site_id`),
  CONSTRAINT `fk_site_comment_map_comment` FOREIGN KEY (`comment_id`) REFERENCES `comment` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_site_comment_map_site` FOREIGN KEY (`site_id`) REFERENCES `site` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Used to link a comment made against a site.';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_comment_map_bi`
BEFORE INSERT ON `mot2`.`site_comment_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_comment_map_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_comment_map_bu`
BEFORE UPDATE ON `mot2`.`site_comment_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_comment_map_bu Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_comment_map_au`
AFTER UPDATE ON `mot2`.`site_comment_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_comment_map_au Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`site_comment_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`site_id`
        ,`comment_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`site_id`
        ,OLD.`comment_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_comment_map_bd`
BEFORE DELETE ON `mot2`.`site_comment_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_comment_map_bd Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`site_comment_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`site_id`
        ,`comment_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`site_id`
        ,OLD.`comment_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `site_comment_map_hist`
--

DROP TABLE IF EXISTS `site_comment_map_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `site_comment_map_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `site_id` int(10) unsigned DEFAULT NULL,
  `comment_id` bigint(20) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_site_comment_map_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `site_condition_approval`
--

DROP TABLE IF EXISTS `site_condition_approval`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `site_condition_approval` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `site_id` int(10) unsigned NOT NULL,
  `interviewed_name` varchar(100) NOT NULL,
  `interviewed_grade` varchar(100) NOT NULL,
  `visit_date` date NOT NULL,
  `fuel_id` smallint(5) unsigned NOT NULL,
  `atl_mode` tinyint(4) NOT NULL DEFAULT '0',
  `optl_mode` tinyint(4) NOT NULL DEFAULT '0',
  `comment_id` bigint(20) unsigned DEFAULT NULL,
  `ve_name` varchar(100) NOT NULL,
  `ve_grade` varchar(100) NOT NULL,
  `approval_date` date NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `sca_comment` (`comment_id`),
  KEY `sca_enforcement_fuel_type_lookup` (`fuel_id`),
  KEY `sca_site` (`site_id`),
  CONSTRAINT `sca_comment` FOREIGN KEY (`comment_id`) REFERENCES `comment` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `sca_enforcement_fuel_type_lookup` FOREIGN KEY (`fuel_id`) REFERENCES `enforcement_fuel_type_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `sca_site` FOREIGN KEY (`site_id`) REFERENCES `site` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Records results of a condition approval visit by a VE to a site';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_condition_approval_bi`
BEFORE INSERT ON `mot2`.`site_condition_approval`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_condition_approval_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `site_contact_detail_map`
--

DROP TABLE IF EXISTS `site_contact_detail_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `site_contact_detail_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `site_contact_type_id` smallint(5) unsigned NOT NULL,
  `site_id` int(10) unsigned NOT NULL,
  `contact_detail_id` int(10) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_site_contact_detail_map_contact_detail` (`contact_detail_id`),
  KEY `fk_site_contact_detail_map_site` (`site_id`),
  KEY `fk_site_contact_detail_map_site_contact_type` (`site_contact_type_id`),
  CONSTRAINT `fk_site_contact_detail_map_contact_detail` FOREIGN KEY (`contact_detail_id`) REFERENCES `contact_detail` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_site_contact_detail_map_site` FOREIGN KEY (`site_id`) REFERENCES `site` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_site_contact_detail_map_site_contact_type` FOREIGN KEY (`site_contact_type_id`) REFERENCES `site_contact_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=25020 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Link table between a site and a set of contact details';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_contact_detail_map_bi`
BEFORE INSERT ON `mot2`.`site_contact_detail_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_contact_detail_map_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_contact_detail_map_bu`
BEFORE UPDATE ON `mot2`.`site_contact_detail_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_contact_detail_map_bu Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_contact_detail_map_au`
AFTER UPDATE ON `mot2`.`site_contact_detail_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_contact_detail_map_au Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`site_contact_detail_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`site_contact_type_id`
        ,`site_id`
        ,`contact_detail_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`site_contact_type_id`
        ,OLD.`site_id`
        ,OLD.`contact_detail_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_contact_detail_map_bd`
BEFORE DELETE ON `mot2`.`site_contact_detail_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_contact_detail_map_bd Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`site_contact_detail_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`site_contact_type_id`
        ,`site_id`
        ,`contact_detail_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`site_contact_type_id`
        ,OLD.`site_id`
        ,OLD.`contact_detail_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `site_contact_detail_map_hist`
--

DROP TABLE IF EXISTS `site_contact_detail_map_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `site_contact_detail_map_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `site_contact_type_id` smallint(5) unsigned DEFAULT NULL,
  `site_id` int(10) unsigned DEFAULT NULL,
  `contact_detail_id` int(10) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_site_contact_detail_map_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `site_contact_type`
--

DROP TABLE IF EXISTS `site_contact_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `site_contact_type` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_site_contact_type_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation of types of contact detail at a site';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_contact_type_bi`
BEFORE INSERT ON `mot2`.`site_contact_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_contact_type_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `site_emergency_log_map`
--

DROP TABLE IF EXISTS `site_emergency_log_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `site_emergency_log_map` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `site_id` int(10) unsigned NOT NULL,
  `emergency_log_id` int(10) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_site_emergency_log_map_emergency_log1` (`emergency_log_id`),
  KEY `fk_site_emergency_log_map_site1` (`site_id`),
  CONSTRAINT `fk_site_emergency_log_map_emergency_log1` FOREIGN KEY (`emergency_log_id`) REFERENCES `emergency_log` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_site_emergency_log_map_site1` FOREIGN KEY (`site_id`) REFERENCES `site` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='sites confirm that they have completed catchup';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_emergency_log_map_bi`
BEFORE INSERT ON `mot2`.`site_emergency_log_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_emergency_log_map_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_emergency_log_map_bu`
BEFORE UPDATE ON `mot2`.`site_emergency_log_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_emergency_log_map_bu Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_emergency_log_map_au`
AFTER UPDATE ON `mot2`.`site_emergency_log_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_emergency_log_map_au Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`site_emergency_log_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`site_id`
        ,`emergency_log_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`site_id`
        ,OLD.`emergency_log_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_emergency_log_map_bd`
BEFORE DELETE ON `mot2`.`site_emergency_log_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_emergency_log_map_bd Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`site_emergency_log_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`site_id`
        ,`emergency_log_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`site_id`
        ,OLD.`emergency_log_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `site_emergency_log_map_hist`
--

DROP TABLE IF EXISTS `site_emergency_log_map_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `site_emergency_log_map_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(11) DEFAULT NULL,
  `site_id` int(10) unsigned DEFAULT NULL,
  `emergency_log_id` int(10) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_site_emergency_log_map_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `site_facility`
--

DROP TABLE IF EXISTS `site_facility`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `site_facility` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `site_id` int(10) unsigned NOT NULL,
  `facility_type_id` int(10) unsigned NOT NULL,
  `name` varchar(50) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_site_fac_facility_type` (`facility_type_id`),
  KEY `fk_site_id` (`site_id`),
  CONSTRAINT `fk_site_fac_facility_type` FOREIGN KEY (`facility_type_id`) REFERENCES `facility_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_site_id` FOREIGN KEY (`site_id`) REFERENCES `site` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Facilities available at sites';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_facility_bi`
BEFORE INSERT ON `mot2`.`site_facility`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_facility_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_facility_bu`
BEFORE UPDATE ON `mot2`.`site_facility`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_facility_bu Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_facility_au`
AFTER UPDATE ON `mot2`.`site_facility`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_facility_au Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`site_facility_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`site_id`
        ,`facility_type_id`
        ,`name`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`site_id`
        ,OLD.`facility_type_id`
        ,OLD.`name`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_facility_bd`
BEFORE DELETE ON `mot2`.`site_facility`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_facility_bd Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`site_facility_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`site_id`
        ,`facility_type_id`
        ,`name`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`site_id`
        ,OLD.`facility_type_id`
        ,OLD.`name`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `site_facility_hist`
--

DROP TABLE IF EXISTS `site_facility_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `site_facility_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `site_id` int(10) unsigned DEFAULT NULL,
  `facility_type_id` int(10) unsigned DEFAULT NULL,
  `name` varchar(50) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_site_facility_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `site_hist`
--

DROP TABLE IF EXISTS `site_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `site_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `organisation_id` int(10) unsigned DEFAULT NULL,
  `name` varchar(100) DEFAULT NULL,
  `site_number` varchar(45) DEFAULT NULL,
  `site_status_id` bigint(20) unsigned DEFAULT NULL,
  `status_changed_on` datetime(6) DEFAULT NULL,
  `default_brake_test_class_1_and_2_id` smallint(5) unsigned DEFAULT NULL,
  `default_service_brake_test_class_3_and_above_id` smallint(5) unsigned DEFAULT NULL,
  `default_parking_brake_test_class_3_and_above_id` smallint(5) unsigned DEFAULT NULL,
  `last_site_assessment_id` int(10) unsigned DEFAULT NULL,
  `dual_language` tinyint(3) unsigned DEFAULT NULL,
  `scottish_bank_holiday` tinyint(3) unsigned DEFAULT NULL,
  `latitude` decimal(8,5) DEFAULT NULL,
  `longitude` decimal(8,5) DEFAULT NULL,
  `type_id` smallint(5) unsigned DEFAULT NULL,
  `transition_status_id` smallint(5) unsigned DEFAULT NULL,
  `non_working_day_country_lookup_id` smallint(5) unsigned DEFAULT NULL,
  `first_login_by` int(10) unsigned DEFAULT NULL,
  `first_login_on` datetime(6) DEFAULT NULL,
  `first_test_carried_out_by` int(10) unsigned DEFAULT NULL,
  `first_test_carried_out_number` int(10) unsigned DEFAULT NULL,
  `first_test_carried_out_on` datetime(6) DEFAULT NULL,
  `first_live_test_carried_out_by` int(10) unsigned DEFAULT NULL,
  `first_live_test_carried_out_number` int(10) unsigned DEFAULT NULL,
  `first_live_test_carried_out_on` datetime(6) DEFAULT NULL,
  `mot1_details_updated_on` datetime(6) DEFAULT NULL,
  `mot1_vts_device_status_id` smallint(5) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_site_hist` (`id`,`version`)
) ENGINE=InnoDB AUTO_INCREMENT=154 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `site_identifying_token_map`
--

DROP TABLE IF EXISTS `site_identifying_token_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `site_identifying_token_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `site_id` int(10) unsigned NOT NULL,
  `identifying_token_id` int(10) unsigned NOT NULL,
  `is_assigned_to_person` tinyint(4) NOT NULL DEFAULT '0',
  `start_date` datetime(6) DEFAULT NULL,
  `end_date` datetime(6) DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_generic table_site1` (`site_id`),
  KEY `fk_site_identifying_token_map_identifying_token1` (`identifying_token_id`),
  CONSTRAINT `fk_generic table_site1` FOREIGN KEY (`site_id`) REFERENCES `site` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_site_identifying_token_map_identifying_token1` FOREIGN KEY (`identifying_token_id`) REFERENCES `identifying_token` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_identifying_token_map_bi`
BEFORE INSERT ON `mot2`.`site_identifying_token_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_identifying_token_map_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `site_status_lookup`
--

DROP TABLE IF EXISTS `site_status_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `site_status_lookup` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(30) NOT NULL,
  `code` varchar(5) NOT NULL,
  `display_order` smallint(5) unsigned NOT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) DEFAULT NULL,
  `last_updated_on` timestamp(6) NULL DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_site_status_lookup_display_order` (`display_order`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='A business approved list of statuses for a site';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_status_lookup_bi`
BEFORE INSERT ON `mot2`.`site_status_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_status_lookup_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `site_testing_daily_schedule`
--

DROP TABLE IF EXISTS `site_testing_daily_schedule`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `site_testing_daily_schedule` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `site_id` int(10) unsigned NOT NULL,
  `open_time` time DEFAULT NULL,
  `close_time` time DEFAULT NULL,
  `weekday` tinyint(3) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `id_UNIQUE` (`site_id`,`weekday`),
  CONSTRAINT `site_testing_daily_schedule_ibfk_1` FOREIGN KEY (`site_id`) REFERENCES `site` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=22 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Records the normal operating hours of a site. -- Feature depricated';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_testing_daily_schedule_bi`
BEFORE INSERT ON `mot2`.`site_testing_daily_schedule`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_testing_daily_schedule_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_testing_daily_schedule_bu`
BEFORE UPDATE ON `mot2`.`site_testing_daily_schedule`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_testing_daily_schedule_bu Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_testing_daily_schedule_au`
AFTER UPDATE ON `mot2`.`site_testing_daily_schedule`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_testing_daily_schedule_au Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`site_testing_daily_schedule_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`site_id`
        ,`open_time`
        ,`close_time`
        ,`weekday`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`site_id`
        ,OLD.`open_time`
        ,OLD.`close_time`
        ,OLD.`weekday`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_testing_daily_schedule_bd`
BEFORE DELETE ON `mot2`.`site_testing_daily_schedule`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_testing_daily_schedule_bd Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`site_testing_daily_schedule_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`site_id`
        ,`open_time`
        ,`close_time`
        ,`weekday`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`site_id`
        ,OLD.`open_time`
        ,OLD.`close_time`
        ,OLD.`weekday`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `site_testing_daily_schedule_hist`
--

DROP TABLE IF EXISTS `site_testing_daily_schedule_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `site_testing_daily_schedule_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `site_id` int(10) unsigned DEFAULT NULL,
  `open_time` time DEFAULT NULL,
  `close_time` time DEFAULT NULL,
  `weekday` tinyint(3) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_site_testing_daily_schedule_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `site_type`
--

DROP TABLE IF EXISTS `site_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `site_type` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `name` varchar(50) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation of a type of site';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_site_type_bi`
BEFORE INSERT ON `mot2`.`site_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_site_type_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `special_notice`
--

DROP TABLE IF EXISTS `special_notice`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `special_notice` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(100) NOT NULL,
  `person_id` int(10) unsigned DEFAULT NULL,
  `special_notice_content_id` int(10) unsigned NOT NULL,
  `is_acknowledged` tinyint(4) unsigned NOT NULL DEFAULT '0',
  `is_deleted` tinyint(4) unsigned NOT NULL DEFAULT '0',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`,`special_notice_content_id`),
  KEY `fk_map_person_special_notice_special_notice` (`special_notice_content_id`),
  CONSTRAINT `fk_map_person_special_notice_special_notice` FOREIGN KEY (`special_notice_content_id`) REFERENCES `special_notice_content` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_map_person_special_notice_user` FOREIGN KEY (`username`) REFERENCES `person` (`username`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=2151 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Acknowledgement status of each special notice for each person in the system';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_special_notice_bi`
BEFORE INSERT ON `mot2`.`special_notice`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_special_notice_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_special_notice_bu`
BEFORE UPDATE ON `mot2`.`special_notice`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_special_notice_bu Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_special_notice_au`
AFTER UPDATE ON `mot2`.`special_notice`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_special_notice_au Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`special_notice_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`username`
        ,`person_id`
        ,`special_notice_content_id`
        ,`is_acknowledged`
        ,`is_deleted`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`username`
        ,OLD.`person_id`
        ,OLD.`special_notice_content_id`
        ,OLD.`is_acknowledged`
        ,OLD.`is_deleted`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_special_notice_bd`
BEFORE DELETE ON `mot2`.`special_notice`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_special_notice_bd Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`special_notice_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`username`
        ,`person_id`
        ,`special_notice_content_id`
        ,`is_acknowledged`
        ,`is_deleted`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`username`
        ,OLD.`person_id`
        ,OLD.`special_notice_content_id`
        ,OLD.`is_acknowledged`
        ,OLD.`is_deleted`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `special_notice_audience`
--

DROP TABLE IF EXISTS `special_notice_audience`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `special_notice_audience` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `special_notice_content_id` int(10) unsigned NOT NULL,
  `special_notice_audience_type_id` smallint(5) unsigned NOT NULL,
  `vehicle_class_id` smallint(5) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `special_notice_content_id` (`special_notice_content_id`,`special_notice_audience_type_id`,`vehicle_class_id`),
  KEY `special_notice_audience_ibfk_2` (`special_notice_audience_type_id`),
  KEY `special_notice_audience_ibfk_3` (`vehicle_class_id`),
  CONSTRAINT `special_notice_audience_ibfk_1` FOREIGN KEY (`special_notice_content_id`) REFERENCES `special_notice_content` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `special_notice_audience_ibfk_2` FOREIGN KEY (`special_notice_audience_type_id`) REFERENCES `special_notice_audience_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `special_notice_audience_ibfk_3` FOREIGN KEY (`vehicle_class_id`) REFERENCES `vehicle_class` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_special_notice_audience_bi`
BEFORE INSERT ON `mot2`.`special_notice_audience`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_special_notice_audience_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `special_notice_audience_type`
--

DROP TABLE IF EXISTS `special_notice_audience_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `special_notice_audience_type` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `code` varchar(5) NOT NULL,
  `name` varchar(50) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_special_notice_audience_type_bi`
BEFORE INSERT ON `mot2`.`special_notice_audience_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_special_notice_audience_type_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `special_notice_content`
--

DROP TABLE IF EXISTS `special_notice_content`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `special_notice_content` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `title` varchar(100) NOT NULL,
  `issue_number` int(10) unsigned DEFAULT NULL,
  `issue_year` int(10) unsigned DEFAULT NULL,
  `issue_date` datetime(6) NOT NULL,
  `expiry_date` datetime(6) NOT NULL,
  `internal_publish_date` datetime(6) NOT NULL COMMENT 'DVSA broadcast date',
  `external_publish_date` datetime(6) NOT NULL COMMENT 'VTS broadcast date',
  `notice_text` text NOT NULL,
  `acknowledge_within` smallint(5) unsigned DEFAULT NULL COMMENT 'NULL for messages that dont require acknowledgement',
  `is_published` tinyint(4) unsigned NOT NULL DEFAULT '0',
  `is_deleted` tinyint(4) unsigned NOT NULL DEFAULT '0',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `issue_number` (`issue_number`,`issue_year`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Representation of special notices';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_special_notice_content_bi`
BEFORE INSERT ON `mot2`.`special_notice_content`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_special_notice_content_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_special_notice_content_bu`
BEFORE UPDATE ON `mot2`.`special_notice_content`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_special_notice_content_bu Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_special_notice_content_au`
AFTER UPDATE ON `mot2`.`special_notice_content`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_special_notice_content_au Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`special_notice_content_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`title`
        ,`issue_number`
        ,`issue_year`
        ,`issue_date`
        ,`expiry_date`
        ,`internal_publish_date`
        ,`external_publish_date`
        ,`notice_text`
        ,`acknowledge_within`
        ,`is_published`
        ,`is_deleted`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`title`
        ,OLD.`issue_number`
        ,OLD.`issue_year`
        ,OLD.`issue_date`
        ,OLD.`expiry_date`
        ,OLD.`internal_publish_date`
        ,OLD.`external_publish_date`
        ,OLD.`notice_text`
        ,OLD.`acknowledge_within`
        ,OLD.`is_published`
        ,OLD.`is_deleted`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_special_notice_content_bd`
BEFORE DELETE ON `mot2`.`special_notice_content`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_special_notice_content_bd Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`special_notice_content_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`title`
        ,`issue_number`
        ,`issue_year`
        ,`issue_date`
        ,`expiry_date`
        ,`internal_publish_date`
        ,`external_publish_date`
        ,`notice_text`
        ,`acknowledge_within`
        ,`is_published`
        ,`is_deleted`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`title`
        ,OLD.`issue_number`
        ,OLD.`issue_year`
        ,OLD.`issue_date`
        ,OLD.`expiry_date`
        ,OLD.`internal_publish_date`
        ,OLD.`external_publish_date`
        ,OLD.`notice_text`
        ,OLD.`acknowledge_within`
        ,OLD.`is_published`
        ,OLD.`is_deleted`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `special_notice_content_hist`
--

DROP TABLE IF EXISTS `special_notice_content_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `special_notice_content_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `title` varchar(100) DEFAULT NULL,
  `issue_number` int(10) unsigned DEFAULT NULL,
  `issue_year` int(10) unsigned DEFAULT NULL,
  `issue_date` datetime(6) DEFAULT NULL,
  `expiry_date` datetime(6) DEFAULT NULL,
  `internal_publish_date` datetime(6) DEFAULT NULL,
  `external_publish_date` datetime(6) DEFAULT NULL,
  `notice_text` text,
  `acknowledge_within` smallint(5) unsigned DEFAULT NULL,
  `is_published` tinyint(4) unsigned DEFAULT NULL,
  `is_deleted` tinyint(4) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_special_notice_content_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:09';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `special_notice_content_role_map`
--

DROP TABLE IF EXISTS `special_notice_content_role_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `special_notice_content_role_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `special_notice_content_id` int(10) unsigned NOT NULL,
  `role_id` int(10) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `special_notice_content_id` (`special_notice_content_id`,`role_id`),
  KEY `fk_special_notice_content_role_map_role` (`role_id`),
  CONSTRAINT `fk_special_notice_content_role_map_role` FOREIGN KEY (`role_id`) REFERENCES `role` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_special_notice_content_role_map_special_notice` FOREIGN KEY (`special_notice_content_id`) REFERENCES `special_notice_content` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Maps special notices to audiences for special notices';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_special_notice_content_role_map_bi`
BEFORE INSERT ON `mot2`.`special_notice_content_role_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_special_notice_content_role_map_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_special_notice_content_role_map_bu`
BEFORE UPDATE ON `mot2`.`special_notice_content_role_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_special_notice_content_role_map_bu Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_special_notice_content_role_map_au`
AFTER UPDATE ON `mot2`.`special_notice_content_role_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_special_notice_content_role_map_au Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`special_notice_content_role_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`special_notice_content_id`
        ,`role_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`special_notice_content_id`
        ,OLD.`role_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_special_notice_content_role_map_bd`
BEFORE DELETE ON `mot2`.`special_notice_content_role_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_special_notice_content_role_map_bd Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`special_notice_content_role_map_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`special_notice_content_id`
        ,`role_id`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`special_notice_content_id`
        ,OLD.`role_id`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `special_notice_content_role_map_hist`
--

DROP TABLE IF EXISTS `special_notice_content_role_map_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `special_notice_content_role_map_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `special_notice_content_id` int(10) unsigned DEFAULT NULL,
  `role_id` int(10) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_special_notice_content_role_map_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:09';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `special_notice_hist`
--

DROP TABLE IF EXISTS `special_notice_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `special_notice_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `username` varchar(100) DEFAULT NULL,
  `person_id` int(10) unsigned DEFAULT NULL,
  `special_notice_content_id` int(10) unsigned DEFAULT NULL,
  `is_acknowledged` tinyint(4) unsigned DEFAULT NULL,
  `is_deleted` tinyint(4) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_special_notice_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:08';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `survey_result`
--

DROP TABLE IF EXISTS `survey_result`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `survey_result` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `satisfaction_rating` int(11) DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL DEFAULT '0',
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_survey_result_bi`
BEFORE INSERT ON `mot2`.`survey_result`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_survey_result_bi Generated on 2016-07-04 12:27:12. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `test_item_category`
--

DROP TABLE IF EXISTS `test_item_category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `test_item_category` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `parent_test_item_category_id` int(10) unsigned NOT NULL,
  `section_test_item_category_id` int(10) unsigned NOT NULL,
  `business_rule_id` int(10) unsigned DEFAULT NULL COMMENT 'Possible business rule for filtering categories',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_test_item_category_business_rule_id_business_rule_id` (`business_rule_id`),
  KEY `fk_test_item_category_parent_test_item_category_id` (`parent_test_item_category_id`),
  CONSTRAINT `fk_test_item_category_business_rule_id_business_rule_id` FOREIGN KEY (`business_rule_id`) REFERENCES `business_rule` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_test_item_category_parent_test_item_category_id` FOREIGN KEY (`parent_test_item_category_id`) REFERENCES `test_item_category` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=10155 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Groups RFRs hierarchically';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_test_item_category_bi`
BEFORE INSERT ON `mot2`.`test_item_category`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_test_item_category_bi Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `test_item_category_vehicle_class_map`
--

DROP TABLE IF EXISTS `test_item_category_vehicle_class_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `test_item_category_vehicle_class_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `test_item_category_id` int(10) unsigned NOT NULL,
  `vehicle_class_id` smallint(5) unsigned NOT NULL,
  `business_rule_id` int(10) unsigned DEFAULT NULL COMMENT 'Possible business rule for filtering categories',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_test_item_category_vehicle_class_map_business_rule_id` (`business_rule_id`),
  KEY `fk_test_item_category_vehicle_class_map_test_item_category_id` (`test_item_category_id`),
  KEY `fk_test_item_category_vehicle_class_map_vehicle_class_id` (`vehicle_class_id`),
  CONSTRAINT `fk_test_item_category_vehicle_class_map_business_rule_id` FOREIGN KEY (`business_rule_id`) REFERENCES `business_rule` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_test_item_category_vehicle_class_map_test_item_category_id` FOREIGN KEY (`test_item_category_id`) REFERENCES `test_item_category` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_test_item_category_vehicle_class_map_vehicle_class_id` FOREIGN KEY (`vehicle_class_id`) REFERENCES `vehicle_class` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=2133 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Maps the vehicle classes of each test item category';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_test_item_category_vehicle_class_map_bi`
BEFORE INSERT ON `mot2`.`test_item_category_vehicle_class_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_test_item_category_vehicle_class_map_bi Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `test_slot_transaction`
--

DROP TABLE IF EXISTS `test_slot_transaction`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `test_slot_transaction` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `slots` int(10) unsigned NOT NULL,
  `real_slots` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Number of slots after the initial value of slots have been adjusted or refunded',
  `slots_after` int(10) NOT NULL DEFAULT '0',
  `status_id` smallint(5) unsigned NOT NULL,
  `payment_id` int(10) unsigned NOT NULL,
  `state` varchar(43) NOT NULL,
  `sales_reference` varchar(55) NOT NULL COMMENT 'Sales invoice number',
  `unique_identifier` varchar(8) DEFAULT NULL COMMENT 'Last 8 char of invoice reference searched on',
  `organisation_id` int(10) unsigned NOT NULL,
  `completed_on` datetime(6) DEFAULT NULL,
  `created` datetime(6) NOT NULL,
  `created_by_username` varchar(100) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `test_slot_transaction_state_idx` (`state`),
  KEY `test_slot_transaction_sales_reference_payment_id_idx` (`sales_reference`,`payment_id`),
  KEY `test_slot_transaction_unique_identifier_payment_id_idx` (`unique_identifier`,`payment_id`),
  KEY `fk_test_slot_transaction_organisation_id` (`organisation_id`),
  KEY `fk_test_slot_transaction_payment` (`payment_id`),
  KEY `fk_test_slot_transaction_status` (`status_id`),
  CONSTRAINT `fk_test_slot_transaction_organisation_id` FOREIGN KEY (`organisation_id`) REFERENCES `organisation` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_test_slot_transaction_payment` FOREIGN KEY (`payment_id`) REFERENCES `payment` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_test_slot_transaction_status` FOREIGN KEY (`status_id`) REFERENCES `test_slot_transaction_status` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Records slot purchasing transactions - in progress and complete';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_test_slot_transaction_bi`
BEFORE INSERT ON `mot2`.`test_slot_transaction`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_test_slot_transaction_bi Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_test_slot_transaction_bu`
BEFORE UPDATE ON `mot2`.`test_slot_transaction`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_test_slot_transaction_bu Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_test_slot_transaction_au`
AFTER UPDATE ON `mot2`.`test_slot_transaction`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_test_slot_transaction_au Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`test_slot_transaction_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`slots`
        ,`real_slots`
        ,`slots_after`
        ,`status_id`
        ,`payment_id`
        ,`state`
        ,`sales_reference`
        ,`unique_identifier`
        ,`organisation_id`
        ,`completed_on`
        ,`created`
        ,`created_by_username`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`slots`
        ,OLD.`real_slots`
        ,OLD.`slots_after`
        ,OLD.`status_id`
        ,OLD.`payment_id`
        ,OLD.`state`
        ,OLD.`sales_reference`
        ,OLD.`unique_identifier`
        ,OLD.`organisation_id`
        ,OLD.`completed_on`
        ,OLD.`created`
        ,OLD.`created_by_username`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_test_slot_transaction_bd`
BEFORE DELETE ON `mot2`.`test_slot_transaction`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_test_slot_transaction_bd Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`test_slot_transaction_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`slots`
        ,`real_slots`
        ,`slots_after`
        ,`status_id`
        ,`payment_id`
        ,`state`
        ,`sales_reference`
        ,`unique_identifier`
        ,`organisation_id`
        ,`completed_on`
        ,`created`
        ,`created_by_username`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`slots`
        ,OLD.`real_slots`
        ,OLD.`slots_after`
        ,OLD.`status_id`
        ,OLD.`payment_id`
        ,OLD.`state`
        ,OLD.`sales_reference`
        ,OLD.`unique_identifier`
        ,OLD.`organisation_id`
        ,OLD.`completed_on`
        ,OLD.`created`
        ,OLD.`created_by_username`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `test_slot_transaction_amendment`
--

DROP TABLE IF EXISTS `test_slot_transaction_amendment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `test_slot_transaction_amendment` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `organisation_id` int(10) unsigned NOT NULL,
  `test_slot_transaction_id` int(10) unsigned DEFAULT NULL,
  `type_id` smallint(5) unsigned NOT NULL,
  `reason_id` smallint(5) unsigned NOT NULL,
  `slots` int(11) NOT NULL COMMENT 'Adjustment can be either positive or negative',
  `previous_receipt_reference` varchar(55) DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_test_slot_transaction_amendment_organisation_id` (`organisation_id`),
  KEY `fk_test_slot_transaction_amendment_reason_id` (`reason_id`),
  KEY `fk_test_slot_transaction_amendment_test_slot_transaction_id` (`test_slot_transaction_id`),
  KEY `fk_test_slot_transaction_amendment_type_id` (`type_id`),
  CONSTRAINT `fk_test_slot_transaction_amendment_organisation_id` FOREIGN KEY (`organisation_id`) REFERENCES `organisation` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_test_slot_transaction_amendment_reason_id` FOREIGN KEY (`reason_id`) REFERENCES `test_slot_transaction_amendment_reason` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_test_slot_transaction_amendment_test_slot_transaction_id` FOREIGN KEY (`test_slot_transaction_id`) REFERENCES `test_slot_transaction` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_test_slot_transaction_amendment_type_id` FOREIGN KEY (`type_id`) REFERENCES `test_slot_transaction_amendment_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Payment receipt reference before adjustment';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_test_slot_transaction_amendment_bi`
BEFORE INSERT ON `mot2`.`test_slot_transaction_amendment`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_test_slot_transaction_amendment_bi Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_test_slot_transaction_amendment_bu`
BEFORE UPDATE ON `mot2`.`test_slot_transaction_amendment`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_test_slot_transaction_amendment_bu Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_test_slot_transaction_amendment_au`
AFTER UPDATE ON `mot2`.`test_slot_transaction_amendment`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_test_slot_transaction_amendment_au Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`test_slot_transaction_amendment_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`organisation_id`
        ,`test_slot_transaction_id`
        ,`type_id`
        ,`reason_id`
        ,`slots`
        ,`previous_receipt_reference`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`organisation_id`
        ,OLD.`test_slot_transaction_id`
        ,OLD.`type_id`
        ,OLD.`reason_id`
        ,OLD.`slots`
        ,OLD.`previous_receipt_reference`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_test_slot_transaction_amendment_bd`
BEFORE DELETE ON `mot2`.`test_slot_transaction_amendment`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_test_slot_transaction_amendment_bd Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`test_slot_transaction_amendment_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`organisation_id`
        ,`test_slot_transaction_id`
        ,`type_id`
        ,`reason_id`
        ,`slots`
        ,`previous_receipt_reference`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`organisation_id`
        ,OLD.`test_slot_transaction_id`
        ,OLD.`type_id`
        ,OLD.`reason_id`
        ,OLD.`slots`
        ,OLD.`previous_receipt_reference`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `test_slot_transaction_amendment_hist`
--

DROP TABLE IF EXISTS `test_slot_transaction_amendment_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `test_slot_transaction_amendment_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `organisation_id` int(10) unsigned DEFAULT NULL,
  `test_slot_transaction_id` int(10) unsigned DEFAULT NULL,
  `type_id` smallint(5) unsigned DEFAULT NULL,
  `reason_id` smallint(5) unsigned DEFAULT NULL,
  `slots` int(11) DEFAULT NULL,
  `previous_receipt_reference` varchar(55) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_test_slot_transaction_amendment_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:09';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `test_slot_transaction_amendment_reason`
--

DROP TABLE IF EXISTS `test_slot_transaction_amendment_reason`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `test_slot_transaction_amendment_reason` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `description` varchar(75) NOT NULL DEFAULT '' COMMENT 'text of the amendment reason',
  `amendment_type_id` smallint(5) unsigned NOT NULL DEFAULT '1',
  `display_order` smallint(5) unsigned NOT NULL DEFAULT '1' COMMENT 'Order the amendment reason appears in a list',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_test_slot_transaction_amendment_reason_code` (`code`),
  KEY `fk_test_slot_transaction_amendment_reason_amendment_type_id` (`amendment_type_id`),
  CONSTRAINT `fk_test_slot_transaction_amendment_reason_amendment_type_id` FOREIGN KEY (`amendment_type_id`) REFERENCES `test_slot_transaction_amendment_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=46 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation of reasons of amendment.';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_test_slot_transaction_amendment_reason_bi`
BEFORE INSERT ON `mot2`.`test_slot_transaction_amendment_reason`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_test_slot_transaction_amendment_reason_bi Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_test_slot_transaction_amendment_reason_bu`
BEFORE UPDATE ON `mot2`.`test_slot_transaction_amendment_reason`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_test_slot_transaction_amendment_reason_bu Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_test_slot_transaction_amendment_reason_au`
AFTER UPDATE ON `mot2`.`test_slot_transaction_amendment_reason`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_test_slot_transaction_amendment_reason_au Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`test_slot_transaction_amendment_reason_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`code`
        ,`description`
        ,`amendment_type_id`
        ,`display_order`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`code`
        ,OLD.`description`
        ,OLD.`amendment_type_id`
        ,OLD.`display_order`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_test_slot_transaction_amendment_reason_bd`
BEFORE DELETE ON `mot2`.`test_slot_transaction_amendment_reason`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_test_slot_transaction_amendment_reason_bd Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`test_slot_transaction_amendment_reason_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`code`
        ,`description`
        ,`amendment_type_id`
        ,`display_order`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`code`
        ,OLD.`description`
        ,OLD.`amendment_type_id`
        ,OLD.`display_order`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `test_slot_transaction_amendment_reason_hist`
--

DROP TABLE IF EXISTS `test_slot_transaction_amendment_reason_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `test_slot_transaction_amendment_reason_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` smallint(5) unsigned DEFAULT NULL,
  `code` varchar(5) CHARACTER SET latin1 DEFAULT NULL,
  `description` varchar(75) DEFAULT NULL,
  `amendment_type_id` smallint(5) unsigned DEFAULT NULL,
  `display_order` smallint(5) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_test_slot_transaction_amendment_reason_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:09';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `test_slot_transaction_amendment_type`
--

DROP TABLE IF EXISTS `test_slot_transaction_amendment_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `test_slot_transaction_amendment_type` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `title` varchar(75) NOT NULL DEFAULT '' COMMENT 'Name of the amendment type',
  `is_active` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'Whether the amendment type is active',
  `display_order` smallint(5) unsigned NOT NULL DEFAULT '1' COMMENT 'Order the amendment type appears in a list',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_test_slot_transaction_amendment_type_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation of types of amendment. Not all amendment types are currently implemented';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_test_slot_transaction_amendment_type_bi`
BEFORE INSERT ON `mot2`.`test_slot_transaction_amendment_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_test_slot_transaction_amendment_type_bi Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_test_slot_transaction_amendment_type_bu`
BEFORE UPDATE ON `mot2`.`test_slot_transaction_amendment_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_test_slot_transaction_amendment_type_bu Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_test_slot_transaction_amendment_type_au`
AFTER UPDATE ON `mot2`.`test_slot_transaction_amendment_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_test_slot_transaction_amendment_type_au Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`test_slot_transaction_amendment_type_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`code`
        ,`title`
        ,`is_active`
        ,`display_order`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`code`
        ,OLD.`title`
        ,OLD.`is_active`
        ,OLD.`display_order`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_test_slot_transaction_amendment_type_bd`
BEFORE DELETE ON `mot2`.`test_slot_transaction_amendment_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_test_slot_transaction_amendment_type_bd Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`test_slot_transaction_amendment_type_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`code`
        ,`title`
        ,`is_active`
        ,`display_order`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`code`
        ,OLD.`title`
        ,OLD.`is_active`
        ,OLD.`display_order`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `test_slot_transaction_amendment_type_hist`
--

DROP TABLE IF EXISTS `test_slot_transaction_amendment_type_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `test_slot_transaction_amendment_type_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` smallint(5) unsigned DEFAULT NULL,
  `code` varchar(5) CHARACTER SET latin1 DEFAULT NULL,
  `title` varchar(75) DEFAULT NULL,
  `is_active` tinyint(1) DEFAULT NULL,
  `display_order` smallint(5) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_test_slot_transaction_amendment_type_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:09';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `test_slot_transaction_hist`
--

DROP TABLE IF EXISTS `test_slot_transaction_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `test_slot_transaction_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `slots` int(10) unsigned DEFAULT NULL,
  `real_slots` int(10) unsigned DEFAULT NULL,
  `slots_after` int(10) DEFAULT NULL,
  `status_id` smallint(5) unsigned DEFAULT NULL,
  `payment_id` int(10) unsigned DEFAULT NULL,
  `state` varchar(43) DEFAULT NULL,
  `sales_reference` varchar(55) DEFAULT NULL,
  `unique_identifier` varchar(8) DEFAULT NULL,
  `organisation_id` int(10) unsigned DEFAULT NULL,
  `completed_on` datetime(6) DEFAULT NULL,
  `created` datetime(6) DEFAULT NULL,
  `created_by_username` varchar(100) DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_test_slot_transaction_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:09';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `test_slot_transaction_status`
--

DROP TABLE IF EXISTS `test_slot_transaction_status`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `test_slot_transaction_status` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation of the status of a transaction during the slot purchasing process';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_test_slot_transaction_status_bi`
BEFORE INSERT ON `mot2`.`test_slot_transaction_status`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_test_slot_transaction_status_bi Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `ti_category_language_content_map`
--

DROP TABLE IF EXISTS `ti_category_language_content_map`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ti_category_language_content_map` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `test_item_category_id` int(10) unsigned NOT NULL,
  `language_lookup_id` smallint(5) unsigned NOT NULL,
  `name` varchar(100) NOT NULL,
  `description` varchar(100) DEFAULT NULL COMMENT 'Full version of name used in printed documents',
  `display_order` smallint(5) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_ti_category_language_content_map_display_order_language` (`display_order`,`language_lookup_id`),
  KEY `fk_ti_category_language_content_map_language_lookup_id` (`language_lookup_id`),
  KEY `fk_ti_category_language_content_map_test_item_category_id` (`test_item_category_id`),
  CONSTRAINT `fk_ti_category_language_content_map_language_lookup_id` FOREIGN KEY (`language_lookup_id`) REFERENCES `language_type` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_ti_category_language_content_map_test_item_category_id` FOREIGN KEY (`test_item_category_id`) REFERENCES `test_item_category` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=2051 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='How test items are displayed in different languages and presented';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_ti_category_language_content_map_bi`
BEFORE INSERT ON `mot2`.`ti_category_language_content_map`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_ti_category_language_content_map_bi Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `title`
--

DROP TABLE IF EXISTS `title`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `title` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_title_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation for the Person table';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_title_bi`
BEFORE INSERT ON `mot2`.`title`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_title_bi Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `token_lookup`
--

DROP TABLE IF EXISTS `token_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `token_lookup` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_token_lookup_bi`
BEFORE INSERT ON `mot2`.`token_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_token_lookup_bi Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `transition_status`
--

DROP TABLE IF EXISTS `transition_status`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `transition_status` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(30) NOT NULL,
  `code` varchar(5) NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_transition_status_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation of the current transfer status of an organisation from MOT1 to MOT2';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_transition_status_bi`
BEFORE INSERT ON `mot2`.`transition_status`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_transition_status_bi Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `transmission_type`
--

DROP TABLE IF EXISTS `transmission_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `transmission_type` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) NOT NULL,
  `display_order` smallint(5) unsigned NOT NULL DEFAULT '1',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_transmission_type_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation of a vehicles transmission';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_transmission_type_bi`
BEFORE INSERT ON `mot2`.`transmission_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_transmission_type_bi Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `url_type`
--

DROP TABLE IF EXISTS `url_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `url_type` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) DEFAULT NULL,
  `max_count` smallint(6) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_url_type_code` (`code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Types of urls that can be used in messages';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_url_type_bi`
BEFORE INSERT ON `mot2`.`url_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_url_type_bi Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `vehicle`
--

DROP TABLE IF EXISTS `vehicle`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `vehicle` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `registration` varchar(20) CHARACTER SET latin1 DEFAULT NULL,
  `registration_collapsed` varchar(20) CHARACTER SET latin1 DEFAULT NULL,
  `vin` varchar(30) CHARACTER SET latin1 DEFAULT NULL,
  `vin_collapsed` varchar(30) CHARACTER SET latin1 DEFAULT NULL,
  `model_detail_id` int(10) unsigned DEFAULT NULL,
  `year` year(4) DEFAULT NULL,
  `manufacture_date` date DEFAULT NULL,
  `first_registration_date` date DEFAULT NULL,
  `first_used_date` date DEFAULT NULL,
  `primary_colour_id` smallint(5) unsigned NOT NULL,
  `secondary_colour_id` smallint(5) unsigned DEFAULT NULL,
  `weight` int(10) unsigned DEFAULT NULL COMMENT 'in Kg',
  `weight_source_id` smallint(5) unsigned DEFAULT NULL,
  `country_of_registration_id` smallint(5) unsigned NOT NULL,
  `engine_number` varchar(30) CHARACTER SET latin1 DEFAULT NULL,
  `chassis_number` varchar(30) CHARACTER SET latin1 DEFAULT NULL,
  `is_new_at_first_reg` tinyint(4) unsigned NOT NULL DEFAULT '0',
  `dvla_vehicle_id` int(11) DEFAULT NULL COMMENT 'Unique DVLA reference',
  `is_damaged` tinyint(4) NOT NULL DEFAULT '0',
  `is_destroyed` tinyint(4) NOT NULL DEFAULT '0' COMMENT 'Destruction marker',
  `is_incognito` tinyint(4) unsigned NOT NULL DEFAULT '0',
  `created_by` int(10) unsigned NOT NULL DEFAULT '0',
  `created_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned NOT NULL DEFAULT '0',
  `last_updated_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_vehicle_colour_id` (`primary_colour_id`),
  KEY `fk_vehicle_country_of_registration_id` (`country_of_registration_id`),
  KEY `fk_vehicle_model_detail_id` (`model_detail_id`),
  KEY `fk_vehicle_secondary_colour_id` (`secondary_colour_id`),
  KEY `fk_weight_source_id` (`weight_source_id`),
  KEY `vehicle_vin_registration_idx` (`vin`,`registration`),
  KEY `vehicle_registration_idx` (`registration`),
  KEY `vehicle_dvla_vehicle_id_idx` (`dvla_vehicle_id`),
  KEY `vehicle_registration_collapsed_idx` (`registration_collapsed`),
  KEY `vehicle_vin_collapsed_idx` (`vin_collapsed`),
  KEY `vehicle_created_on_dvla_vehicle_id_idx` (`created_on`,`dvla_vehicle_id`),
  CONSTRAINT `fk_vehicle_colour_id` FOREIGN KEY (`primary_colour_id`) REFERENCES `colour_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_vehicle_country_of_registration_id` FOREIGN KEY (`country_of_registration_id`) REFERENCES `country_of_registration_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_vehicle_model_detail_id` FOREIGN KEY (`model_detail_id`) REFERENCES `model_detail` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_vehicle_secondary_colour_id` FOREIGN KEY (`secondary_colour_id`) REFERENCES `colour_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_weight_source_id` FOREIGN KEY (`weight_source_id`) REFERENCES `weight_source_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=2033 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_vehicle_bi`
BEFORE INSERT ON `mot2`.`vehicle`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_vehicle_bi Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
    SET NEW.`registration_collapsed` = f_collapse(NEW.`registration`);
    SET NEW.`vin_collapsed` = f_collapse(NEW.`vin`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_vehicle_bu`
BEFORE UPDATE ON `mot2`.`vehicle`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_vehicle_bu Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
    SET NEW.`registration_collapsed` = f_collapse(NEW.`registration`);
    SET NEW.`vin_collapsed` = f_collapse(NEW.`vin`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_vehicle_au`
AFTER UPDATE ON `mot2`.`vehicle`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_vehicle_au Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`vehicle_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`registration`
        ,`registration_collapsed`
        ,`vin`
        ,`vin_collapsed`
        ,`model_detail_id`
        ,`year`
        ,`manufacture_date`
        ,`first_registration_date`
        ,`first_used_date`
        ,`primary_colour_id`
        ,`secondary_colour_id`
        ,`weight`
        ,`weight_source_id`
        ,`country_of_registration_id`
        ,`engine_number`
        ,`chassis_number`
        ,`is_new_at_first_reg`
        ,`dvla_vehicle_id`
        ,`is_damaged`
        ,`is_destroyed`
        ,`is_incognito`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`registration`
        ,OLD.`registration_collapsed`
        ,OLD.`vin`
        ,OLD.`vin_collapsed`
        ,OLD.`model_detail_id`
        ,OLD.`year`
        ,OLD.`manufacture_date`
        ,OLD.`first_registration_date`
        ,OLD.`first_used_date`
        ,OLD.`primary_colour_id`
        ,OLD.`secondary_colour_id`
        ,OLD.`weight`
        ,OLD.`weight_source_id`
        ,OLD.`country_of_registration_id`
        ,OLD.`engine_number`
        ,OLD.`chassis_number`
        ,OLD.`is_new_at_first_reg`
        ,OLD.`dvla_vehicle_id`
        ,OLD.`is_damaged`
        ,OLD.`is_destroyed`
        ,OLD.`is_incognito`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_vehicle_bd`
BEFORE DELETE ON `mot2`.`vehicle`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_vehicle_bd Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`vehicle_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`registration`
        ,`registration_collapsed`
        ,`vin`
        ,`vin_collapsed`
        ,`model_detail_id`
        ,`year`
        ,`manufacture_date`
        ,`first_registration_date`
        ,`first_used_date`
        ,`primary_colour_id`
        ,`secondary_colour_id`
        ,`weight`
        ,`weight_source_id`
        ,`country_of_registration_id`
        ,`engine_number`
        ,`chassis_number`
        ,`is_new_at_first_reg`
        ,`dvla_vehicle_id`
        ,`is_damaged`
        ,`is_destroyed`
        ,`is_incognito`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`registration`
        ,OLD.`registration_collapsed`
        ,OLD.`vin`
        ,OLD.`vin_collapsed`
        ,OLD.`model_detail_id`
        ,OLD.`year`
        ,OLD.`manufacture_date`
        ,OLD.`first_registration_date`
        ,OLD.`first_used_date`
        ,OLD.`primary_colour_id`
        ,OLD.`secondary_colour_id`
        ,OLD.`weight`
        ,OLD.`weight_source_id`
        ,OLD.`country_of_registration_id`
        ,OLD.`engine_number`
        ,OLD.`chassis_number`
        ,OLD.`is_new_at_first_reg`
        ,OLD.`dvla_vehicle_id`
        ,OLD.`is_damaged`
        ,OLD.`is_destroyed`
        ,OLD.`is_incognito`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `vehicle_class`
--

DROP TABLE IF EXISTS `vehicle_class`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `vehicle_class` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `vehicle_class_group_id` smallint(5) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_vehicle_class_code` (`code`),
  KEY `fx_vehicle_class_vehicle_class_group_id` (`vehicle_class_group_id`),
  CONSTRAINT `fx_vehicle_class_vehicle_class_group_id` FOREIGN KEY (`vehicle_class_group_id`) REFERENCES `vehicle_class_group` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Records of the various vehicle classes';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_vehicle_class_bi`
BEFORE INSERT ON `mot2`.`vehicle_class`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_vehicle_class_bi Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `vehicle_class_group`
--

DROP TABLE IF EXISTS `vehicle_class_group`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `vehicle_class_group` (
  `id` smallint(5) unsigned NOT NULL,
  `name` varchar(50) NOT NULL,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_vehicle_class_group_code` (`code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_vehicle_class_group_bi`
BEFORE INSERT ON `mot2`.`vehicle_class_group`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_vehicle_class_group_bi Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Temporary table structure for view `vehicle_detail_vw`
--

DROP TABLE IF EXISTS `vehicle_detail_vw`;
/*!50001 DROP VIEW IF EXISTS `vehicle_detail_vw`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `vehicle_detail_vw` (
  `vehicle_id_` tinyint NOT NULL,
  `registration` tinyint NOT NULL,
  `vin` tinyint NOT NULL,
  `make_id_` tinyint NOT NULL,
  `make_name_` tinyint NOT NULL,
  `make_code_` tinyint NOT NULL,
  `model_id_` tinyint NOT NULL,
  `model_name_` tinyint NOT NULL,
  `model_code_` tinyint NOT NULL,
  `model_detail_id_` tinyint NOT NULL
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Table structure for table `vehicle_hist`
--

DROP TABLE IF EXISTS `vehicle_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `vehicle_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(10) unsigned DEFAULT NULL,
  `registration` varchar(20) CHARACTER SET latin1 DEFAULT NULL,
  `registration_collapsed` varchar(20) CHARACTER SET latin1 DEFAULT NULL,
  `vin` varchar(30) CHARACTER SET latin1 DEFAULT NULL,
  `vin_collapsed` varchar(30) CHARACTER SET latin1 DEFAULT NULL,
  `model_detail_id` int(10) unsigned DEFAULT NULL,
  `year` year(4) DEFAULT NULL,
  `manufacture_date` date DEFAULT NULL,
  `first_registration_date` date DEFAULT NULL,
  `first_used_date` date DEFAULT NULL,
  `primary_colour_id` smallint(5) unsigned DEFAULT NULL,
  `secondary_colour_id` smallint(5) unsigned DEFAULT NULL,
  `weight` int(10) unsigned DEFAULT NULL,
  `weight_source_id` smallint(5) unsigned DEFAULT NULL,
  `country_of_registration_id` smallint(5) unsigned DEFAULT NULL,
  `engine_number` varchar(30) CHARACTER SET latin1 DEFAULT NULL,
  `chassis_number` varchar(30) CHARACTER SET latin1 DEFAULT NULL,
  `is_new_at_first_reg` tinyint(4) unsigned DEFAULT NULL,
  `dvla_vehicle_id` int(11) DEFAULT NULL,
  `is_damaged` tinyint(4) DEFAULT NULL,
  `is_destroyed` tinyint(4) DEFAULT NULL,
  `is_incognito` tinyint(4) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` timestamp(6) NULL DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` timestamp(6) NULL DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_vehicle_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:09';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `vehicle_v5c`
--

DROP TABLE IF EXISTS `vehicle_v5c`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `vehicle_v5c` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `vehicle_id` int(10) unsigned NOT NULL,
  `v5c_ref` varchar(11) NOT NULL,
  `first_seen` date NOT NULL,
  `last_seen` date DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_vehicle_v5c_vehicle` (`vehicle_id`),
  CONSTRAINT `fk_vehicle_v5c_vehicle` FOREIGN KEY (`vehicle_id`) REFERENCES `vehicle` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=97 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='History of a vehicles V5C data';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_vehicle_v5c_bi`
BEFORE INSERT ON `mot2`.`vehicle_v5c`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_vehicle_v5c_bi Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_vehicle_v5c_bu`
BEFORE UPDATE ON `mot2`.`vehicle_v5c`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_vehicle_v5c_bu Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = OLD.`version` + 1;
    SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);
    SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_vehicle_v5c_au`
AFTER UPDATE ON `mot2`.`vehicle_v5c`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_vehicle_v5c_au Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`vehicle_v5c_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`vehicle_id`
        ,`v5c_ref`
        ,`first_seen`
        ,`last_seen`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (NEW.`last_updated_on`
        ,NEW.`last_updated_by`
        ,OLD.`id`
        ,OLD.`vehicle_id`
        ,OLD.`v5c_ref`
        ,OLD.`first_seen`
        ,OLD.`last_seen`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_vehicle_v5c_bd`
BEFORE DELETE ON `mot2`.`vehicle_v5c`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_vehicle_v5c_bd Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    INSERT INTO `mot2`.`vehicle_v5c_hist`
        (`expired_on`
        ,`expired_by`
        ,`id`
        ,`vehicle_id`
        ,`v5c_ref`
        ,`first_seen`
        ,`last_seen`
        ,`created_by`
        ,`created_on`
        ,`last_updated_by`
        ,`last_updated_on`
        ,`version`)
        VALUES
        (CURRENT_TIMESTAMP(6)
        ,COALESCE(@app_user_id, 0)
        ,OLD.`id`
        ,OLD.`vehicle_id`
        ,OLD.`v5c_ref`
        ,OLD.`first_seen`
        ,OLD.`last_seen`
        ,OLD.`created_by`
        ,OLD.`created_on`
        ,OLD.`last_updated_by`
        ,OLD.`last_updated_on`
        ,OLD.`version`);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `vehicle_v5c_hist`
--

DROP TABLE IF EXISTS `vehicle_v5c_hist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `vehicle_v5c_hist` (
  `hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `expired_by` int(10) unsigned DEFAULT NULL,
  `id` int(11) DEFAULT NULL,
  `vehicle_id` int(10) unsigned DEFAULT NULL,
  `v5c_ref` varchar(11) DEFAULT NULL,
  `first_seen` date DEFAULT NULL,
  `last_seen` date DEFAULT NULL,
  `created_by` int(10) unsigned DEFAULT NULL,
  `created_on` datetime(6) DEFAULT NULL,
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`hist_id`),
  KEY `uq_vehicle_v5c_hist` (`id`,`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='DDL GENERATED 2016-07-04 12:27:09';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `visit`
--

DROP TABLE IF EXISTS `visit`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `visit` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `site_id` int(10) unsigned NOT NULL,
  `visit_date` date NOT NULL,
  `visit_reason_id` smallint(5) unsigned NOT NULL,
  `visit_outcome_id` smallint(5) unsigned NOT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `fk_esvr_site_id` (`site_id`),
  KEY `fk_esvr_visit_outcome_id` (`visit_outcome_id`),
  KEY `fk_esvr_visit_reason_id` (`visit_reason_id`),
  CONSTRAINT `fk_esvr_site_id` FOREIGN KEY (`site_id`) REFERENCES `site` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_esvr_visit_outcome_id` FOREIGN KEY (`visit_outcome_id`) REFERENCES `enforcement_visit_outcome_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_esvr_visit_reason_id` FOREIGN KEY (`visit_reason_id`) REFERENCES `visit_reason_lookup` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Representation of a visit made by DVSA to a site.';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_visit_bi`
BEFORE INSERT ON `mot2`.`visit`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_visit_bi Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `visit_reason_lookup`
--

DROP TABLE IF EXISTS `visit_reason_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `visit_reason_lookup` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `reason` varchar(80) NOT NULL,
  `display_order` smallint(5) unsigned NOT NULL DEFAULT '1',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation of the reason for a DVSA visit to a site';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_visit_reason_lookup_bi`
BEFORE INSERT ON `mot2`.`visit_reason_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_visit_reason_lookup_bi Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `weight_source_lookup`
--

DROP TABLE IF EXISTS `weight_source_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `weight_source_lookup` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `code` varchar(5) CHARACTER SET latin1 NOT NULL,
  `name` varchar(50) NOT NULL,
  `description` varchar(250) NOT NULL,
  `display_order` smallint(5) unsigned DEFAULT NULL,
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_weight_source_lookup_name` (`name`),
  UNIQUE KEY `uk_weight_source_lookup_code` (`code`),
  UNIQUE KEY `uk_weight_source_lookup_display_order` (`display_order`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Normalisation of types of weight used for brake test calculations';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_weight_source_lookup_bi`
BEFORE INSERT ON `mot2`.`weight_source_lookup`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_weight_source_lookup_bi Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `wheelplan_type`
--

DROP TABLE IF EXISTS `wheelplan_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wheelplan_type` (
  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `code` varchar(5) NOT NULL,
  `name` varchar(50) NOT NULL,
  `description` varchar(255) NOT NULL,
  `display_order` smallint(5) unsigned NOT NULL DEFAULT '1',
  `created_by` int(10) unsigned NOT NULL,
  `created_on` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `last_updated_by` int(10) unsigned DEFAULT NULL,
  `last_updated_on` datetime(6) DEFAULT NULL,
  `version` int(10) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_wheelplan_type_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPRESSED COMMENT='Will be removed - normalisation of unused data';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 */ /*!50003 TRIGGER `mot2`.`tr_wheelplan_type_bi`
BEFORE INSERT ON `mot2`.`wheelplan_type`
FOR EACH ROW
MainBlock: BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT 'tr_wheelplan_type_bi Generated on 2016-07-04 12:27:13. $Id$';
    
    IF `mot2`.`is_mot_trigger_disabled`()
    THEN
        LEAVE MainBlock;
    END IF;
    
    IF (@app_user_id IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Session variable @app_user_id cannot be NULL if triggers are enabled.';
    END IF;
    
    SET NEW.`version` = 1;
    SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);
    SET NEW.`last_updated_by` = NEW.`created_by`;
    SET NEW.`created_on` = CURRENT_TIMESTAMP;
    SET NEW.`last_updated_on` = NEW.`created_on`;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Dumping routines for database 'mot2'
--
/*!50003 DROP FUNCTION IF EXISTS `f_collapse` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  FUNCTION `f_collapse`( p_str VARCHAR(255)) RETURNS varchar(255) CHARSET latin1
    NO SQL
    DETERMINISTIC
BEGIN
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';
    
    DECLARE v_str VARCHAR(255) DEFAULT '';
    SET v_str := REPLACE(f_collapse_base(p_str), '*', '');
    RETURN v_str;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `f_collapse_base` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  FUNCTION `f_collapse_base`(p_str VARCHAR(255)) RETURNS varchar(255) CHARSET latin1
    NO SQL
    DETERMINISTIC
BEGIN
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';
    
    DECLARE v_str VARCHAR(255) DEFAULT '';
    SET v_str :=
        REPLACE(
            REPLACE(
                REPLACE(
                    REPLACE(
                        REPLACE(
                            REPLACE(
                                REPLACE(
                                    REPLACE(
                                        REPLACE(
                                            REPLACE(
                                                REPLACE(
                                                    REPLACE(
                                                        REPLACE(
                                                            REPLACE(UPPER(p_str), 'O','0')
                                                        , 'I','1')
                                                    , 'Z','2')
                                                , 'E','3')
                                            , 'A','4')
                                        , 'S','5')
                                    , 'G','6')
                                , 'T','7')
                            , 'L','7')
                        , 'B','8')
                    , '-','')
                , '/','')
            , '.','')
        , ' ','');
    RETURN v_str;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `is_mot_trigger_disabled` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  FUNCTION `is_mot_trigger_disabled`() RETURNS tinyint(1)
    NO SQL
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'is_mot_trigger_disabled';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(@is_mot_trigger_disabled, c_null)));
        RESIGNAL;
    END;

    IF (@is_mot_trigger_disabled IS NULL)
    THEN
        CALL `mot2`.`set_mot_trigger_disabled`(FALSE); 
    END IF;

    RETURN @is_mot_trigger_disabled;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gen_transition_fin_report` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `gen_transition_fin_report`()
BEGIN
  SELECT concat(IFNULL(o.name,''), ',',
         IFNULL(afa.ae_ref,''), ',',
         IFNULL(tar.description,''), ',',
         IFNULL(ta.slots,''), ',',
         date_format(ta.created_on, '%Y-%m-%d %T'))
    FROM test_slot_transaction_amendment ta
   INNER JOIN organisation o ON o.id = ta.organisation_id
   INNER JOIN auth_for_ae afa ON afa.organisation_id = o.id
   INNER JOIN test_slot_transaction_amendment_reason tar ON tar.id = ta.reason_id
   WHERE ta.type_id = 1
   GROUP BY ta.id, o.name, afa.ae_ref, tar.description, ta.slots, ta.created_on
   ORDER BY ta.created_on;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gen_transition_slot_balances_fin_report` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `gen_transition_slot_balances_fin_report`()
    READS SQL DATA
    SQL SECURITY INVOKER
BEGIN
    SELECT
        concat(IFNULL(a.ae_ref,'NULL'), ',',
        IFNULL(o.name,'NULL'), ',',
        IFNULL(o.mot1_total_slots_merged,'NULL'), ',',
        IFNULL(slots_purchased_sum,'NULL'), ',',
        IFNULL(slots_used_count,'NULL'))
    FROM
        organisation o
    INNER JOIN
        auth_for_ae a
        ON a.organisation_id = o.id
       AND a.status_id NOT IN (0,1) 
    LEFT OUTER JOIN
        (SELECT
            t.organisation_id, SUM(t.slots) slots_purchased_sum
        FROM
            test_slot_transaction t
        WHERE
            t.status_id = 2
                AND t.completed_on BETWEEN DATE(DATE_ADD(NOW(), INTERVAL -1 DAY)) AND DATE(NOW())
        GROUP BY 1) slots_purchased ON slots_purchased.organisation_id = o.id
    LEFT OUTER JOIN
        (SELECT
            s.organisation_id, COUNT(mt.id) slots_used_count
        FROM
            mot_test mt
        INNER JOIN site s ON mt.site_id = s.id
        WHERE
            mt.mot_test_type_id IN (1 , 2, 3, 9)
                AND mt.status_id = 6
                AND mt.completed_date BETWEEN DATE(DATE_ADD(NOW(), INTERVAL -1 DAY)) AND DATE(NOW())
        GROUP BY 1) slots_used ON slots_used.organisation_id = o.id
    ORDER BY a.ae_ref , o.name , o.mot1_total_slots_merged , slots_purchased_sum , slots_used_count;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `set_mot_trigger_disabled` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `set_mot_trigger_disabled`(p_is_mot_trigger_disabled BOOLEAN)
    NO SQL
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'set_mot_trigger_disabled';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_is_mot_trigger_disabled, c_null)));
        RESIGNAL;
    END;

    IF (p_is_mot_trigger_disabled IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'MOT Trigger Disable setting cannot be NULL.';
    END IF;

    SET @is_mot_trigger_disabled = p_is_mot_trigger_disabled;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `slot_balance_finance_report` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `slot_balance_finance_report`(IN i_ae_ref VARCHAR(12), IN i_report_start_date DATETIME(6), IN i_report_end_date DATETIME(6), IN i_active_days SMALLINT)
    READS SQL DATA
    SQL SECURITY INVOKER
BEGIN

    DECLARE i_created_start_date DATETIME(6);

    SET i_created_start_date = DATE_SUB(i_report_start_date, INTERVAL i_active_days  DAY);

    SELECT CONCAT( 
           ae_ref, ',',                        
           REPLACE(name,',',''), ',',      
           IFNULL(ae_status,''), ',',      
           DATE(i_report_start_date), ',',
           DATE(i_report_end_date), ',',
           IFNULL(opening_slots,0), ',',   
           IFNULL(sum_slots_used,0), ',',  
           IFNULL(slots_purchased,0), ',', 
           IFNULL(slot_amendments,0), ',', 
           IFNULL(end_slots,0),',',        
           IFNULL(opening_slots,0) 
               - IFNULL(sum_slots_used,0) 
               + IFNULL(slots_purchased,0) 
               + IFNULL(slot_amendments,0),',',  
          (IFNULL(opening_slots,0) 
               - IFNULL(sum_slots_used,0) 
               + IFNULL(slots_purchased,0) 
               + IFNULL(slot_amendments,0)) 
               - IFNULL(end_slots,0), ',',      
            ae_ref, ',',                        
            site_change_count, ',',             
            ifnull(ae_list,'')                  
        )
        as 'AE Ref, AE Name, AE Status, Start Date, End Date, Start Slot Balance, Slots Used, Purchased Volume, Slot Amendments, End Slot Balance, Expected End Slot Balance, Variance, AE Ref, AE-Site Changes, AE_list'
    FROM  
    (SELECT o.id, afa.ae_ref, o.name, ast.name as ae_status, o.slots_balance, coalesce(o.last_updated_on,o.created_on) last_modified_on,
            IFNULL((SELECT ifnull(oh.slots_balance,0)      
            FROM  organisation_hist oh
            JOIN  transition_status ts on ts.id = oh.transition_status_id
            WHERE oh.id = o.id
            AND   oh.expired_on >= i_report_start_date
            AND   oh.last_updated_on <= i_report_end_date
            AND   ts.code = 'FULL'
            ORDER BY oh.expired_on
            LIMIT 1),
              CASE
              WHEN 
                   coalesce(o.last_updated_on,o.created_on)  <= i_report_end_date
              THEN IFNULL(slots_balance,0)
              ELSE 0
              END) opening_slots,
           IFNULL(test_count.sum_slots_used,0) sum_slots_used,
           CASE 
           WHEN 
                coalesce(o.last_updated_on,o.created_on) <= i_report_end_date 
           THEN o.slots_balance
           ELSE
             (SELECT oh.slots_balance     
              FROM organisation_hist oh
              JOIN  transition_status ts on ts.id = oh.transition_status_id
              WHERE oh.id = o.id
              AND   oh.expired_on >= i_report_start_date
              AND   oh.last_updated_on <= i_report_end_date
              AND   ts.code = 'FULL'
              ORDER BY oh.expired_on desc
              LIMIT 1) 
           END as end_slots,
           (SELECT sum(tst.slots) 
            FROM test_slot_transaction tst
            JOIN test_slot_transaction_status tss ON tst.status_id = tss.id
            JOIN payment p ON tst.payment_id = p.id
            JOIN payment_status ps ON p.status_id = ps.id
            WHERE tss.code = 'CO' 
            AND   coalesce(tst.completed_on,tst.created_on) >= i_report_start_date
            AND   coalesce(tst.completed_on,tst.created_on) <= i_report_end_date
            AND   ps.code = 'S'   
            AND   tst.organisation_id = o.id) slots_purchased,
           ((SELECT ifnull(sum(tsa.slots),0) 
            FROM  test_slot_transaction_amendment tsa
            JOIN  test_slot_transaction_amendment_type atype ON atype.id = tsa.type_id
            WHERE tsa.created_on >= i_report_start_date
            AND   tsa.created_on <= i_report_end_date
            AND   atype.code <> 'T702'
            AND   tsa.organisation_id = o.id) +
           (SELECT ifnull(sum(tsa.slots),0) * -1 
            FROM  test_slot_transaction_amendment tsa
            JOIN  test_slot_transaction_amendment_type atype ON atype.id = tsa.type_id
            WHERE tsa.created_on >= i_report_start_date
            AND   tsa.created_on <= i_report_end_date
            AND   atype.code = 'T702'
            AND   tsa.organisation_id = o.id) ) slot_amendments ,
           (
             SELECT ifnull(count(distinct id),0) 
             FROM site_hist h
             WHERE h.organisation_id = o.id
             AND  h.expired_on >= i_report_start_date
             AND  h.last_updated_on <= i_report_end_date
             AND NOT EXISTS 
             (SELECT 1 FROM site s
              WHERE h.id = s.id
              AND   h.organisation_id = s.organisation_id)
             ) +
             
            (SELECT ifnull(count(distinct id),0) 
             FROM site_hist h  
             WHERE h.id in (select id FROM site WHERE organisation_id = o.id)
             AND   h.last_updated_on <= i_report_end_date
             AND   h.expired_on >= i_report_start_date
             AND   h.organisation_id is not null
             AND   h.organisation_id <> o.id
             )   
             site_change_count,
             replace(concat(ifnull(ae_not_linked.ae_list,','),',',ifnull(new_ae_link.ae_list ,'')),',,','') ae_list
    FROM organisation o
    JOIN auth_for_ae afa        ON afa.organisation_id = o.id
    JOIN auth_for_ae_status ast ON afa.status_id = ast.id
    LEFT JOIN
      (SELECT o.id,
            
            
            
            
            
            SUM(CASE
               WHEN s.code = 'P' AND
                    m.created_on >= i_report_start_date AND
                    m.created_on <= i_report_end_date 
               THEN 1 

               WHEN s.code = 'A' AND
                    m.created_on >= i_report_start_date AND
                    m.created_on <= i_report_end_date 
               THEN 1 
               
               WHEN m.emergency_log_id is null AND
                    s.code NOT IN ('P','A')  AND 
                    m.created_on >= i_report_start_date AND
                    m.completed_date <= i_report_end_date 
               THEN 0 
     
               WHEN m.emergency_log_id is null AND
                    s.code NOT IN ('P','A')  AND 
                    m.created_on >= i_report_start_date AND
                    m.created_on <= i_report_end_date AND
                    m.completed_date > i_report_end_date 
               THEN 1  

               WHEN m.emergency_log_id is null AND
                    s.code NOT IN ('P','A')  AND 
                    m.created_on < i_report_start_date AND
                    m.completed_date >= i_report_start_date AND
                    m.completed_date <= i_report_end_date 
               THEN -1 
     
               WHEN m.emergency_log_id IS NOT NULL AND
                    s.code NOT IN ('P','A')  AND 
                    m.created_on < i_report_start_date AND
                    m.last_updated_on >= i_report_start_date AND
                    m.last_updated_on <= i_report_end_date 
               THEN 
                   IF((SELECT IFNULL(min(h.last_updated_on),m.created_on)  
                       FROM mot_test_hist h 
                       WHERE m.id = h.id 
                       AND h.status_id IS NOT NULL 
                       AND h.status_id not in (4,6)) BETWEEN i_report_start_date AND i_report_end_date,  -1, 0) 

               WHEN m.emergency_log_id IS NOT NULL AND
                    s.code NOT IN ('P','A')  AND 
                    m.created_on >= i_report_start_date AND
                    m.created_on <= i_report_end_date AND
                    m.last_updated_on > i_report_end_date
               THEN 
                   IF((SELECT IFNULL(min(h.last_updated_on),m.created_on)  
                       FROM mot_test_hist h 
                       WHERE m.id = h.id 
                       AND h.status_id IS NOT NULL 
                       AND h.status_id not in (4,6)) > i_report_end_date,  1, 0) 
               ELSE 0 
               END
            )  sum_slots_used  
       FROM organisation o 
       JOIN auth_for_ae afa ON afa.organisation_id = o.id
       JOIN site se ON se.organisation_id = o.id
       JOIN mot_test m FORCE INDEX (mot_test_created_on_emergency_log_id_idx) ON m.site_id = se.id 
       JOIN mot_test_status s ON s.id = m.status_id 
       JOIN mot_test_type t   ON t.id = m.mot_test_type_id AND t.code IN ('NT','PL','PV','RT','ES','EI')
       WHERE m.created_on >= i_created_start_date
       AND   m.created_on <= i_report_end_date
       AND  (i_ae_ref = 'ALL' OR afa.ae_ref = i_ae_ref)
       
       GROUP BY o.id
       ) test_count  ON test_count.id = o.id
    LEFT JOIN 
    ( 
        SELECT site_hist.organisation_id, group_concat(distinct concat(ifnull(ae.ae_ref,concat('Site Unlink')),' [',se.site_number,']')) ae_list
        FROM site_hist
        JOIN site se             ON site_hist.id = se.id 
        LEFT JOIN auth_for_ae ae ON ae.organisation_id = se.organisation_id
        WHERE 
              site_hist.organisation_id is not null
        AND   site_hist.expired_on >= i_report_start_date  
        AND NOT EXISTS                                        
            (SELECT 1 FROM site
             WHERE site.id = site_hist.id
             AND   site.organisation_id = site_hist.organisation_id
             )   
        GROUP BY site_hist.organisation_id
    ) ae_not_linked   ON ae_not_linked.organisation_id = o.id
    LEFT JOIN 
    (  
        SELECT se.organisation_id, group_concat(distinct concat(ifnull(ae.ae_ref,concat('Site Unlink')),' [',se.site_number,']')) ae_list
        FROM site_hist 
        JOIN site se             ON site_hist.id = se.id
        LEFT JOIN auth_for_ae ae ON ae.organisation_id = site_hist.organisation_id
        WHERE 
              site_hist.organisation_id is not null
        AND   site_hist.expired_on >= i_report_start_date 
        AND EXISTS                                            
            (SELECT 1 FROM site
             WHERE site.id = site_hist.id
             AND   site.organisation_id <> site_hist.organisation_id
             )
        GROUP BY se.organisation_id
    ) new_ae_link   ON new_ae_link.organisation_id = o.id
    WHERE 
       (i_ae_ref = 'ALL' OR afa.ae_ref = i_ae_ref)
    ) sb_rpt;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_housekeeping_mot_test_recent_certificate` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `sp_housekeeping_mot_test_recent_certificate`(IN p_max_day INT, IN p_chunk_size INT)
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    DECLARE rows_touched INT;
    DECLARE cut_off_date  DATETIME;
    SET rows_touched=1;
    SET cut_off_date=DATE_ADD(NOW(), INTERVAL -p_max_day DAY);
    
    WHILE rows_touched > 0 DO
        DELETE FROM mot_test_recent_certificate WHERE generation_completed_on <  cut_off_date and status = 'COMPLETED' LIMIT p_chunk_size;
        SET rows_touched = (SELECT ROW_COUNT());
        COMMIT;
    END WHILE;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_sequence` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `sp_sequence`(
  IN in_seq_code varchar(10)
)
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN

    DECLARE l_prefix varchar(50);
    DECLARE l_padding tinyint unsigned;
    DECLARE l_seq bigint;
    DECLARE l_increment smallint;
    DECLARE l_padded varchar(50) DEFAULT '';
    DECLARE l_min int unsigned;
    DECLARE l_max int unsigned;
    DECLARE l_out_sequence varchar(100) DEFAULT '';
    DECLARE l_message_text varchar(100) DEFAULT '';
    DECLARE sequence_not_found CONDITION FOR SQLSTATE '45000';
    DECLARE minimum_reached CONDITION FOR SQLSTATE '45001';
    DECLARE maximum_reached CONDITION FOR SQLSTATE '45002';

    START TRANSACTION;
      select prefix_str, padding, sequence_number, increment_val, min_val, max_val
      into l_prefix, l_padding, l_seq, l_increment, l_min, l_max
      from ctrl_sequence where code = in_seq_code FOR UPDATE;

      
      
      if (l_seq IS NULL) THEN
        set l_message_text = concat_ws('', 'Sequence "', in_seq_code, '" not found');
        SIGNAL sequence_not_found SET MESSAGE_TEXT = l_message_text;
      end if;

      
      set l_seq = l_seq + l_increment;

      
      
      
      if (l_seq < l_min) then
        set l_message_text = concat_ws('', 'Sequence minimum value reached: ', l_min);
        SIGNAL minimum_reached SET MESSAGE_TEXT = l_message_text;
      end if;

      
      if (l_seq > l_max) then
        set l_message_text = concat_ws('', 'Sequence maximum value reached: ', l_max);
        SIGNAL maximum_reached SET MESSAGE_TEXT = l_message_text;
      end if;

      
      if (l_padding > 0) then

        
        
        if (l_padding < length(l_seq)) then
          set l_padding = length(l_seq);
        end if;

        
        set l_padded = lpad(l_seq, l_padding, '0');
      else
        
        set l_padded = l_seq;
      end if;

      
      UPDATE ctrl_sequence
        set sequence_number = l_seq,
            last_updated_by = 0,
            last_updated_on = CURRENT_TIMESTAMP(6),
            version = version + 1
        where code = in_seq_code;

      
      set l_out_sequence = concat(coalesce(l_prefix, ''), l_padded);
      select l_out_sequence as sequence from dual;

    COMMIT;
  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `test_count_at_site_report` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `test_count_at_site_report`(IN i_site_id INT(10), IN i_report_start_date DATETIME(6), IN i_report_end_date DATETIME(6), IN i_active_days SMALLINT)
    READS SQL DATA
    SQL SECURITY INVOKER
BEGIN

    DECLARE i_created_start_date DATETIME(6);

    SET i_created_start_date = DATE_SUB(i_report_start_date, INTERVAL i_active_days  DAY);

    SELECT  concat( ifnull(a.ae_ref,'null'), ',', ifnull(se.organisation_id,'null'), ',', ifnull(se.site_number,'null'), ',', m.site_id, ',',
        
        
        
        
        
        SUM(CASE
           WHEN s.code = 'P' AND
                m.created_on >= i_report_start_date AND
                m.created_on <= i_report_end_date
           THEN 1 

           WHEN s.code = 'A' AND
                m.created_on >= i_report_start_date AND
                m.created_on <= i_report_end_date
           THEN 1 

           WHEN m.emergency_log_id is null AND
                s.code NOT IN ('P','A')  AND
                m.created_on >= i_report_start_date AND
                m.completed_date <= i_report_end_date
           THEN 0 

           WHEN m.emergency_log_id is null AND
                s.code NOT IN ('P','A')  AND
                m.created_on >= i_report_start_date AND
                m.created_on <= i_report_end_date AND
                m.completed_date > i_report_end_date
           THEN 1  

           WHEN m.emergency_log_id is null AND
                s.code NOT IN ('P','A')  AND
                m.created_on < i_report_start_date AND
                m.completed_date >= i_report_start_date AND
                m.completed_date <= i_report_end_date
           THEN -1 

           WHEN m.emergency_log_id IS NOT NULL AND
                s.code NOT IN ('P','A')  AND
                m.created_on < i_report_start_date AND
                m.last_updated_on >= i_report_start_date AND
                m.last_updated_on <= i_report_end_date
           THEN 
               IF((SELECT IFNULL(min(h.last_updated_on),m.created_on)
                   FROM mot_test_hist h
                   WHERE m.id = h.id
                   AND h.status_id IS NOT NULL
                   AND h.status_id not in (4,6)) BETWEEN i_report_start_date AND i_report_end_date,  -1, 0)

           WHEN m.emergency_log_id IS NOT NULL AND
                s.code NOT IN ('P','A')  AND
                m.created_on >= i_report_start_date AND
                m.created_on <= i_report_end_date AND
                m.last_updated_on > i_report_end_date
           THEN 
               IF((SELECT IFNULL(min(h.last_updated_on),m.created_on)
                   FROM mot_test_hist h
                   WHERE m.id = h.id
                   AND h.status_id IS NOT NULL
                   AND h.status_id not in (4,6)) > i_report_end_date,  1, 0)
           ELSE 0
           END) ) as line
    FROM mot_test m          FORCE INDEX (mot_test_created_on_emergency_log_id_idx)
    JOIN mot_test_status s   ON s.id = m.status_id
    JOIN mot_test_type t     ON t.id = m.mot_test_type_id AND t.code IN ('NT','PL','PV','RT','ES','EI')
    JOIN site se             ON se.id = m.site_id
    LEFT JOIN auth_for_ae a  ON se.organisation_id = a.organisation_id
    WHERE m.created_on >= i_created_start_date
    AND   m.created_on <= i_report_end_date
    
    AND   (i_site_id is null OR i_site_id = m.site_id)
    GROUP BY  a.ae_ref, se.organisation_id, se.site_number, m.site_id;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Current Database: `ddr_util`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `ddr_util` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `ddr_util`;

--
-- Table structure for table `ddr_fk_key_column_usage`
--

DROP TABLE IF EXISTS `ddr_fk_key_column_usage`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ddr_fk_key_column_usage` (
  `constraint_schema` varchar(64) NOT NULL DEFAULT '',
  `constraint_name` varchar(64) NOT NULL DEFAULT '',
  `table_schema` varchar(64) NOT NULL DEFAULT '',
  `table_name` varchar(64) NOT NULL DEFAULT '',
  `column_name` varchar(64) NOT NULL DEFAULT '',
  `ordinal_position` bigint(10) NOT NULL DEFAULT '0',
  `position_in_unique_constraint` bigint(10) NOT NULL DEFAULT '0',
  `referenced_table_schema` varchar(64) DEFAULT NULL,
  `referenced_table_name` varchar(64) DEFAULT NULL,
  `referenced_column_name` varchar(64) DEFAULT NULL,
  PRIMARY KEY (`constraint_schema`,`constraint_name`,`position_in_unique_constraint`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='For capturing metadata for FKs to allow them to be dropped and then reconstituted';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `ddr_generated_code`
--

DROP TABLE IF EXISTS `ddr_generated_code`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ddr_generated_code` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `created_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `refactor_table_id` int(10) unsigned NOT NULL,
  `refactor_process` varchar(10) NOT NULL,
  `object_name` varchar(100) NOT NULL,
  `source_code` varchar(8000) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_ddr_generated_code_refactor_table_id` (`refactor_table_id`),
  CONSTRAINT `fk_ddr_generated_code_refactor_table_id` FOREIGN KEY (`refactor_table_id`) REFERENCES `ddr_refactor_table` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=867 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `ddr_logger`
--

DROP TABLE IF EXISTS `ddr_logger`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ddr_logger` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `connection_id` int(10) unsigned DEFAULT '0' COMMENT 'Collected by calling SELECT connection_id()',
  `log_level` enum('debug','info','warn','error') NOT NULL,
  `log_timestamp` timestamp(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2),
  `log_module` varchar(64) NOT NULL DEFAULT 'anon' COMMENT 'Name of stored program that called the logger.',
  `log_message` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=27016 DEFAULT CHARSET=latin1 ROW_FORMAT=COMPRESSED COMMENT='Logging for DVSA Database Refactoring ETL process';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `ddr_refactor_table`
--

DROP TABLE IF EXISTS `ddr_refactor_table`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ddr_refactor_table` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'Arbitrary surrogate primary key. Other more important unique constraints exist.',
  `source_schema` varchar(64) NOT NULL,
  `target_schema` varchar(64) NOT NULL,
  `table_name` varchar(64) NOT NULL,
  `generate_triggers` tinyint(1) NOT NULL DEFAULT '0',
  `watch_deletions` tinyint(1) NOT NULL DEFAULT '0',
  `migration_requirements` enum('single table','iterative','custom') NOT NULL DEFAULT 'custom',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uq_source_schema_target_schema_table_name` (`source_schema`,`target_schema`,`table_name`) COMMENT 'Table combinations can only appear once'
) ENGINE=InnoDB AUTO_INCREMENT=1053 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Temporary table structure for view `log_vw`
--

DROP TABLE IF EXISTS `log_vw`;
/*!50001 DROP VIEW IF EXISTS `log_vw`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `log_vw` (
  `id` tinyint NOT NULL,
  `conn_` tinyint NOT NULL,
  `lvl_` tinyint NOT NULL,
  `timestamp_` tinyint NOT NULL,
  `log_module` tinyint NOT NULL,
  `log_message_148_chars_` tinyint NOT NULL
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `table_row_count_vw`
--

DROP TABLE IF EXISTS `table_row_count_vw`;
/*!50001 DROP VIEW IF EXISTS `table_row_count_vw`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `table_row_count_vw` (
  `table_name` tinyint NOT NULL,
  `mot_v195_rel4 rows` tinyint NOT NULL,
  `mot2 rows` tinyint NOT NULL,
  `mot2 as % of mot_v195_rel4` tinyint NOT NULL
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `table_size_vw`
--

DROP TABLE IF EXISTS `table_size_vw`;
/*!50001 DROP VIEW IF EXISTS `table_size_vw`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `table_size_vw` (
  `TABLE_NAME` tinyint NOT NULL,
  `mot_v195_rel4 (MB)` tinyint NOT NULL,
  `mot2 (MB)` tinyint NOT NULL,
  `resulting_in_` tinyint NOT NULL
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Dumping routines for database 'ddr_util'
--
/*!50003 DROP FUNCTION IF EXISTS `cat_table_refs` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  FUNCTION `cat_table_refs`(p_schema VARCHAR(64),
                                            p_table_name VARCHAR(64)) RETURNS varchar(256) CHARSET latin1
    NO SQL
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'cat_table_refs';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_schema VARCHAR(64) CHARSET latin1 DEFAULT TRIM(IFNULL(p_schema, ''));
    DECLARE c_table_name VARCHAR(64) CHARSET latin1 DEFAULT TRIM(IFNULL(p_table_name, ''));

    DECLARE v_return VARCHAR(256) CHARSET latin1 DEFAULT '';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_schema, c_null), 
                                                              IFNULL(p_table_name, c_null)));
        RESIGNAL;
    END;

    IF (p_schema IS NULL OR p_table_name IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Neither Schema, nor Table Name can be NULL';
    END IF;

    IF (LENGTH(c_schema) = 0 OR LENGTH(c_table_name) = 0)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Neither Schema, nor Table Name can be zero length';
    END IF;

    SET v_return := CONCAT('`', c_schema, '`.`', c_table_name, '`');

    RETURN v_return;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `generate_hist_table_ddl` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  FUNCTION `generate_hist_table_ddl`(p_source_schema VARCHAR(64)
                                                     ,p_target_schema VARCHAR(64)
                                                     ,p_non_hist_table_name VARCHAR(64)) RETURNS varchar(8000) CHARSET utf8
    READS SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'generate_hist_table_ddl';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_hist_table_name VARCHAR(64) DEFAULT CONCAT(LOWER(TRIM(p_non_hist_table_name)), '_hist');
    DECLARE c_table_close VARCHAR(100) DEFAULT CONCAT(') ENGINE=InnoDB ROW_FORMAT=COMPRESSED COMMENT ''DDL GENERATED ', NOW(), ''';');

    DECLARE v_unique_key VARCHAR(64);
    DECLARE v_indent_level INTEGER(2) UNSIGNED DEFAULT 0;
    DECLARE v_column_name VARCHAR(64);
    DECLARE v_column_type LONGTEXT;
    DECLARE v_character_set_name VARCHAR(64);
    DECLARE v_column_prefix VARCHAR(10);
    DECLARE v_column_suffix VARCHAR(10);

    DECLARE v_return VARCHAR(8000) DEFAULT '';

    DECLARE v_is_not_found BOOLEAN DEFAULT FALSE;

    DECLARE cur_tab_columns CURSOR FOR SELECT SQL_CALC_FOUND_ROWS `column_name`
                                            , `column_type`
                                            , IF(`character_set_name` IS NULL, '', CONCAT(' character set ', `character_set_name`)) character_set_name_
                                         FROM `information_schema`.`columns`
                                        WHERE `table_name` = p_non_hist_table_name
                                          AND `table_schema` = p_source_schema
                                        ORDER BY `ordinal_position`;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text
                                                             ,IFNULL(p_source_schema, c_null)
                                                             ,IFNULL(p_target_schema, c_null)
                                                             ,IFNULL(p_non_hist_table_name, c_null)
                                                             ));
        RESIGNAL;
    END;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_is_not_found=TRUE;

    IF (p_source_schema IS NULL OR p_target_schema IS NULL OR p_non_hist_table_name IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET message_text = 'Source schema, target schema, and non-history table name must be non-NULL.';
    END IF;

    IF (p_non_hist_table_name LIKE '%hist')
    THEN
        SIGNAL SQLSTATE '45000' SET message_text = 'Non-history table name cannot be an "_hist" table.';
    END IF;

    SET v_unique_key := `ddr_util`.`get_object_name`(c_hist_table_name, 'uq', NULL);

    SET v_return := CONCAT('CREATE TABLE ', `ddr_util`.`cat_table_refs`(p_target_schema, c_hist_table_name));
    CALL `ddr_util`.`add_boilerplate`(v_return, c_hist_table_name, FALSE);
    CALL `ddr_util`.`add_code_line`(v_return, '(`hist_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT', v_indent_level);
    CALL `ddr_util`.`add_code_line`(v_return, ',`expired_on` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)', v_indent_level);
    CALL `ddr_util`.`add_code_line`(v_return, ',`expired_by` integer(10) unsigned', v_indent_level);

    SET v_is_not_found := FALSE;
    SET v_column_prefix := ',';
    SET v_column_suffix := '';

    OPEN cur_tab_columns;
    REPEAT
        FETCH cur_tab_columns INTO v_column_name, v_column_type, v_character_set_name;

        
        
        
        
        IF (NOT v_is_not_found)
        THEN
            CALL `ddr_util`.`add_code_line`(v_return
                                           ,CONCAT(v_column_prefix
                                                  ,CONCAT('`'
                                                         ,v_column_name
                                                         ,'` '
                                                         ,v_column_type
                                                         ,v_character_set_name
                                                         ,' NULL'
                                                         )
                                                  ,v_column_suffix
                                                  )
                                           ,v_indent_level);
            SET v_column_prefix := ',';
        END IF;

    UNTIL v_is_not_found END REPEAT;
    CLOSE cur_tab_columns;

    CALL `ddr_util`.`add_code_line`(v_return, ',PRIMARY KEY (hist_id)', v_indent_level);
    CALL `ddr_util`.`add_code_line`(v_return, CONCAT(',KEY `', v_unique_key, '` (`id`, `version`)'), v_indent_level);
    CALL `ddr_util`.`add_code_line`(v_return, c_table_close, v_indent_level);

    CALL `ddr_util`.`logger`('debug', c_module, CONCAT('History table DDL is ', v_return));

    RETURN v_return;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `generate_single_table_sql` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  FUNCTION `generate_single_table_sql`(p_source_schema VARCHAR(64),
                                                       p_target_schema VARCHAR(64),
                                                       p_table_name VARCHAR(64),
                                                       p_date_from DATETIME,
                                                       p_date_to DATETIME,
                                                       p_id_from INTEGER UNSIGNED,
                                                       p_id_to INTEGER UNSIGNED,
                                                       p_is_where_required BOOLEAN) RETURNS text CHARSET latin1
    READS SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'generate_single_table_sql';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_1900 VARCHAR(10) DEFAULT '1900-01-01';
    DECLARE c_2999 VARCHAR(10) DEFAULT '2999-12-31';
    DECLARE c_00_00_00 INTEGER UNSIGNED DEFAULT 0; 
    DECLARE c_23_59_59 INTEGER UNSIGNED DEFAULT 86399; 

    DECLARE c_is_hist_table BOOLEAN DEFAULT p_table_name LIKE '%_hist';
    DECLARE c_is_where_required BOOLEAN DEFAULT IFNULL(p_is_where_required, TRUE);
    DECLARE c_lf CHAR(1) CHARACTER SET latin1 DEFAULT CHAR(10);
    DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
    DECLARE c_by_clause VARCHAR(128) DEFAULT ',IFNULL(src_.`last_updated_by`,src_.`created_by`)';
    DECLARE c_on_clause VARCHAR(128) DEFAULT ',IFNULL(src_.`last_updated_on`,src_.`created_on`)';

    DECLARE c_except_table_database_version VARCHAR(64) DEFAULT 'database_version'; 
    DECLARE c_except_table_mot_test_recent_certificate VARCHAR(64) DEFAULT 'mot_test_recent_certificate'; 

    
    DECLARE c_id VARCHAR(64) DEFAULT 'id';
    DECLARE c_hist_id VARCHAR(64) DEFAULT 'hist_id';
    DECLARE c_last_updated_by VARCHAR(64) DEFAULT 'last_updated_by';
    DECLARE c_last_updated_on VARCHAR(64) DEFAULT 'last_updated_on';
    DECLARE c_last_modified_by VARCHAR(64) DEFAULT 'last_modified_by';
    DECLARE c_last_modified_on VARCHAR(64) DEFAULT 'last_modified_on';
    DECLARE c_is_id BOOLEAN DEFAULT `ddr_util`.`is_column_exists`(p_source_schema, p_table_name, c_id);
    DECLARE c_is_last_updated_by BOOLEAN DEFAULT `ddr_util`.`is_column_exists`(p_source_schema, p_table_name, c_last_updated_by);
    DECLARE c_is_last_updated_on BOOLEAN DEFAULT `ddr_util`.`is_column_exists`(p_source_schema, p_table_name, c_last_updated_on);
    DECLARE c_is_last_modified_by BOOLEAN DEFAULT `ddr_util`.`is_column_exists`(p_source_schema, p_table_name, c_last_modified_by);
    DECLARE c_is_last_modified_on BOOLEAN DEFAULT `ddr_util`.`is_column_exists`(p_source_schema, p_table_name, c_last_modified_on);
    DECLARE c_id_to_use VARCHAR(64) DEFAULT IF(c_is_hist_table, c_hist_id, c_id);

    DECLARE v_is_date_where_required BOOLEAN DEFAULT c_is_where_required;
    DECLARE v_is_id_where_required BOOLEAN DEFAULT c_is_where_required;
    DECLARE v_where VARCHAR(256) CHARACTER SET latin1 DEFAULT '';
    DECLARE v_audit_line_1 VARCHAR(512) DEFAULT ''; 
    DECLARE v_audit_line_2 VARCHAR(512) DEFAULT '';
    DECLARE v_audit_line_3 VARCHAR(512) DEFAULT '';
    DECLARE v_return TEXT CHARACTER SET latin1;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE v_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
            
        GET DIAGNOSTICS CONDITION 1 v_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_sqlstate, v_message_text,
                                                              IFNULL(p_source_schema, c_null), 
                                                              IFNULL(p_target_schema, c_null), 
                                                              IFNULL(p_table_name, c_null), 
                                                              IFNULL(p_date_from, c_null), 
                                                              IFNULL(p_date_to, c_null), 
                                                              IFNULL(p_id_from, c_null), 
                                                              IFNULL(p_id_to, c_null),
                                                              IFNULL(p_is_where_required, c_null)));
        RESIGNAL;
    END;
    
    IF (p_source_schema IS NULL OR p_target_schema IS NULL OR p_table_name IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Source schema, target schema, and table name must all be non-null.';
    END IF;

    SET GROUP_CONCAT_MAX_LEN = 4096;

    
    
    
    
    
    IF ((p_date_from IS NULL AND p_date_to IS NULL) OR (p_date_from = (DATE(c_1900) + INTERVAL c_00_00_00 SECOND) AND p_date_to = (DATE(c_2999) + INTERVAL c_23_59_59 SECOND)))
    THEN
        CALL `ddr_util`.`logger`('debug', c_module, 'Date parameters are NULL so they will be omitted from the WHERE clause');
        SET v_is_date_where_required := FALSE;
    END IF;

    IF (p_id_from IS NULL AND p_id_to IS NULL)
    THEN
        CALL `ddr_util`.`logger`('debug', c_module, 'ID parameters are NULL so they will be omitted from the WHERE clause');
        SET v_is_id_where_required := FALSE;
    END IF;

    IF (NOT c_is_id)
    THEN
        CALL `ddr_util`.`logger`('debug', c_module, 'ID column is missing so it cannot be used in the WHERE clause');
        SET v_is_id_where_required := FALSE;
    END IF;

    IF (NOT v_is_date_where_required AND NOT v_is_id_where_required)
    THEN
        CALL `ddr_util`.`logger`('debug', c_module, 'Date and ID parameters are all NULL so no WHERE clause will be included');
    ELSE
        
        
        CALL `ddr_util`.`validate_ranges`(p_date_from, p_date_to, p_id_from, p_id_to);
    END IF;

    CASE
        WHEN (v_is_date_where_required AND v_is_id_where_required)
        THEN
           
           SET v_where := CONCAT(' WHERE src_.`last_updated_on` BETWEEN \'', p_date_from, '\' AND \'', p_date_to, '\'', c_lf,
                  '   AND src_.`', c_id_to_use, '` BETWEEN ', p_id_from, ' AND ', p_id_to, c_lf);

        WHEN (v_is_date_where_required)
        THEN
           
           SET v_where := CONCAT(' WHERE src_.`last_updated_on` BETWEEN \'', p_date_from, '\' AND \'', p_date_to, '\'', c_lf);

        WHEN (v_is_id_where_required)
        THEN
           
           SET v_where := CONCAT(' WHERE src_.`', c_id_to_use, '` BETWEEN ', p_id_from, ' AND ', p_id_to, c_lf);

        ELSE
           
           SET v_where := '';
    END CASE;

    
    SET v_audit_line_1 := ',`last_updated_by`,`last_updated_on`';
    SET v_audit_line_2 := ',COALESCE(src_.`last_updated_by`,src_.`created_by`,`ddr_util`.`get_etl_user_id`()),IFNULL(src_.`last_updated_on`,src_.`created_on`)';
    SET v_audit_line_3 := ',`last_updated_by`=COALESCE(src_.`last_updated_by`,src_.`created_by`,`ddr_util`.`get_etl_user_id`()),`last_updated_on`=IFNULL(src_.`last_updated_on`,src_.`created_on`)';

    CALL `ddr_util`.`logger`('debug', c_module, CONCAT('Generating `', p_table_name,'` SQL...'));

    IF (p_table_name = c_except_table_database_version)
    THEN
        
        SET v_audit_line_1 := '';
        SET v_audit_line_2 := '';
        SET v_audit_line_3 := '';
        SET v_where := '';

    ELSEIF (p_table_name = c_except_table_mot_test_recent_certificate)
    THEN
        
        SET v_audit_line_1 := ',`last_updated_on`';
        SET v_audit_line_2 := ',IFNULL(src_.`last_updated_on`,src_.`created_on`)';
        SET v_audit_line_3 := ',`last_updated_on`=src_.`last_updated_on`';
        SET v_where := '';

    ELSEIF (c_is_hist_table)
    THEN
        
        SET v_audit_line_1 := CONCAT(v_audit_line_1, ',`expired_on`,`expired_by`');
        SET v_audit_line_2 := CONCAT(v_audit_line_2, ',IFNULL(src_.`hist_timestamp`,IFNULL(src_.`last_updated_on`,src_.`created_on`)),COALESCE(src_.`last_updated_by`,src_.`created_by`,`ddr_util`.`get_etl_user_id`())');
        SET v_audit_line_3 := CONCAT(v_audit_line_3, ',`expired_on`=IFNULL(src_.`hist_timestamp`,IFNULL(src_.`last_updated_on`,src_.`created_on`)),`expired_by`=COALESCE(src_.`last_updated_by`,src_.`created_by`,`ddr_util`.`get_etl_user_id`())');
    END IF;

    IF (NOT c_is_last_updated_by AND NOT c_is_last_updated_on)
    THEN
        SET v_audit_line_1 := '';
        SET v_audit_line_2 := '';
        SET v_audit_line_3 := '';
    END IF;

    SELECT 
        CONCAT(
            CONCAT('INSERT INTO ', `ddr_util`.`cat_table_refs`(c2_.`table_schema`, c_.`table_name`), '(', (GROUP_CONCAT(CONCAT('`', c_.`column_name`, '`') ORDER BY c_.`ordinal_position`)), v_audit_line_1, ')', c_lf),
            CONCAT('SELECT ', (GROUP_CONCAT(CONCAT('src_.`', c_.`column_name`, '`') ORDER BY c_.`ordinal_position`)), v_audit_line_2, c_lf),
            CONCAT('  FROM ', `ddr_util`.`cat_table_refs`(c_.`table_schema`, c_.`table_name`), ' src_ '), c_lf,
            v_where,
              '    ON DUPLICATE KEY', c_lf,
            CONCAT('UPDATE ', GROUP_CONCAT(IF(c_.`column_name` NOT IN (c_id, c_hist_id, 'created_on', 'created_by', 'expired_on', 'expired_by'), CONCAT('`', c_.`column_name`, '`=src_.`', c_.`column_name`, '`'), NULL) ORDER BY c_.`ordinal_position`), v_audit_line_3)) stmt_
      INTO v_return
      FROM `information_schema`.`columns` c_
      JOIN `information_schema`.`columns` c2_ ON (c_.`table_name` = c2_.`table_name` AND c_.`column_name` = c2_.`column_name`)
     WHERE c_.`table_schema` = p_source_schema
       AND c2_.`table_schema` = p_target_schema
       AND c_.`table_name` = p_table_name
       AND c_.`column_name` NOT IN (c_last_updated_on, c_last_updated_by, c_last_modified_on, c_last_modified_by)
     GROUP BY c_.`table_schema`, c_.`table_name`
     ORDER BY c_.`table_schema`, c_.`table_name`, c_.`ordinal_position`;

    CALL `ddr_util`.`logger`('debug', c_module, CONCAT('Initial SQL is: ', IFNULL(v_return, c_null)));

     
    IF (c_is_last_modified_on)
    THEN
        
        
        SET v_return := REPLACE(v_return, 'src_.`last_updated_on`', 'src_.`last_modified_on`');
        CALL `ddr_util`.`logger`('debug', c_module, CONCAT('SQL had `', c_last_updated_on, '` replaced'));
    END IF;

    IF (c_is_last_modified_by)
    THEN
        
        
        SET v_return := REPLACE(v_return, 'src_.`last_updated_by`', 'src_.`last_modified_by`');
        CALL `ddr_util`.`logger`('debug', c_module, CONCAT('SQL had `', c_last_updated_by, '` replaced'));
    END IF;

    IF (NOT c_is_last_modified_by AND NOT c_is_last_updated_by)
    THEN
        
        SET v_return := REPLACE(v_return, c_by_clause, '');
        SET v_return := REPLACE(v_return, CONCAT(',`', c_last_updated_by, '`'), '');
        SET v_return := REPLACE(v_return, '=src_.`last_updated_by`', '');
        CALL `ddr_util`.`logger`('debug', c_module, CONCAT('SQL had \'', c_by_clause, '\' removed'));
    END IF;

    IF (NOT c_is_last_modified_on AND NOT c_is_last_updated_on)
    THEN
        
        SET v_return := REPLACE(v_return, c_on_clause, '');
        SET v_return := REPLACE(v_return, CONCAT(',`', c_last_updated_on, '`'), '');
        SET v_return := REPLACE(v_return, '=src_.`last_updated_on`', '');
        CALL `ddr_util`.`logger`('debug', c_module, CONCAT('SQL had \'', c_on_clause, '\' removed'));
    END IF;

    CALL `ddr_util`.`logger`('debug', c_module, CONCAT('SQL is: ', IFNULL(v_return, c_null)));

    RETURN v_return;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `generate_table_trigger_ddl` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  FUNCTION `generate_table_trigger_ddl`(p_source_schema VARCHAR(64),
                                                        p_source_table VARCHAR(64),
                                                        p_target_schema VARCHAR(64),
                                                        p_target_table VARCHAR(64),
                                                        p_object_name VARCHAR(64),
                                                        p_trigger_type VARCHAR(2)) RETURNS varchar(8000) CHARSET utf8
    READS SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'generate_table_trigger_ddl';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_block_name VARCHAR(64) DEFAULT 'MainBlock';
    DECLARE c_bi VARCHAR(2) DEFAULT 'BI';
    DECLARE c_bu VARCHAR(2) DEFAULT 'BU';
    DECLARE c_bd VARCHAR(2) DEFAULT 'BD';
    DECLARE c_au VARCHAR(2) DEFAULT 'AU';

    DECLARE c_vehicle_table VARCHAR(64) DEFAULT 'vehicle';
    DECLARE c_dvla_vehicle_table VARCHAR(64) DEFAULT 'dvla_vehicle';
    DECLARE c_dvla_vehicle_registration_collapsed VARCHAR(128) DEFAULT 'SET NEW.`registration_collapsed` = f_collapse(NEW.`registration`);';
    DECLARE c_dvla_vehicle_vin_collapsed VARCHAR(128) DEFAULT 'SET NEW.`vin_collapsed` = f_collapse(NEW.`vin`);';

    DECLARE c_mot_test_table VARCHAR(64) DEFAULT 'mot_test';

    DECLARE v_indent_level SMALLINT UNSIGNED DEFAULT 0;
    DECLARE v_column_name VARCHAR(64);
    DECLARE v_ordinal_position BIGINT UNSIGNED; 
    DECLARE v_column_prefix VARCHAR(10);
    DECLARE v_column_suffix VARCHAR(10);
    DECLARE v_trigger_text VARCHAR(40);

    DECLARE v_is_dvla_vehicle_or_vehicle_table BOOLEAN DEFAULT FALSE;
    DECLARE v_is_mot_test_table BOOLEAN DEFAULT FALSE;

    DECLARE v_return VARCHAR(8000) DEFAULT NULL;

    DECLARE v_is_not_found BOOLEAN DEFAULT FALSE;
    DECLARE cur_tab_columns CURSOR FOR SELECT SQL_CALC_FOUND_ROWS `COLUMN_NAME`, `ORDINAL_POSITION`
                                         FROM `information_schema`.`COLUMNS`
                                        WHERE `TABLE_NAME` = p_source_table
                                          AND `TABLE_SCHEMA` = p_source_schema
                                        ORDER BY `ORDINAL_POSITION`;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_source_schema, c_null),
                                                              IFNULL(p_source_table, c_null),
                                                              IFNULL(p_target_schema, c_null),
                                                              IFNULL(p_target_table, c_null),
                                                              IFNULL(p_object_name, c_null),
                                                              IFNULL(p_trigger_type, c_null)));
        RESIGNAL;
    END;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_is_not_found=TRUE;

    
    IF (ISNULL(p_source_schema) OR ISNULL(p_source_table) OR ISNULL(p_target_schema) OR ISNULL(p_target_table) OR ISNULL(p_object_name) OR ISNULL(p_trigger_type))
    THEN
        SIGNAL SQLSTATE '45000' SET message_text = 'All IN parameters must be non-NULL.';
    END IF;

    IF (LOWER(p_source_table) IN (c_dvla_vehicle_table, c_vehicle_table))
    THEN
        SET v_is_dvla_vehicle_or_vehicle_table := TRUE;
    END IF;

    IF (LOWER(p_source_table) = c_mot_test_table)
    THEN
        SET v_is_mot_test_table := TRUE;
    END IF;

    CASE p_trigger_type
    WHEN c_bi
    THEN
        SET v_trigger_text := 'BEFORE INSERT';
    WHEN c_bu
    THEN
        SET v_trigger_text := 'BEFORE UPDATE';
    WHEN c_bd
    THEN
        SET v_trigger_text := 'BEFORE DELETE';
    WHEN c_au
    THEN
        SET v_trigger_text := 'AFTER UPDATE';
    ELSE
        SIGNAL SQLSTATE '45000' SET message_text = 'Trigger type must be BI, BU, BD or AU. [before insert/update/delete, after update]';
    END CASE;

    CALL `ddr_util`.`logger`('debug', c_module, CONCAT('Generating trigger code for ', `ddr_util`.`cat_table_refs`(p_source_schema, p_object_name)));

    SET v_return := CONCAT('CREATE TRIGGER ', `ddr_util`.`cat_table_refs`(p_source_schema, p_object_name));

    CALL `ddr_util`.`add_code_line`(v_return, CONCAT(v_trigger_text, ' ON ', `ddr_util`.`cat_table_refs`(p_source_schema, p_source_table)), v_indent_level);
    CALL `ddr_util`.`add_code_line`(v_return, 'FOR EACH ROW', v_indent_level);
    CALL `ddr_util`.`add_code_line`(v_return, CONCAT(c_block_name, ': BEGIN'), v_indent_level);
    CALL `ddr_util`.`add_boilerplate`(v_return, p_object_name, TRUE);

    IF (v_is_mot_test_table AND p_trigger_type IN (c_bi, c_bu))
    THEN
        CALL `ddr_util`.`add_code_line`(v_return, 'DECLARE c_active_status_id INTEGER DEFAULT 4;', v_indent_level + 1);
        CALL `ddr_util`.`add_code_line`(v_return, '', 0);

    ELSEIF (v_is_mot_test_table AND p_trigger_type = c_au)
    THEN
        CALL `ddr_util`.`add_code_line`(v_return, 'DECLARE v_mot_test_status_code VARCHAR(5);', v_indent_level + 1);
        CALL `ddr_util`.`add_code_line`(v_return, '', 0);
    END IF;

    
    SET v_indent_level := v_indent_level + 1;
    CALL `ddr_util`.`add_code_line`(v_return, 'IF `mot2`.`is_mot_trigger_disabled`()', v_indent_level);
    CALL `ddr_util`.`add_code_line`(v_return, 'THEN', v_indent_level);

    SET v_indent_level := v_indent_level + 1;
    CALL `ddr_util`.`add_code_line`(v_return, CONCAT('LEAVE ', c_block_name, ';'), v_indent_level);

    SET v_indent_level := v_indent_level - 1;
    CALL `ddr_util`.`add_code_line`(v_return, 'END IF;', v_indent_level);
    CALL `ddr_util`.`add_code_line`(v_return, NULL, v_indent_level);

    
    CALL `ddr_util`.`add_code_line`(v_return, 'IF (@app_user_id IS NULL)', v_indent_level);
    CALL `ddr_util`.`add_code_line`(v_return, 'THEN', v_indent_level);

    SET v_indent_level := v_indent_level + 1;
    CALL `ddr_util`.`add_code_line`(v_return, 'SIGNAL SQLSTATE \'45000\' SET MESSAGE_TEXT = \'Session variable @app_user_id cannot be NULL if triggers are enabled.\';', v_indent_level);

    SET v_indent_level := v_indent_level - 1;
    CALL `ddr_util`.`add_code_line`(v_return, 'END IF;', v_indent_level);
    CALL `ddr_util`.`add_code_line`(v_return, NULL, v_indent_level);

    
    
    
    
    
    CASE
    WHEN p_trigger_type = c_bi
    THEN
        IF (`ddr_util`.`is_column_exists`(p_source_schema, p_source_table, 'version'))
        THEN
            CALL `ddr_util`.`add_code_line`(v_return, 'SET NEW.`version` = 1;', v_indent_level);
        END IF;

        IF (`ddr_util`.`is_column_exists`(p_source_schema, p_source_table, 'created_by'))
        THEN
            IF (`ddr_util`.`is_column_exists`(p_source_schema, p_source_table, 'last_updated_by'))
            THEN
                CALL `ddr_util`.`add_code_line`(v_return, 'SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`last_updated_by`, NEW.`created_by`);', v_indent_level);
                CALL `ddr_util`.`add_code_line`(v_return, 'SET NEW.`last_updated_by` = NEW.`created_by`;', v_indent_level);
            ELSE
                CALL `ddr_util`.`add_code_line`(v_return, 'SET NEW.`created_by` = COALESCE(@app_user_id, NEW.`created_by`);', v_indent_level);
            END IF;
        END IF;

        IF (`ddr_util`.`is_column_exists`(p_source_schema, p_source_table, 'created_on'))
        THEN
            CALL `ddr_util`.`add_code_line`(v_return, 'SET NEW.`created_on` = CURRENT_TIMESTAMP;', v_indent_level);
            IF (`ddr_util`.`is_column_exists`(p_source_schema, p_source_table, 'last_updated_on'))
            THEN
                CALL `ddr_util`.`add_code_line`(v_return, 'SET NEW.`last_updated_on` = NEW.`created_on`;', v_indent_level);
            END IF;
        END IF;

        IF (v_is_dvla_vehicle_or_vehicle_table)
        THEN
            CALL `ddr_util`.`add_code_line`(v_return, c_dvla_vehicle_registration_collapsed, v_indent_level);
            CALL `ddr_util`.`add_code_line`(v_return, c_dvla_vehicle_vin_collapsed, v_indent_level);
        END IF;

        IF (v_is_mot_test_table)
        THEN
            CALL `ddr_util`.`add_code_line`(v_return, '', 0);
            CALL `ddr_util`.`add_code_line`(v_return, 'IF (NEW.`status_id` != c_active_status_id AND NEW.`completed_date` IS NULL)', v_indent_level);
            CALL `ddr_util`.`add_code_line`(v_return, 'THEN', v_indent_level);
            CALL `ddr_util`.`add_code_line`(v_return, 'SIGNAL SQLSTATE \'10001\' SET MESSAGE_TEXT = \'completed_date needs to be set for non ACTIVE mot tests\';', v_indent_level + 1);
            CALL `ddr_util`.`add_code_line`(v_return, 'END IF;', v_indent_level);
        END IF;

    WHEN p_trigger_type = c_bu
    THEN
        IF (`ddr_util`.`is_column_exists`(p_source_schema, p_source_table, 'version'))
        THEN
            CALL `ddr_util`.`add_code_line`(v_return, 'SET NEW.`version` = OLD.`version` + 1;', v_indent_level);
        END IF;

        IF (`ddr_util`.`is_column_exists`(p_source_schema, p_source_table, 'last_updated_by'))
        THEN
            CALL `ddr_util`.`add_code_line`(v_return, 'SET NEW.`last_updated_by` = COALESCE(@app_user_id, NEW.`last_updated_by`);', v_indent_level);
        END IF;

        IF (`ddr_util`.`is_column_exists`(p_source_schema, p_source_table, 'last_updated_on'))
        THEN
            CALL `ddr_util`.`add_code_line`(v_return, 'SET NEW.`last_updated_on` = CURRENT_TIMESTAMP;', v_indent_level);
        END IF;

        IF (v_is_dvla_vehicle_or_vehicle_table)
        THEN
            CALL `ddr_util`.`add_code_line`(v_return, c_dvla_vehicle_registration_collapsed, v_indent_level);
            CALL `ddr_util`.`add_code_line`(v_return, c_dvla_vehicle_vin_collapsed, v_indent_level);
        END IF;

        IF (v_is_mot_test_table)
        THEN
            CALL `ddr_util`.`add_code_line`(v_return, '', 0);
            CALL `ddr_util`.`add_code_line`(v_return, 'IF (NEW.`status_id` != c_active_status_id AND NEW.`completed_date` IS NULL)', v_indent_level);
            CALL `ddr_util`.`add_code_line`(v_return, 'THEN', v_indent_level);
            CALL `ddr_util`.`add_code_line`(v_return, 'SIGNAL SQLSTATE ''10001'' SET MESSAGE_TEXT = ''completed_date needs to be set for non ACTIVE mot tests'';', v_indent_level + 1);
            CALL `ddr_util`.`add_code_line`(v_return, 'END IF;', v_indent_level);
        END IF;

    WHEN p_trigger_type IN (c_bd, c_au)
    THEN
        
        CALL `ddr_util`.`add_code_line`(v_return, CONCAT('INSERT INTO ', `ddr_util`.`cat_table_refs`(p_target_schema, p_target_table)), v_indent_level);

        
        SET v_indent_level := v_indent_level + 1;
        CALL `ddr_util`.`add_code_line`(v_return, '(`expired_on`', v_indent_level);
        CALL `ddr_util`.`add_code_line`(v_return, ',`expired_by`', v_indent_level);

        
        SET v_column_prefix := ',';
        SET v_column_suffix := '';

        OPEN cur_tab_columns;
        REPEAT
            FETCH cur_tab_columns INTO v_column_name, v_ordinal_position;
            IF (NOT v_is_not_found)
            THEN
                
                IF (v_ordinal_position = FOUND_ROWS())
                THEN
                    SET v_column_suffix := ')';
                END IF;

                
                CALL `ddr_util`.`add_code_line`(v_return, CONCAT(v_column_prefix, '`', v_column_name , '`', v_column_suffix), v_indent_level);
                SET v_column_prefix := ',';
            END IF;
        UNTIL v_is_not_found END REPEAT;
        CLOSE cur_tab_columns;

        
        CALL `ddr_util`.`add_code_line`(v_return, 'VALUES', v_indent_level);
        CASE
        WHEN p_trigger_type = c_au
        THEN
            IF (`ddr_util`.`is_column_exists`(p_source_schema, p_source_table, 'last_updated_on'))
            THEN
                CALL `ddr_util`.`add_code_line`(v_return, '(NEW.`last_updated_on`', v_indent_level);
            END IF;

            IF (`ddr_util`.`is_column_exists`(p_source_schema, p_source_table, 'last_updated_by'))
            THEN
                CALL `ddr_util`.`add_code_line`(v_return, ',NEW.`last_updated_by`', v_indent_level);
            END IF;

        WHEN p_trigger_type = c_bd
        THEN
            CALL `ddr_util`.`add_code_line`(v_return, '(CURRENT_TIMESTAMP(6)', v_indent_level);
            CALL `ddr_util`.`add_code_line`(v_return, ',COALESCE(@app_user_id, 0)', v_indent_level);
        END CASE;

        SET v_is_not_found := FALSE;
        SET v_column_prefix := ',';
        SET v_column_suffix := '';

        OPEN cur_tab_columns;
        REPEAT
            FETCH cur_tab_columns INTO v_column_name, v_ordinal_position;
            IF (NOT v_is_not_found)
            THEN
                
                IF (v_ordinal_position = FOUND_ROWS())
                THEN
                    SET v_column_suffix := ');';
                END IF;

                
                CALL `ddr_util`.`add_code_line`(v_return, CONCAT(v_column_prefix, CONCAT('OLD.`', v_column_name, '`'), v_column_suffix), v_indent_level);
                SET v_column_prefix := ',';
            END IF;
        UNTIL v_is_not_found END REPEAT;
        CLOSE cur_tab_columns;
    END CASE;

    IF (v_is_mot_test_table AND p_trigger_type = c_au)
    THEN
        SET v_indent_level := v_indent_level - 1;
        CALL `ddr_util`.`add_code_line`(v_return, '', 0);
        CALL `ddr_util`.`add_code_line`(v_return, 'IF (OLD.`document_id` IS NULL AND NEW.`document_id` IS NOT NULL)', v_indent_level);
        CALL `ddr_util`.`add_code_line`(v_return, 'THEN', v_indent_level);
        CALL `ddr_util`.`add_code_line`(v_return, CONCAT('SELECT `code` INTO v_mot_test_status_code FROM `', p_source_schema, '`.`mot_test_status` WHERE `id` = NEW.`status_id`;'), v_indent_level + 1);
        CALL `ddr_util`.`add_code_line`(v_return, 'IF (v_mot_test_status_code IN (\'P\', \'F\'))', v_indent_level + 1);
        CALL `ddr_util`.`add_code_line`(v_return, 'THEN', v_indent_level + 1);
        CALL `ddr_util`.`add_code_line`(v_return, CONCAT('INSERT INTO `', p_source_schema, '`.`mot_test_recent_certificate`'), v_indent_level + 2);
        CALL `ddr_util`.`add_code_line`(v_return, '(`tester_person_id`, `site_id`, `mot_test_id`, `prs_mot_test_id`, `vin`, `registration`, `make_id`, `model_id`, `model_detail_id`, `make_name`, `model_name`, `model_detail_name`, `mot_test_status_id`, `document_id`, `certificate_status`)', v_indent_level + 3);
        CALL `ddr_util`.`add_code_line`(v_return, 'VALUES', v_indent_level + 2);
        CALL `ddr_util`.`add_code_line`(v_return, '(NEW.`person_id`, NEW.`site_id`, NEW.`id`, NEW.`prs_mot_test_id`, NEW.`vin`, NEW.`registration`, NEW.`make_id`, NEW.`model_id`, NEW.`model_detail_id`, NEW.`make_name`, NEW.`model_name`, NEW.`model_detail_name`, NEW.`status_id`, NEW.`document_id`, \'NEW\');', v_indent_level + 3);
        CALL `ddr_util`.`add_code_line`(v_return, 'END IF;', v_indent_level + 1);
        CALL `ddr_util`.`add_code_line`(v_return, 'END IF;', v_indent_level);
    END IF;

    
    SET v_indent_level = 0;
    CALL `ddr_util`.`add_code_line`(v_return, 'END;', v_indent_level);

    CALL `ddr_util`.`logger`('debug', c_module, CONCAT('Trigger code is ', v_return));

    RETURN v_return;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `get_etl_user_id` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  FUNCTION `get_etl_user_id`() RETURNS int(10) unsigned
    NO SQL
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    IF (@etl_user_id IS NULL)
    THEN
        CALL `ddr_util`.`set_etl_user_id`; 
    END IF;

    return @etl_user_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `get_log_level` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  FUNCTION `get_log_level`() RETURNS varchar(10) CHARSET latin1
    NO SQL
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    IF (@ddr_log_level IS NULL) 
    THEN
        CALL `ddr_util`.`set_log_level`(NULL); 
    END IF;

    return @ddr_log_level;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `get_model_detail_sha1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  FUNCTION `get_model_detail_sha1`(p_body_type_id SMALLINT(5) UNSIGNED,
                                                   p_cylinder_capacity INTEGER(10) UNSIGNED,
                                                   p_eu_classification VARCHAR(2) CHARSET utf8,
                                                   p_fuel_type_id SMALLINT(5) UNSIGNED,
                                                   p_transmission_type_id SMALLINT(5) UNSIGNED,
                                                   p_vehicle_class_id SMALLINT(5) UNSIGNED,
                                                   p_wheelplan_type_id SMALLINT(5) UNSIGNED,
                                                   p_model_id INTEGER(10) UNSIGNED) RETURNS char(40) CHARSET latin1
    NO SQL
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE v_return CHAR(40) CHARSET latin1 DEFAULT SHA1(CONCAT_WS(CHAR(9 USING latin1),
                                                                    IFNULL(p_body_type_id, ''),
                                                                    IFNULL(p_cylinder_capacity, ''),
                                                                    IF(p_eu_classification IS NULL, '', QUOTE(p_eu_classification)),
                                                                    IFNULL(p_fuel_type_id, ''),
                                                                    IFNULL(p_transmission_type_id, ''),
                                                                    IFNULL(p_vehicle_class_id, ''),
                                                                    IFNULL(p_wheelplan_type_id, ''),
                                                                    IFNULL(p_model_id, '')));
    RETURN v_return;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `get_object_name` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  FUNCTION `get_object_name`(p_object_name VARCHAR(64)
                                            ,p_prefix VARCHAR(64)
                                            ,p_suffix VARCHAR(64)
                                            ) RETURNS varchar(64) CHARSET utf8
    NO SQL
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'get_object_name';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_delimiter VARCHAR(1) DEFAULT '_';
    DECLARE c_max_object_name_length TINYINT DEFAULT 64;

    DECLARE v_object_name VARCHAR(64);
    DECLARE v_suffix VARCHAR(64);

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text
                                                             ,IFNULL(p_object_name, c_null)
                                                             ,IFNULL(p_prefix, c_null)
                                                             ,IFNULL(p_suffix, c_null)
                                                             ));
        RESIGNAL;
    END;

    IF p_prefix IS NOT NULL
    THEN
        SET v_object_name := SUBSTR(CONCAT(p_prefix, c_delimiter, p_object_name), 1, c_max_object_name_length);
    ELSE
        SET v_object_name := p_object_name;
    END IF;

    IF p_suffix IS NOT NULL
    THEN
        SET v_suffix := CONCAT(c_delimiter, p_suffix);
        SET v_object_name := CONCAT(SUBSTR(v_object_name, 1, (c_max_object_name_length - LENGTH(v_suffix)))
                                   ,v_suffix);
    END IF;

    CALL `ddr_util`.`logger`('debug', c_module, CONCAT('Returned object name is ', v_object_name));

    RETURN v_object_name;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `is_column_exists` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  FUNCTION `is_column_exists`(p_schema VARCHAR(64),
                                              p_table_name VARCHAR(64),
                                              p_column_name VARCHAR(64)) RETURNS tinyint(1)
    READS SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'is_column_exists';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE v_exists TINYINT DEFAULT 0;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_schema, c_null), 
                                                              IFNULL(p_table_name, c_null),
                                                              IFNULL(p_column_name, c_null)));
        RESIGNAL;
    END;

    IF (p_schema IS NULL OR p_table_name IS NULL OR p_column_name IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Neither Schema, Table Name, nor Column Name can be NULL';
    END IF;

    SELECT COUNT(*) INTO v_exists
      FROM `information_schema`.`columns` t
     WHERE t.`table_catalog` = 'def' 
       AND t.`table_schema` = p_schema
       AND t.`table_name` = p_table_name
       AND t.`column_name` = p_column_name;

    RETURN IF(v_exists != 0, TRUE, FALSE);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `is_data_deletion_watch_table` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  FUNCTION `is_data_deletion_watch_table`(p_source_schema VARCHAR(64),
                                                          p_table_name VARCHAR(64)) RETURNS tinyint(1)
    READS SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'is_data_deletion_watch_table';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE v_exists TINYINT DEFAULT 0;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_source_schema, c_null), 
                                                              IFNULL(p_table_name, c_null)));
        RESIGNAL;
    END;

    IF (p_source_schema IS NULL OR p_table_name IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Neither Schema, nor Table Name can be NULL';
    END IF;

    SELECT COUNT(*) INTO v_exists
      FROM `ddr_util`.`ddr_refactor_table` t
     WHERE t.`source_schema` = p_source_schema
       AND t.`table_name` = p_table_name
       AND t.`watch_deletions` = TRUE;

    SET v_exists := IFNULL(v_exists, 0);

    RETURN v_exists > 0;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `is_table_exists` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  FUNCTION `is_table_exists`(p_schema VARCHAR(64),
                                             p_table_name VARCHAR(64)) RETURNS tinyint(1)
    READS SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'is_table_exists';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE v_exists TINYINT DEFAULT 0;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_schema, c_null), 
                                                              IFNULL(p_table_name, c_null)));
        RESIGNAL;
    END;

    IF (p_schema IS NULL OR p_table_name IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Neither Schema, nor Table Name can be NULL';
    END IF;

    SELECT COUNT(*) INTO v_exists
      FROM `information_schema`.`TABLES` t
     WHERE t.`TABLE_CATALOG` = 'def' 
       AND t.`TABLE_SCHEMA` = p_schema
       AND t.`TABLE_NAME` = p_table_name
       AND t.`TABLE_TYPE` = 'BASE TABLE';

    RETURN IF(v_exists != 0, TRUE, FALSE);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `is_truncate_allowed` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  FUNCTION `is_truncate_allowed`(p_schema VARCHAR(64),
                                                 p_table_name VARCHAR(64)) RETURNS tinyint(1)
    READS SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'is_truncate_allowed';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_migration_requirement_iterative VARCHAR(16) DEFAULT 'iterative';
    DECLARE c_deny_truncate BOOLEAN DEFAULT FALSE;

    DECLARE v_allow_truncate TINYINT DEFAULT NULL;
    DECLARE v_is_truncate_required_before_migrate BOOLEAN DEFAULT NULL;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_schema, c_null), 
                                                              IFNULL(p_table_name, c_null)));
        RESIGNAL;
    END;

    IF (p_schema IS NULL OR p_table_name IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Neither Schema, nor Table Name can be NULL';
    END IF;

    
    
    
    
    SELECT NOT (t.`migration_requirements` = c_migration_requirement_iterative)
      INTO v_allow_truncate
      FROM `ddr_util`.`ddr_refactor_table` t
     WHERE t.`target_schema` = p_schema
       AND t.`table_name` = p_table_name;

    RETURN IFNULL(v_allow_truncate, c_deny_truncate);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `vrm_fix` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  FUNCTION `vrm_fix`(p_vrm VARCHAR(50)) RETURNS varchar(50) CHARSET latin1
    NO SQL
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    RETURN UPPER(REPLACE(p_vrm, ' ', ''));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `add_boilerplate` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `add_boilerplate`(INOUT p_code VARCHAR(8000),
                                              IN    p_object_name VARCHAR(64),
                                              IN    p_include_version_information BOOLEAN)
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'add_boilerplate';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_comment_timestamp VARCHAR(100) DEFAULT CONCAT('-- ', p_object_name, ' Generated on ', SYSDATE());
    DECLARE c_version_comment VARCHAR(256) DEFAULT CONCAT('DECLARE c_version VARCHAR(256) DEFAULT ''', p_object_name, ' Generated on ', SYSDATE(), '. $Id', '$'';');

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_object_name, c_null), 
                                                              IFNULL(p_include_version_information, c_null)));
        RESIGNAL;
    END;

    IF (p_object_name IS NULL OR p_include_version_information IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'IN arguments cannot be NULL';
    END IF;

    CALL `ddr_util`.`add_code_line`(p_code, c_comment_timestamp, 1);

    IF p_include_version_information
    THEN
        CALL `ddr_util`.`add_code_line`(p_code, c_version_comment, 1);
    END IF;

    CALL `ddr_util`.`add_code_line`(p_code, '', 1); 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `add_code_line` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `add_code_line`(INOUT p_code VARCHAR(8000)
                                           ,IN p_add_line VARCHAR(256)
                                           ,IN p_indent_level INTEGER UNSIGNED
                                           )
    NO SQL
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'add_code_line';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_eol VARCHAR(2) DEFAULT CHAR(10);
    DECLARE c_indent INTEGER DEFAULT 4;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_add_line, c_null), 
                                                              IFNULL(p_indent_level, c_null)));
        RESIGNAL;
    END;

    IF (p_indent_level IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Indent Level cannot be NULL';
    END IF;

    SET p_code := CONCAT(IFNULL(p_code, '')
                        ,c_eol
                        ,RPAD(' ', c_indent * p_indent_level, ' ')
                        ,IFNULL(TRIM(p_add_line), ''));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `all_analyze_tables` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `all_analyze_tables`(p_schema VARCHAR(64),
                                                 p_table_name_pattern VARCHAR(64))
    READS SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'all_analyze_tables';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_cat_table_refs VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`(p_schema, p_table_name_pattern);

    DECLARE v_table_name VARCHAR(64) DEFAULT NULL;
    DECLARE v_is_not_found BOOLEAN DEFAULT FALSE;
    DECLARE cur_stmt CURSOR FOR SELECT `TABLE_NAME`
                                  FROM `information_schema`.`TABLES`
                                 WHERE `TABLE_CATALOG` = 'def' 
                                   AND `TABLE_SCHEMA` = p_schema
                                   AND `TABLE_NAME` LIKE p_table_name_pattern
                                   AND `TABLE_TYPE` = 'BASE TABLE'
                                 ORDER BY `TABLE_NAME`;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_is_not_found = TRUE;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_schema, c_null), 
                                                              IFNULL(p_table_name_pattern, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (p_schema IS NULL OR p_table_name_pattern IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Neither schema nor table name pattern can be NULL';
    END IF;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Started issuing analyze table on ', c_cat_table_refs));

    OPEN cur_stmt;
    REPEAT
        FETCH cur_stmt INTO v_table_name;
        IF (NOT v_is_not_found)
        THEN
            CALL `ddr_util`.`logger`('debug', c_module, CONCAT('Aiming to issue table anaylze for ', `ddr_util`.`cat_table_refs`(p_schema, v_table_name)));
            CALL `ddr_util`.`analyze_table`(p_schema, v_table_name);
        END IF;
    UNTIL v_is_not_found END REPEAT;

    CLOSE cur_stmt;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Finished issuing analyze table on ', c_cat_table_refs));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `all_create_hist_tables` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `all_create_hist_tables`(p_source_non_hist_table_schema VARCHAR(64),
                                                     p_target_hist_table_schema VARCHAR(64),
                                                     p_table_name_pattern VARCHAR(64))
    READS SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'all_create_hist_tables';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_cat_table_refs VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`(p_target_hist_table_schema, p_table_name_pattern);

    DECLARE v_table_name VARCHAR(64) DEFAULT NULL;
    DECLARE v_is_not_found BOOLEAN DEFAULT FALSE;
    DECLARE cur_stmt CURSOR FOR SELECT `table_name`
                                  FROM `ddr_util`.`ddr_refactor_table`
                                 WHERE `generate_triggers` = TRUE
                                   
                                   AND `target_schema` = p_target_hist_table_schema
                                   AND `table_name` LIKE p_table_name_pattern
                                 ORDER BY `source_schema`, `target_schema`, `table_name`;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_is_not_found = TRUE;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_source_non_hist_table_schema, c_null),
                                                              IFNULL(p_target_hist_table_schema, c_null),
                                                              IFNULL(p_table_name_pattern, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (p_source_non_hist_table_schema IS NULL OR p_target_hist_table_schema IS NULL OR p_table_name_pattern IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Source schema, target schema, and table name pattern cannot be NULL';
    END IF;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Started dropping and recreating ', c_cat_table_refs, ' history tables'));

    OPEN cur_stmt;
    REPEAT
        FETCH cur_stmt INTO v_table_name;
        IF (NOT v_is_not_found)
        THEN
            CALL `ddr_util`.`logger`('debug', c_module, CONCAT('Aiming to drop and recreate history table ', `ddr_util`.`cat_table_refs`(p_target_hist_table_schema, v_table_name)));
            CALL `ddr_util`.`create_hist_table`(p_source_non_hist_table_schema, p_target_hist_table_schema, v_table_name);
        END IF;
    UNTIL v_is_not_found END REPEAT;

    CLOSE cur_stmt;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Finished dropping and recreating ', c_cat_table_refs, ' history tables'));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `all_data_deletion_watches` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `all_data_deletion_watches`(p_source_schema VARCHAR(64),
                                                        p_target_schema VARCHAR(64),
                                                        p_table_name_pattern VARCHAR(64))
    READS SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'all_data_deletion_watches';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE v_table_name VARCHAR(64) DEFAULT NULL;
    DECLARE v_is_not_found BOOLEAN DEFAULT FALSE;
    DECLARE cur_stmt CURSOR FOR SELECT `table_name`
                                  FROM `ddr_util`.`ddr_refactor_table`
                                 WHERE `source_schema` = p_source_schema
                                   AND `target_schema` = p_target_schema
                                   AND `table_name` LIKE p_table_name_pattern
                                   AND `watch_deletions` = TRUE
                                 ORDER BY `table_name`;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_is_not_found = TRUE;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_source_schema, c_null), 
                                                              IFNULL(p_target_schema, c_null), 
                                                              IFNULL(p_table_name_pattern, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (p_source_schema IS NULL OR p_target_schema IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Neither Source nor Target schema can be NULL';
    END IF;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Started DELETE from tables matching: ', `ddr_util`.`cat_table_refs`(p_target_schema, p_table_name_pattern)));

    OPEN cur_stmt;
    REPEAT
        FETCH cur_stmt INTO v_table_name;
        IF (NOT v_is_not_found)
        THEN
            CALL `ddr_util`.`logger`('debug', c_module, CONCAT('Aiming to DELETE from ', `ddr_util`.`cat_table_refs`(p_target_schema, v_table_name)));
            CALL `ddr_util`.`data_deletion_watch`(p_source_schema, p_target_schema, v_table_name);
        END IF;
    UNTIL v_is_not_found END REPEAT;

    CLOSE cur_stmt;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Finished DELETE from tables matching: ', `ddr_util`.`cat_table_refs`(p_target_schema, p_table_name_pattern)));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `all_data_fk_checks` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `all_data_fk_checks`(p_schema VARCHAR(64),
                                                 p_table_name_pattern VARCHAR(64))
    READS SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'all_data_fk_checks';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE v_table_name VARCHAR(64) DEFAULT NULL;
    DECLARE v_is_not_found BOOLEAN DEFAULT FALSE;
    DECLARE cur_stmt CURSOR FOR SELECT `TABLE_NAME`
                                 FROM `information_schema`.`TABLES`
                                WHERE `TABLE_CATALOG` = 'def'
                                  AND `TABLE_SCHEMA` = p_schema
                                  AND `TABLE_NAME` LIKE p_table_name_pattern
                                  AND `TABLE_NAME` NOT LIKE '%_hist'
                                ORDER BY `TABLE_NAME`;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_is_not_found = TRUE;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_schema, c_null), 
                                                              IFNULL(p_table_name_pattern, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (p_schema IS NULL OR p_table_name_pattern IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Neither schema not table name pattern can be NULL';
    END IF;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Started check FK for tables matching: ', `ddr_util`.`cat_table_refs`(p_schema, p_table_name_pattern)));

    OPEN cur_stmt;
    REPEAT
        FETCH cur_stmt INTO v_table_name;
        IF (NOT v_is_not_found)
        THEN
            CALL `ddr_util`.`logger`('debug', c_module, CONCAT('Aiming to check FKs for ', `ddr_util`.`cat_table_refs`(p_schema, v_table_name)));
            CALL `ddr_util`.`data_fk_check`(p_schema, v_table_name, NULL);
        END IF;
    UNTIL v_is_not_found END REPEAT;

    CLOSE cur_stmt;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Finished check FK for tables matching: ', `ddr_util`.`cat_table_refs`(p_schema, p_table_name_pattern)));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `all_drop_created_updated_by_fks` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `all_drop_created_updated_by_fks`(p_schema VARCHAR(64),
                                                              p_table_name_pattern VARCHAR(64))
    READS SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'all_drop_created_updated_by_fks';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_cat_table_refs VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`(p_schema, p_table_name_pattern);

    DECLARE v_table_name VARCHAR(64) DEFAULT NULL;
    DECLARE v_is_not_found BOOLEAN DEFAULT FALSE;
    DECLARE cur_stmt CURSOR FOR SELECT `TABLE_NAME`
                                  FROM `information_schema`.`TABLES`
                                 WHERE `TABLE_CATALOG` = 'def' 
                                   AND `TABLE_SCHEMA` = p_schema
                                   AND `TABLE_NAME` LIKE p_table_name_pattern
                                   AND `TABLE_TYPE` = 'BASE TABLE'
                                 ORDER BY `TABLE_NAME`;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_is_not_found = TRUE;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_schema, c_null), 
                                                              IFNULL(p_table_name_pattern, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (p_schema IS NULL OR p_table_name_pattern IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Neither Source nor table name pattern can be NULL';
    END IF;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Started dropping ', c_cat_table_refs, ' FKs on to `created_by`/`last_updated_by`'));

    OPEN cur_stmt;
    REPEAT
        FETCH cur_stmt INTO v_table_name;
        IF (NOT v_is_not_found)
        THEN
            CALL `ddr_util`.`logger`('debug', c_module, CONCAT('Aiming to drop FKs and indexes on `created_by`/`last_updated_by` for ', `ddr_util`.`cat_table_refs`(p_schema, v_table_name)));
            CALL `ddr_util`.`drop_created_updated_by_fks`(p_schema, v_table_name);
        END IF;
    UNTIL v_is_not_found END REPEAT;

    CLOSE cur_stmt;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Finished dropping ', c_cat_table_refs, ' FKs on to `created_by`/`last_updated_by`'));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `all_drop_fks_from_table` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `all_drop_fks_from_table`(p_schema VARCHAR(64),
                                                      p_table_name_pattern VARCHAR(64))
    READS SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'all_drop_fks_from_table';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_cat_table_refs VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`(p_schema, p_table_name_pattern);

    DECLARE v_table_name VARCHAR(64) DEFAULT NULL;
    DECLARE v_is_not_found BOOLEAN DEFAULT FALSE;
    DECLARE cur_stmt CURSOR FOR SELECT `TABLE_NAME`
                                  FROM `information_schema`.`TABLES`
                                 WHERE `TABLE_CATALOG` = 'def' 
                                   AND `TABLE_SCHEMA` = p_schema
                                   AND `TABLE_NAME` LIKE p_table_name_pattern
                                   AND `TABLE_TYPE` = 'BASE TABLE'
                                 ORDER BY `TABLE_NAME`;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_is_not_found = TRUE;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_schema, c_null), 
                                                              IFNULL(p_table_name_pattern, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (p_schema IS NULL OR p_table_name_pattern IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Neither schema nor table name pattern can be NULL';
    END IF;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Started dropping ', c_cat_table_refs, ' outward FKs and indexes'));

    OPEN cur_stmt;
    REPEAT
        FETCH cur_stmt INTO v_table_name;
        IF (NOT v_is_not_found)
        THEN
            CALL `ddr_util`.`logger`('debug', c_module, CONCAT('Aiming to drop ALL outward FKs and indexes from ', `ddr_util`.`cat_table_refs`(p_schema, v_table_name)));
            CALL `ddr_util`.`drop_fks_from_table`(p_schema, v_table_name);
        END IF;
    UNTIL v_is_not_found END REPEAT;

    CLOSE cur_stmt;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Finished dropping ', c_cat_table_refs, ' outward FKs and indexes'));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `all_drop_hist_tables` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `all_drop_hist_tables`(p_schema VARCHAR(64),
                                                   p_table_name_pattern VARCHAR(64))
    READS SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'all_drop_hist_tables';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_cat_table_refs VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`(p_schema, p_table_name_pattern);

    DECLARE v_table_name VARCHAR(64) DEFAULT NULL;
    DECLARE v_is_not_found BOOLEAN DEFAULT FALSE;
    DECLARE cur_stmt CURSOR FOR SELECT `TABLE_NAME`
                                  FROM `information_schema`.`TABLES`
                                 WHERE `TABLE_CATALOG` = 'def' 
                                   AND `TABLE_SCHEMA` = p_schema
                                   AND `TABLE_NAME` LIKE p_table_name_pattern
                                   AND `TABLE_TYPE` = 'BASE TABLE'
                                 ORDER BY `TABLE_NAME`;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_is_not_found = TRUE;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_schema, c_null), 
                                                              IFNULL(p_table_name_pattern, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (p_schema IS NULL OR p_table_name_pattern IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Neither Source nor table name pattern can be NULL';
    END IF;

    IF (NOT p_table_name_pattern LIKE '%_hist')
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'History table names must end with _hist, and this table name pattern to not allow for that';
    END IF;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Started dropping ', c_cat_table_refs, ' history tables'));

    OPEN cur_stmt;
    REPEAT
        FETCH cur_stmt INTO v_table_name;
        IF (NOT v_is_not_found)
        THEN
            CALL `ddr_util`.`logger`('debug', c_module, CONCAT('Aiming to drop history table ', `ddr_util`.`cat_table_refs`(p_schema, v_table_name)));
            CALL `ddr_util`.`drop_hist_table`(p_schema, v_table_name);
        END IF;
    UNTIL v_is_not_found END REPEAT;

    CLOSE cur_stmt;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Finished dropping ', c_cat_table_refs, ' history tables'));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `all_drop_non_unique_indexes` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `all_drop_non_unique_indexes`(p_schema VARCHAR(64),
                                                          p_table_name_pattern VARCHAR(64))
    READS SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'all_drop_non_unique_indexes';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_cat_table_refs VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`(p_schema, p_table_name_pattern);

    DECLARE v_table_name VARCHAR(64) DEFAULT NULL;
    DECLARE v_is_not_found BOOLEAN DEFAULT FALSE;
    DECLARE cur_stmt CURSOR FOR SELECT `TABLE_NAME`
                                  FROM `information_schema`.`TABLES`
                                 WHERE `TABLE_CATALOG` = 'def' 
                                   AND `TABLE_SCHEMA` = p_schema
                                   AND `TABLE_NAME` LIKE p_table_name_pattern
                                   AND `TABLE_TYPE` = 'BASE TABLE'
                                 ORDER BY `TABLE_NAME`;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_is_not_found = TRUE;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_schema, c_null), 
                                                              IFNULL(p_table_name_pattern, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (p_schema IS NULL OR p_table_name_pattern IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Neither Source nor table name pattern can be NULL';
    END IF;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Started dropping ', c_cat_table_refs, ' non-unique indexes'));

    OPEN cur_stmt;
    REPEAT
        FETCH cur_stmt INTO v_table_name;
        IF (NOT v_is_not_found)
        THEN
            CALL `ddr_util`.`logger`('debug', c_module, CONCAT('Aiming to drop non-unique indexes from ', `ddr_util`.`cat_table_refs`(p_schema, v_table_name)));
            CALL `ddr_util`.`drop_non_unique_indexes`(p_schema, v_table_name);
        END IF;
    UNTIL v_is_not_found END REPEAT;

    CLOSE cur_stmt;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Finished dropping ', c_cat_table_refs, ' non-unique indexes'));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `all_iterative_migrations` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `all_iterative_migrations`(p_source_schema VARCHAR(64),
                                                       p_target_schema VARCHAR(64),
                                                       p_table_name_pattern VARCHAR(64),
                                                       p_id_range_increment INTEGER UNSIGNED)
    READS SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'all_iterative_migrations';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_cat_table_refs VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`(p_source_schema, p_table_name_pattern);
    DECLARE c_arbitrary_id_range_increment INTEGER UNSIGNED DEFAULT IFNULL(p_id_range_increment, 1000000);

    DECLARE c_truncate_is_not_required BOOLEAN DEFAULT FALSE; 
    DECLARE c_migration_requirement_iterative VARCHAR(16) DEFAULT 'iterative';
    DECLARE c_where_is_required BOOLEAN DEFAULT TRUE; 
    DECLARE c_default_max_id_value BIGINT DEFAULT -1;

    DECLARE v_max_id_for_table BIGINT DEFAULT c_default_max_id_value;
    DECLARE v_table_name VARCHAR(64) DEFAULT NULL;
    DECLARE v_is_not_found BOOLEAN DEFAULT FALSE;
    DECLARE cur_stmt CURSOR FOR SELECT `table_name`
                                  FROM `ddr_util`.`ddr_refactor_table`
                                 WHERE `source_schema` = p_source_schema
                                   AND `target_schema` = p_target_schema
                                   AND `table_name` LIKE p_table_name_pattern
                                   AND `migration_requirements` = c_migration_requirement_iterative
                                 ORDER BY `table_name`; 
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_is_not_found = TRUE;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_source_schema, c_null), 
                                                              IFNULL(p_target_schema, c_null), 
                                                              IFNULL(p_table_name_pattern, c_null),
                                                              IFNULL(p_id_range_increment, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (p_source_schema IS NULL OR p_target_schema IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Neither Source nor Target schema can be NULL';
    END IF;

    IF (c_arbitrary_id_range_increment < 1)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Range Increment must be greater than 1 (one)';
    END IF;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Started migrating ', c_cat_table_refs, ' to `', p_target_schema, '`'));

    OPEN cur_stmt;
    REPEAT
        FETCH cur_stmt INTO v_table_name;
        IF (NOT v_is_not_found)
        THEN
            CALL `ddr_util`.`get_max_id_for_table`(p_target_schema, v_table_name, v_max_id_for_table);

            CALL `ddr_util`.`logger`('debug', c_module, CONCAT('Aiming to migrate ',
                                                               `ddr_util`.`cat_table_refs`(p_source_schema, v_table_name),
                                                               ' to `', p_target_schema, '` with ID range ',
                                                               v_max_id_for_table + 1, ' to ',
                                                               v_max_id_for_table + c_arbitrary_id_range_increment));
            CALL `ddr_util`.`migrate_single_table`(p_source_schema,
                                                   p_target_schema,
                                                   v_table_name,
                                                   NULL, NULL,
                                                   v_max_id_for_table + 1, v_max_id_for_table + c_arbitrary_id_range_increment,
                                                   c_truncate_is_not_required, c_where_is_required);
            CALL `ddr_util`.`analyze_table`(p_target_schema, v_table_name);
        END IF;
    UNTIL v_is_not_found END REPEAT;

    CLOSE cur_stmt;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Finished migrating ', c_cat_table_refs, ' to `', p_target_schema, '`'));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `all_iterative_migrations_date_ranged` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `all_iterative_migrations_date_ranged`(p_source_schema VARCHAR(64),
                                                                   p_target_schema VARCHAR(64),
                                                                   p_table_name_pattern VARCHAR(64),
                                                                   p_date_from DATETIME,
                                                                   p_date_to DATETIME)
    READS SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'all_iterative_migrations_date_ranged';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_cat_table_refs VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`(p_source_schema, p_table_name_pattern);
    DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
    DECLARE c_truncate_is_not_required BOOLEAN DEFAULT FALSE; 
    DECLARE c_migration_requirement_iterative VARCHAR(16) DEFAULT 'iterative';
    DECLARE c_where_is_required BOOLEAN DEFAULT TRUE; 

    DECLARE v_table_name VARCHAR(64) DEFAULT NULL;
    DECLARE v_is_not_found BOOLEAN DEFAULT FALSE;
    DECLARE cur_stmt CURSOR FOR SELECT `table_name`
                                  FROM `ddr_util`.`ddr_refactor_table`
                                 WHERE `source_schema` = p_source_schema
                                   AND `target_schema` = p_target_schema
                                   AND `table_name` LIKE p_table_name_pattern
                                   AND `table_name` NOT LIKE '%hist'
                                   AND `migration_requirements` = c_migration_requirement_iterative
                                 ORDER BY `table_name`; 
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_is_not_found = TRUE;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_source_schema, c_null), 
                                                              IFNULL(p_target_schema, c_null), 
                                                              IFNULL(p_table_name_pattern, c_null),
                                                              IFNULL(p_date_from, c_null), 
                                                              IFNULL(p_date_to, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (p_source_schema IS NULL OR p_target_schema IS NULL OR p_table_name_pattern IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Source schema, target schema, and table name pattern cannot be NULL';
    END IF;

    IF (LOWER(p_table_name_pattern) LIKE '%hist')
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Table name pattern cannot be a history table';
    END IF;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Started migrating ', c_cat_table_refs, ' to `', p_target_schema, '`'));

    OPEN cur_stmt;
    REPEAT
        FETCH cur_stmt INTO v_table_name;
        IF (NOT v_is_not_found)
        THEN
            CALL `ddr_util`.`logger`('debug', c_module, CONCAT('Aiming to migrate ',
                                                               `ddr_util`.`cat_table_refs`(p_source_schema, v_table_name),
                                                               ' to `', p_target_schema, '` with date range ',
                                                               IFNULL(p_date_from, c_null), ' to ',
                                                               IFNULL(p_date_to, c_null)));
            CALL `ddr_util`.`migrate_single_table`(p_source_schema,
                                                   p_target_schema,
                                                   v_table_name,
                                                   p_date_from, p_date_to,
                                                   NULL, NULL,
                                                   c_truncate_is_not_required, c_where_is_required);
            
        END IF;
    UNTIL v_is_not_found END REPEAT;

    CLOSE cur_stmt;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Finished migrating ', c_cat_table_refs, ' to `', p_target_schema, '`'));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `all_reconstitute_fks_on_table` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `all_reconstitute_fks_on_table`(p_schema VARCHAR(64),
                                                            p_table_name_pattern VARCHAR(64))
    READS SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'all_reconstitute_fks_on_table';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_cat_table_refs VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`(p_schema, p_table_name_pattern);

    DECLARE v_table_name VARCHAR(64) DEFAULT NULL;
    DECLARE v_is_not_found BOOLEAN DEFAULT FALSE;
    DECLARE cur_stmt CURSOR FOR SELECT DISTINCT tab_.`TABLE_NAME`
                                  FROM `information_schema`.`TABLES` tab_
                                  JOIN `ddr_util`.`ddr_fk_key_column_usage` fku_
                                    ON (fku_.`table_schema` = tab_.`TABLE_SCHEMA` AND fku_.`table_name` = tab_.`TABLE_NAME`)
                                 WHERE tab_.`TABLE_CATALOG` = 'def' 
                                   AND tab_.`TABLE_SCHEMA` = p_schema
                                   AND tab_.`TABLE_NAME` LIKE p_table_name_pattern
                                   AND tab_.`TABLE_TYPE` = 'BASE TABLE'
                                 ORDER BY tab_.`TABLE_NAME`;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_is_not_found = TRUE;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_schema, c_null), 
                                                              IFNULL(p_table_name_pattern, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (p_schema IS NULL OR p_table_name_pattern IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Neither schema nor table name pattern can be NULL';
    END IF;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Started reconstituting ', c_cat_table_refs, ' FKs and indexes'));

    OPEN cur_stmt;
    REPEAT
        FETCH cur_stmt INTO v_table_name;
        IF (NOT v_is_not_found)
        THEN
            CALL `ddr_util`.`logger`('debug', c_module, CONCAT('Aiming to reconstitute FKs on ', `ddr_util`.`cat_table_refs`(p_schema, v_table_name)));
            CALL `ddr_util`.`reconstitute_fks_on_table`(p_schema, v_table_name);
        END IF;
    UNTIL v_is_not_found END REPEAT;

    CLOSE cur_stmt;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Finished reconstituting ', c_cat_table_refs, ' FKs and indexes'));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `all_record_and_drop_fks_from_table` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `all_record_and_drop_fks_from_table`(p_schema VARCHAR(64),
                                                                 p_table_name_pattern VARCHAR(64))
    READS SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'all_record_and_drop_fks_from_table';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_cat_table_refs VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`(p_schema, p_table_name_pattern);

    DECLARE v_table_name VARCHAR(64) DEFAULT NULL;
    DECLARE v_is_not_found BOOLEAN DEFAULT FALSE;
    DECLARE cur_stmt CURSOR FOR SELECT `TABLE_NAME`
                                  FROM `information_schema`.`TABLES`
                                 WHERE `TABLE_CATALOG` = 'def' 
                                   AND `TABLE_SCHEMA` = p_schema
                                   AND `TABLE_NAME` LIKE p_table_name_pattern
                                   AND `TABLE_TYPE` = 'BASE TABLE'
                                 ORDER BY `TABLE_NAME`;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_is_not_found = TRUE;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_schema, c_null), 
                                                              IFNULL(p_table_name_pattern, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (p_schema IS NULL OR p_table_name_pattern IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Neither schema nor table name pattern can be NULL';
    END IF;

    IF (LOWER(p_schema) IN ('mot_v195_rel4', 'mysql', 'information_schema', 'performance_schema'))
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'This schema''s tables cannot be TRUNCATEd';
    END IF;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Started recording and dropping ', c_cat_table_refs, ' FKs and indexes'));

    OPEN cur_stmt;
    REPEAT
        FETCH cur_stmt INTO v_table_name;
        IF (NOT v_is_not_found)
        THEN
            CALL `ddr_util`.`logger`('debug', c_module, CONCAT('Aiming to record and drop ALL FKs and indexes from ', `ddr_util`.`cat_table_refs`(p_schema, v_table_name)));
            CALL `ddr_util`.`record_and_drop_fks_from_table`(p_schema, v_table_name);
        END IF;
    UNTIL v_is_not_found END REPEAT;

    CLOSE cur_stmt;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Finished recording and dropping ', c_cat_table_refs, ' FKs and indexes'));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `all_set_engine_for_table` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `all_set_engine_for_table`(p_schema VARCHAR(64),
                                                       p_table_name_pattern VARCHAR(64),
                                                       p_new_engine VARCHAR(16))
    READS SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'all_set_engine_for_table';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_cat_table_refs VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`(p_schema, p_table_name_pattern);

    DECLARE v_table_name VARCHAR(64) DEFAULT NULL;
    DECLARE v_is_not_found BOOLEAN DEFAULT FALSE;
    DECLARE cur_stmt CURSOR FOR SELECT `TABLE_NAME`
                                  FROM `information_schema`.`TABLES`
                                 WHERE `TABLE_CATALOG` = 'def' 
                                   AND `TABLE_SCHEMA` = p_schema
                                   AND `TABLE_NAME` LIKE p_table_name_pattern
                                   AND `TABLE_TYPE` = 'BASE TABLE'
                                 ORDER BY `TABLE_NAME`;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_is_not_found = TRUE;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_schema, c_null), 
                                                              IFNULL(p_table_name_pattern, c_null),
                                                              IFNULL(p_new_engine, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (p_schema IS NULL OR p_table_name_pattern IS NULL OR p_new_engine IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Neither schema, table name pattern, nor new engine can be NULL';
    END IF;

    IF (TRIM(p_table_name_pattern) = '%')
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Vanilla wildcard of \'%\' is not allowed';
    END IF;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Started altering engine on ', c_cat_table_refs, ' to ', QUOTE(UPPER(p_new_engine))));

    OPEN cur_stmt;
    REPEAT
        FETCH cur_stmt INTO v_table_name;
        IF (NOT v_is_not_found)
        THEN
            CALL `ddr_util`.`logger`('debug', c_module, CONCAT('Aiming to storage engine for ', `ddr_util`.`cat_table_refs`(p_schema, v_table_name)));
            CALL `ddr_util`.`set_engine_for_table`(p_schema, v_table_name, p_new_engine);
        END IF;
    UNTIL v_is_not_found END REPEAT;

    CLOSE cur_stmt;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Finished altering engine on ', c_cat_table_refs, ' to ', QUOTE(UPPER(p_new_engine))));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `all_single_table_migrations` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `all_single_table_migrations`(p_source_schema VARCHAR(64),
                                                          p_target_schema VARCHAR(64),
                                                          p_table_name_pattern VARCHAR(64))
    READS SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'all_single_table_migrations';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_truncate_is_required BOOLEAN DEFAULT TRUE; 
    DECLARE c_migration_requirement_single VARCHAR(16) DEFAULT 'single table';
    DECLARE c_where_is_not_required BOOLEAN DEFAULT FALSE; 
    DECLARE c_cat_table_refs VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`(p_source_schema, p_table_name_pattern);

    DECLARE v_table_name VARCHAR(64) DEFAULT NULL;
    DECLARE v_is_not_found BOOLEAN DEFAULT FALSE;
    DECLARE cur_stmt CURSOR FOR SELECT `table_name`
                                  FROM `ddr_util`.`ddr_refactor_table`
                                 WHERE `source_schema` = p_source_schema
                                   AND `target_schema` = p_target_schema
                                   AND `table_name` LIKE p_table_name_pattern
                                   AND `migration_requirements` = c_migration_requirement_single
                                 ORDER BY `table_name`; 
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_is_not_found = TRUE;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_source_schema, c_null), 
                                                              IFNULL(p_target_schema, c_null), 
                                                              IFNULL(p_table_name_pattern, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (p_source_schema IS NULL OR p_target_schema IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Neither Source nor Target schema can be NULL';
    END IF;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Started migrating ', c_cat_table_refs, ' to `', p_target_schema, '`'));

    OPEN cur_stmt;
    REPEAT
        FETCH cur_stmt INTO v_table_name;
        IF (NOT v_is_not_found)
        THEN
            CALL `ddr_util`.`logger`('debug', c_module, CONCAT('Aiming to migrate ', `ddr_util`.`cat_table_refs`(p_source_schema, v_table_name), ' to ', `ddr_util`.`cat_table_refs`(p_target_schema, v_table_name)));
            CALL `ddr_util`.`migrate_single_table`(p_source_schema, p_target_schema, v_table_name, NULL, NULL, NULL, NULL, c_truncate_is_required, c_where_is_not_required);
            CALL `ddr_util`.`analyze_table`(p_target_schema, v_table_name);
        END IF;
    UNTIL v_is_not_found END REPEAT;

    CLOSE cur_stmt;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Finished migrating ', c_cat_table_refs, ' to `', p_target_schema, '`'));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `analyze_table` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `analyze_table`(p_schema VARCHAR(64),
                                            p_table_name VARCHAR(64))
    NO SQL
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'analyze_table';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_cat_table_refs VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`(p_schema, p_table_name);
    DECLARE c_sql VARCHAR(512) CHARSET latin1 DEFAULT CONCAT('ANALYZE NO_WRITE_TO_BINLOG TABLE ', c_cat_table_refs);

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_schema, c_null), 
                                                              IFNULL(p_table_name, c_null), 
                                                              IFNULL(c_sql, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (p_schema IS NULL OR p_table_name IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Neither Schema, nor Table Name can be NULL';
    END IF;

    IF (NOT `ddr_util`.`is_table_exists`(p_schema, p_table_name))
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Table does not exist';
    END IF;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('Analyzing ', c_cat_table_refs));

    CALL `ddr_util`.`prepare_then_execute_sql`(c_sql);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `create_hist_table` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `create_hist_table`(p_source_non_hist_table_schema VARCHAR(64),
                                                p_target_hist_table_schema VARCHAR(64),
                                                p_non_hist_table_name VARCHAR(64))
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'create_hist_table';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_hist_table_name VARCHAR(256) DEFAULT CONCAT(p_non_hist_table_name, '_hist');
    DECLARE c_cat_table_refs VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`(p_target_hist_table_schema, c_hist_table_name);
    DECLARE c_drop_table_ddl VARCHAR(256) DEFAULT CONCAT('DROP TABLE ', c_cat_table_refs);

    DECLARE v_ddl VARCHAR(8000) DEFAULT '';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_source_non_hist_table_schema, c_null),
                                                              IFNULL(p_target_hist_table_schema, c_null),
                                                              IFNULL(p_non_hist_table_name, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (p_source_non_hist_table_schema IS NULL OR p_target_hist_table_schema IS NULL OR p_non_hist_table_name IS NULL
        OR LOWER(p_source_non_hist_table_schema) IN ('mot_v195_rel4', 'mysql', 'information_schema', 'performance_schema')
        OR LOWER(p_target_hist_table_schema) IN ('mot_v195_rel4', 'mysql', 'information_schema', 'performance_schema'))
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'This combination of schema and non-history table is not valid';
    END IF;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Generating history table DDL for  ', `ddr_util`.`cat_table_refs`(p_source_non_hist_table_schema, p_non_hist_table_name)));

    SET v_ddl := `ddr_util`.`generate_hist_table_ddl`(p_source_non_hist_table_schema, p_target_hist_table_schema, p_non_hist_table_name);

    IF (v_ddl IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'History table DDL is NULL. Is this a valid table?';
    END IF;

    IF (`ddr_util`.`is_table_exists`(p_target_hist_table_schema, c_hist_table_name))
    THEN
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT('Dropping existing history table ', c_cat_table_refs));
        CALL `ddr_util`.`prepare_then_execute_sql`(c_drop_table_ddl);
    END IF;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('Creating history table ', c_cat_table_refs));
    CALL `ddr_util`.`prepare_then_execute_sql`(v_ddl);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `data_deletion_watch` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `data_deletion_watch`(p_source_schema VARCHAR(64),
                                                  p_target_schema VARCHAR(64),
                                                  p_table_name VARCHAR(64))
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'data_deletion_watch';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
    DECLARE c_start_time DATETIME DEFAULT NOW();
    DECLARE c_source_cat_table_refs VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`(p_source_schema, p_table_name);
    DECLARE c_target_cat_table_refs VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`(p_target_schema, p_table_name);

    DECLARE v_delete_sql VARCHAR(8192) DEFAULT '';
    DECLARE v_row_count INTEGER(10) DEFAULT 0;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_source_schema, c_null), 
                                                              IFNULL(p_target_schema, c_null), 
                                                              IFNULL(p_table_name, c_null),
                                                              v_delete_sql));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF(NOT `ddr_util`.`is_data_deletion_watch_table`(p_source_schema, p_table_name))
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Your table is not valid for DELETE deltas';
    END IF;

    
    SET v_delete_sql := CONCAT_WS(' ',
                                  'DELETE FROM', c_target_cat_table_refs, 'WHERE NOT EXISTS (SELECT 1 FROM', c_source_cat_table_refs, 't2 WHERE t2.`id` =', 
                                  CONCAT(c_target_cat_table_refs, '.`id`)'));
    
    CALL `ddr_util`.`logger`('debug', c_module, CONCAT('SQL is ', IFNULL(v_delete_sql, c_null)));

    CALL `mot2`.`set_mot_trigger_disabled`(TRUE);
    
    
    CALL `ddr_util`.`logger`('debug', c_module, CONCAT('Preparing DELETE statement for ', c_target_cat_table_refs));
    SET @c_delete_sql := v_delete_sql;
    PREPARE delete_stmt FROM @c_delete_sql;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Deleting from ', c_target_cat_table_refs));
    SET FOREIGN_KEY_CHECKS = 0;

    EXECUTE delete_stmt;
    SET v_row_count := ROW_COUNT();
    DEALLOCATE PREPARE delete_stmt;

    SET FOREIGN_KEY_CHECKS = 1;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT_WS(' ', c_target_cat_table_refs, FORMAT(v_row_count, 0) , 'row(s) deleted in', TIMEDIFF(NOW(), c_start_time)));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `data_fk_check` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `data_fk_check`(p_schema VARCHAR(64),
                                            p_table_name VARCHAR(64),
                                            p_limit_id_count SMALLINT)
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'data_fk_check';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_limit_id_count SMALLINT DEFAULT ABS(IFNULL(p_limit_id_count, 100));

    DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';

    DECLARE v_fk_sql VARCHAR(8192) DEFAULT '';
    DECLARE v_sample_ids VARCHAR(8192) DEFAULT NULL;
    DECLARE v_sample_ids_count INTEGER(10) UNSIGNED DEFAULT 0;
    DECLARE v_is_fk_found BOOLEAN DEFAULT FALSE;

    DECLARE v_src_table_name VARCHAR(256) DEFAULT NULL;
    DECLARE v_src_column_name VARCHAR(64) DEFAULT NULL;
    DECLARE v_tgt_table_name VARCHAR(256) DEFAULT NULL;
    DECLARE v_tgt_column_name VARCHAR(64) DEFAULT NULL;
    DECLARE v_is_not_found BOOLEAN DEFAULT FALSE;
    DECLARE cur_stmt CURSOR FOR SELECT `ddr_util`.`cat_table_refs`(`table_schema`, `table_name`) src_table_name_,
                                       `column_name` src_column_name_,
                                       `ddr_util`.`cat_table_refs`(`referenced_table_schema`, `referenced_table_name`) tgt_table_name_,
                                       `referenced_column_name` tgt_column_name_
                                  FROM `information_schema`.`key_column_usage`
                                 WHERE `table_catalog` = 'def'
                                   AND `table_schema` = p_schema
                                   AND `table_name` = p_table_name
                                   AND `referenced_table_schema` IS NOT NULL
                                   AND `referenced_table_name` IS NOT NULL
                                   AND `referenced_column_name` IS NOT NULL
                                 GROUP BY 1, 2, 3, 4
                                 HAVING COUNT(*) = 1 
                                 ORDER BY 1, 2;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_is_not_found = TRUE;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_schema, c_null), 
                                                              IFNULL(p_table_name, c_null),
                                                              IFNULL(p_limit_id_count, c_null),
                                                              IFNULL(v_fk_sql, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (p_schema IS NULL OR p_table_name IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Neither schema nor table name can be NULL.';
    END IF;

    SET GROUP_CONCAT_MAX_LEN = 4096;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('FK checking ', `ddr_util`.`cat_table_refs`(p_schema, p_table_name)));

    OPEN cur_stmt;
    REPEAT
        FETCH cur_stmt INTO v_src_table_name, v_src_column_name, v_tgt_table_name, v_tgt_column_name;
        IF (NOT v_is_not_found)
        THEN
            
            
            SET v_is_fk_found := TRUE;
            SET v_sample_ids := NULL;
            SET v_fk_sql := CONCAT('SELECT GROUP_CONCAT(DISTINCT `', v_src_column_name, '` ORDER BY 1) INTO @sample_ids_ FROM ', v_src_table_name, ' src_',
                                   ' WHERE NOT EXISTS (SELECT 1 FROM ', v_tgt_table_name, ' tgt_',
                                                      ' WHERE tgt_.`', v_tgt_column_name, '` = src_.`', v_src_column_name, '`)');

            CALL `ddr_util`.`logger`('debug', c_module, CONCAT('SQL is ', IFNULL(v_fk_sql, c_null)));

            CALL `ddr_util`.`logger`('debug', c_module, CONCAT('Preparing FK statement for ', v_src_table_name, '.`', v_src_column_name, '` -> ', v_tgt_table_name, '.`', v_tgt_column_name, '`'));
            SET @c_fk_sql := v_fk_sql;
            PREPARE fk_stmt FROM @c_fk_sql;

            CALL `ddr_util`.`logger`('info', c_module, CONCAT('FK checking ', v_src_table_name, '.`', v_src_column_name, '` -> ', v_tgt_table_name, '.`', v_tgt_column_name, '`'));

            EXECUTE fk_stmt;
            SET v_sample_ids := @sample_ids_;
            SET @sample_ids_ := NULL;
            DEALLOCATE PREPARE fk_stmt;

            IF (v_sample_ids IS NOT NULL)
            THEN
                SET v_sample_ids_count := LENGTH(v_sample_ids) - LENGTH(REPLACE(v_sample_ids, ',', '')) + 1;
                IF (LENGTH(SUBSTRING_INDEX(v_sample_ids, ',', c_limit_id_count)) != LENGTH(v_sample_ids))
                THEN
                    
                    SET v_sample_ids := CONCAT(SUBSTRING_INDEX(v_sample_ids, ',', c_limit_id_count), ',[...]');
                END IF;
                
                CALL `ddr_util`.`logger`('warn', c_module, CONCAT('FKs Missing (', v_sample_ids_count, ') from ', v_src_table_name, '.`', v_src_column_name, '` -> ', v_tgt_table_name, '.`', v_tgt_column_name, '`: ', v_sample_ids));
            ELSE
                CALL `ddr_util`.`logger`('info', c_module, CONCAT('FKs Missing (none) from ', v_src_table_name, '.`', v_src_column_name, '` -> ', v_tgt_table_name, '.`', v_tgt_column_name, '`'));
            END IF;
        END IF;
    UNTIL v_is_not_found END REPEAT;

    CLOSE cur_stmt;

    IF (NOT v_is_fk_found)
    THEN
        CALL `ddr_util`.`logger`('info', c_module, CONCAT('No FKs exist on ', `ddr_util`.`cat_table_refs`(p_schema, p_table_name)));
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drop_batch_number_columns` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `drop_batch_number_columns`(p_schema VARCHAR(64))
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'drop_batch_number_columns';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_mot_v195_rel4 VARCHAR(64) CHARACTER SET latin1 DEFAULT 'mot_v195_rel4';

    DECLARE v_table_alter_count INTEGER DEFAULT 0;

    DECLARE v_sql VARCHAR(512) DEFAULT '';
    DECLARE v_is_not_found BOOLEAN DEFAULT FALSE;
    DECLARE cur_drop_stmt CURSOR FOR SELECT CONCAT('ALTER TABLE ', `ddr_util`.`cat_table_refs`(`table_schema`, `table_name`), ' DROP COLUMN `batch_number`, DROP COLUMN `mot1_legacy_id`') sql_ 
                                       FROM `information_schema`.`COLUMNS`
                                      WHERE `table_catalog` = 'def'
                                        AND `table_schema` = p_schema
                                        AND `table_schema` != 'mot_v195_rel4' 
                                        AND `column_name` = 'batch_number'
                                      ORDER BY `table_name`;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_is_not_found = TRUE;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_schema, c_null), 
                                                              v_sql));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (LOWER(TRIM(IFNULL(p_schema, ''))) IN (c_mot_v195_rel4, ''))
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Schema cannot be NULL and cannot be `mot_v195_rel4`';
    END IF;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('Batch number column removals for `', p_schema, '`'));

    OPEN cur_drop_stmt;
    REPEAT
        FETCH cur_drop_stmt INTO v_sql;
        IF (NOT v_is_not_found)
        THEN
            CALL `ddr_util`.`prepare_then_execute_sql`(v_sql);
            SET v_table_alter_count := v_table_alter_count + 1;
        END IF;
    UNTIL v_is_not_found END REPEAT;

    CLOSE cur_drop_stmt;

    IF (v_table_alter_count = 0)
    THEN
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT('No `batch_number` columns found in schema `', p_schema, '`'));
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drop_created_updated_by_fks` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `drop_created_updated_by_fks`(p_schema VARCHAR(64), 
                                                          p_table_name VARCHAR(64))
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'drop_created_updated_by_fks';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_mot_v195_rel4 VARCHAR(64) CHARACTER SET latin1 DEFAULT 'mot_v195_rel4';
    DECLARE c_created_by VARCHAR(64) DEFAULT 'created_by';
    DECLARE c_last_updated_by VARCHAR(64) DEFAULT 'last_updated_by';
    DECLARE c_last_modified_by VARCHAR(64) DEFAULT 'last_modified_by';
    DECLARE c_person VARCHAR(64) DEFAULT 'person';

    DECLARE v_sql VARCHAR(8192) DEFAULT '';
    DECLARE v_is_not_found BOOLEAN DEFAULT FALSE;
    DECLARE cur_stmt CURSOR FOR SELECT a_.sql_
                                  FROM (SELECT CONCAT('ALTER TABLE ', `ddr_util`.`cat_table_refs`(`TABLE_SCHEMA`, `TABLE_NAME`), GROUP_CONCAT(DISTINCT ' DROP FOREIGN KEY ', CONCAT('`', `CONSTRAINT_NAME`, '`') ORDER BY 1)) sql_
                                          FROM `information_schema`.`KEY_COLUMN_USAGE`
                                         WHERE `CONSTRAINT_CATALOG` = 'def'
                                           AND `CONSTRAINT_SCHEMA` = p_schema
                                           AND `CONSTRAINT_SCHEMA` != c_mot_v195_rel4
                                           AND `TABLE_CATALOG` = 'def'
                                           AND `TABLE_SCHEMA` = p_schema
                                           AND `TABLE_SCHEMA` != c_mot_v195_rel4
                                           AND `TABLE_NAME` = p_table_name
                                           AND `REFERENCED_TABLE_SCHEMA` = p_schema
                                           AND `REFERENCED_TABLE_SCHEMA` != c_mot_v195_rel4
                                           AND `REFERENCED_TABLE_NAME` = c_person
                                           AND `COLUMN_NAME` IN (c_created_by, c_last_updated_by, c_last_modified_by)
                                         GROUP BY `TABLE_SCHEMA`, `TABLE_NAME`) a_
                                 UNION
                                SELECT b_.sql_
                                  FROM (SELECT CONCAT('ALTER TABLE ', `ddr_util`.`cat_table_refs`(is_.`TABLE_SCHEMA`, is_.`TABLE_NAME`), GROUP_CONCAT(DISTINCT ' DROP INDEX ', CONCAT('`', is_.`INDEX_NAME`, '`') ORDER BY 1)) sql_
                                          FROM `information_schema`.`STATISTICS` is_
                                       NATURAL JOIN (SELECT `TABLE_CATALOG`, `TABLE_SCHEMA`, `TABLE_NAME`, `INDEX_SCHEMA`, `INDEX_NAME` FROM `information_schema`.`STATISTICS`
                                                      WHERE `TABLE_CATALOG` = 'def'
                                                        AND `TABLE_SCHEMA` = p_schema
                                                        AND `TABLE_SCHEMA` != c_mot_v195_rel4
                                                        AND `TABLE_NAME` = p_table_name
                                                        AND `INDEX_SCHEMA` = p_schema
                                                        AND `INDEX_SCHEMA` != c_mot_v195_rel4
                                                        AND `INDEX_NAME` != 'PRIMARY'
                                                      GROUP BY `TABLE_CATALOG`, `TABLE_SCHEMA`, `TABLE_NAME`, `INDEX_SCHEMA`, `INDEX_NAME`
                                                     HAVING MAX(`SEQ_IN_INDEX`) = 1) cand_
                                              WHERE is_.`COLUMN_NAME` IN (c_created_by, c_last_updated_by, c_last_modified_by)
                                              GROUP BY is_.`TABLE_NAME`) b_
                                 ORDER BY 1;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_is_not_found = TRUE;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_schema, c_null), 
                                                              IFNULL(p_table_name, c_null),
                                                              IFNULL(v_sql, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (p_schema IS NULL OR p_table_name IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Neither schema nor table name can be NULL.';
    END IF;

    IF (p_schema = c_mot_v195_rel4)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Schema cannot be `mot_v195_rel4`';
    END IF;

    SET GROUP_CONCAT_MAX_LEN = 4096;
    
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('Dropping FK and indexes on `created_by`/`last_updated_by`/`last_modified_by` for ', `ddr_util`.`cat_table_refs`(p_schema, p_table_name)));

    OPEN cur_stmt;
    REPEAT
        FETCH cur_stmt INTO v_sql;
        IF (NOT v_is_not_found)
        THEN
            CALL `ddr_util`.`prepare_then_execute_sql`(v_sql);
        END IF;
    UNTIL v_is_not_found END REPEAT;

    CLOSE cur_stmt;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drop_fks_from_table` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `drop_fks_from_table`(p_schema VARCHAR(64),
                                                  p_table_name VARCHAR(64))
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'drop_fks_from_table';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE v_sql VARCHAR(8192) DEFAULT '';
    DECLARE v_is_not_found BOOLEAN DEFAULT FALSE;
    DECLARE cur_stmt CURSOR FOR SELECT a_.sql_
                                  FROM (SELECT CONCAT('ALTER TABLE ', `ddr_util`.`cat_table_refs`(`TABLE_SCHEMA`, `TABLE_NAME`), GROUP_CONCAT(DISTINCT ' DROP FOREIGN KEY ', CONCAT('`', `CONSTRAINT_NAME`, '`') ORDER BY 1)) sql_
                                          FROM `information_schema`.`KEY_COLUMN_USAGE`
                                         WHERE `CONSTRAINT_CATALOG` = 'def'
                                           AND `CONSTRAINT_SCHEMA` = p_schema
                                           AND `TABLE_CATALOG` = 'def'
                                           AND `TABLE_SCHEMA` = p_schema
                                           AND `TABLE_NAME` = p_table_name
                                           AND `REFERENCED_TABLE_SCHEMA` = p_schema
                                         GROUP BY `TABLE_SCHEMA`, `TABLE_NAME`) a_
                                 UNION
                                SELECT b_.sql_
                                  FROM (SELECT CONCAT('ALTER TABLE ', `ddr_util`.`cat_table_refs`(is_.`TABLE_SCHEMA`, is_.`TABLE_NAME`), GROUP_CONCAT(DISTINCT ' DROP INDEX ', CONCAT('`', is_.`INDEX_NAME`, '`') ORDER BY 1)) sql_
                                          FROM `information_schema`.`STATISTICS` is_
                                       NATURAL JOIN (SELECT `TABLE_CATALOG`, `TABLE_SCHEMA`, `TABLE_NAME`, `INDEX_SCHEMA`, `INDEX_NAME` FROM `information_schema`.`STATISTICS`
                                                      WHERE `TABLE_CATALOG` = 'def'
                                                        AND `TABLE_SCHEMA` = p_schema
                                                        AND `TABLE_NAME` = p_table_name
                                                        AND `INDEX_SCHEMA` = p_schema
                                                        AND `NON_UNIQUE` = 1
                                                      GROUP BY `TABLE_CATALOG`, `TABLE_SCHEMA`, `TABLE_NAME`, `INDEX_SCHEMA`, `INDEX_NAME`) cand_
                                              GROUP BY is_.`TABLE_NAME`) b_
                                 ORDER BY 1;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_is_not_found = TRUE;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_schema, c_null), 
                                                              IFNULL(p_table_name, c_null),
                                                              IFNULL(v_sql, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (p_schema IS NULL OR p_table_name IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Neither schema nor table name can be NULL.';
    END IF;

    SET GROUP_CONCAT_MAX_LEN = 4096;
    
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('Dropping ALL outward FKs and indexes from ', `ddr_util`.`cat_table_refs`(p_schema, p_table_name)));

    OPEN cur_stmt;
    REPEAT
        FETCH cur_stmt INTO v_sql;
        IF (NOT v_is_not_found)
        THEN
            CALL `ddr_util`.`prepare_then_execute_sql`(v_sql);
        END IF;
    UNTIL v_is_not_found END REPEAT;

    CLOSE cur_stmt;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drop_hist_table` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `drop_hist_table`(p_schema VARCHAR(64), 
                                              p_table_name VARCHAR(64))
    NO SQL
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'drop_hist_table';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_mot_v195_rel4 VARCHAR(64) CHARACTER SET latin1 DEFAULT 'mot_v195_rel4';
    DECLARE c_cat_table_refs VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`(p_schema, p_table_name);
    DECLARE c_ddl VARCHAR(8192) DEFAULT CONCAT('DROP TABLE ', c_cat_table_refs);

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_schema, c_null), 
                                                              IFNULL(p_table_name, c_null),
                                                              IFNULL(c_ddl, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (p_schema IS NULL OR p_table_name IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Neither schema nor table name can be NULL.';
    END IF;

    IF (NOT p_table_name LIKE '%_hist')
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Table must have _hist suffix to be a history table';
    END IF;

    IF (p_schema = c_mot_v195_rel4)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Schema cannot be `mot_v195_rel4`';
    END IF;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('Dropping history table ', c_cat_table_refs));

    CALL `ddr_util`.`prepare_then_execute_sql`(c_ddl);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drop_mapping_model_detail_column` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `drop_mapping_model_detail_column`(p_schema VARCHAR(64))
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'drop_mapping_model_detail_column';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_mot_v195_rel4 VARCHAR(64) CHARACTER SET latin1 DEFAULT 'mot_v195_rel4';

    DECLARE v_table_alter_count INTEGER DEFAULT 0;

    DECLARE v_sql VARCHAR(512) DEFAULT '';
    DECLARE v_is_not_found BOOLEAN DEFAULT FALSE;
    DECLARE cur_drop_stmt CURSOR FOR SELECT DISTINCT CONCAT('ALTER TABLE ', `ddr_util`.`cat_table_refs`(`table_schema`, `table_name`), ' DROP COLUMN `model_detail_id`') sql_ 
                                       FROM `information_schema`.`COLUMNS`
                                      WHERE `table_catalog` = 'def'
                                        AND `table_schema` = p_schema
                                        AND `table_schema` != c_mot_v195_rel4 
                                        AND `column_name` = 'model_detail_id'
                                        AND `table_name` = 'dvla_model_model_detail_code_map'
                                      ORDER BY `table_name`;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_is_not_found = TRUE;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_schema, c_null), 
                                                              v_sql));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (LOWER(TRIM(IFNULL(p_schema, ''))) IN (c_mot_v195_rel4, ''))
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Schema cannot be NULL and cannot be `mot_v195_rel4`';
    END IF;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('mapping model_detail_id column removal for `', p_schema, '`'));

    OPEN cur_drop_stmt;
    REPEAT
        FETCH cur_drop_stmt INTO v_sql;
        IF (NOT v_is_not_found)
        THEN
            CALL `ddr_util`.`prepare_then_execute_sql`(v_sql);
            SET v_table_alter_count := v_table_alter_count + 1;
        END IF;
    UNTIL v_is_not_found END REPEAT;

    CLOSE cur_drop_stmt;

    IF (v_table_alter_count = 0)
    THEN
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT('No ''model_detail_id'' mappping column found in schema `', p_schema, '`'));
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drop_non_unique_indexes` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `drop_non_unique_indexes`(p_schema VARCHAR(64), 
                                                      p_table_name VARCHAR(64))
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'drop_non_unique_indexes';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE v_sql VARCHAR(8192) DEFAULT '';
    DECLARE v_is_not_found BOOLEAN DEFAULT FALSE;
    DECLARE cur_stmt CURSOR FOR SELECT CONCAT('ALTER TABLE ', `ddr_util`.`cat_table_refs`(`TABLE_SCHEMA`, `TABLE_NAME`), GROUP_CONCAT(DISTINCT ' DROP INDEX ', CONCAT('`', `INDEX_NAME`, '`') ORDER BY 1)) sql_
                                  FROM `information_schema`.`STATISTICS`
                                 WHERE `TABLE_CATALOG` = 'def'
                                   AND `TABLE_SCHEMA` = p_schema
                                   AND `TABLE_NAME` = p_table_name
                                   AND `INDEX_SCHEMA` = p_schema
                                   AND `INDEX_NAME` != 'PRIMARY' 
                                   AND `NON_UNIQUE` = TRUE
                                 GROUP BY `TABLE_NAME`;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_is_not_found = TRUE;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_schema, c_null), 
                                                              IFNULL(p_table_name, c_null),
                                                              IFNULL(v_sql, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (p_schema IS NULL OR p_table_name IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Neither schema nor table name can be NULL.';
    END IF;

    SET GROUP_CONCAT_MAX_LEN = 4096;
    
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('Dropping non-unique indexes from ', `ddr_util`.`cat_table_refs`(p_schema, p_table_name)));

    OPEN cur_stmt;
    REPEAT
        FETCH cur_stmt INTO v_sql;
        IF (NOT v_is_not_found)
        THEN
            CALL `ddr_util`.`prepare_then_execute_sql`(v_sql);
        END IF;
    UNTIL v_is_not_found END REPEAT;

    CLOSE cur_stmt;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drop_vin_reversed_columns` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `drop_vin_reversed_columns`(p_schema VARCHAR(64))
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'drop_vin_reversed_columns';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_mot_v195_rel4 VARCHAR(64) CHARACTER SET latin1 DEFAULT 'mot_v195_rel4';

    DECLARE v_table_alter_count INTEGER DEFAULT 0;

    DECLARE v_sql VARCHAR(512) DEFAULT '';
    DECLARE v_is_not_found BOOLEAN DEFAULT FALSE;
    DECLARE cur_drop_stmt CURSOR FOR SELECT DISTINCT CONCAT('ALTER TABLE ', `ddr_util`.`cat_table_refs`(`table_schema`, `table_name`), ' DROP COLUMN `vin_reversed`, DROP COLUMN `vin_collapsed_reversed`') sql_ 
                                       FROM `information_schema`.`COLUMNS`
                                      WHERE `table_catalog` = 'def'
                                        AND `table_schema` = p_schema
                                        AND `table_schema` != 'mot_v195_rel4' 
                                        AND `column_name` IN ('vin_reversed', 'vin_collapsed_reversed')
                                      ORDER BY `table_name`;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_is_not_found = TRUE;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_schema, c_null), 
                                                              v_sql));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (LOWER(TRIM(IFNULL(p_schema, ''))) IN (c_mot_v195_rel4, ''))
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Schema cannot be NULL and cannot be `mot_v195_rel4`';
    END IF;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('VIN reversed column removals for `', p_schema, '`'));

    OPEN cur_drop_stmt;
    REPEAT
        FETCH cur_drop_stmt INTO v_sql;
        IF (NOT v_is_not_found)
        THEN
            CALL `ddr_util`.`prepare_then_execute_sql`(v_sql);
            SET v_table_alter_count := v_table_alter_count + 1;
        END IF;
    UNTIL v_is_not_found END REPEAT;

    CLOSE cur_drop_stmt;

    IF (v_table_alter_count = 0)
    THEN
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT('No ''vin reversed'' columns found in schema `', p_schema, '`'));
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `generate_trigger_source` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `generate_trigger_source`()
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'generate_trigger_source';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_truncate_generated_code_sql VARCHAR(128) DEFAULT 'TRUNCATE TABLE `ddr_util`.`ddr_generated_code`';
    DECLARE c_version_column VARCHAR(64) DEFAULT 'version';

    DECLARE v_id INTEGER UNSIGNED;
    DECLARE v_source_schema VARCHAR(64);
    DECLARE v_target_schema VARCHAR(64);
    DECLARE v_target_table VARCHAR(64);
    DECLARE v_non_hist_table_name VARCHAR(64);
    DECLARE v_generate_triggers BOOLEAN;
    DECLARE v_trigger_name VARCHAR(64);
    DECLARE v_code VARCHAR(8000);

    DECLARE v_is_not_found BOOLEAN DEFAULT FALSE;
    DECLARE cur_tables CURSOR FOR SELECT `id`,
                                         `target_schema`, 
                                         `target_schema`,
                                         `table_name`,
                                         `generate_triggers`
                                    FROM `ddr_util`.`ddr_refactor_table`
                                   WHERE `table_name` NOT LIKE '%_hist'
                                    ORDER BY `table_name`;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text));
        RESIGNAL;
    END;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_is_not_found=TRUE;

    CALL `ddr_util`.`logger`('info', c_module, 'Generating trigger code into `ddr_util`.`ddr_refactor_table`');

    
    CALL `ddr_util`.`logger`('warn', c_module, 'TRUNCATE being issued for `ddr_util`.`ddr_generated_code`');
    CALL `ddr_util`.`prepare_then_execute_sql`(c_truncate_generated_code_sql);

    OPEN cur_tables;
    REPEAT
        FETCH cur_tables INTO v_id, v_source_schema, v_target_schema, v_non_hist_table_name, v_generate_triggers;
        IF (NOT v_is_not_found)
        THEN
            IF (`ddr_util`.`is_table_exists`(v_source_schema, v_non_hist_table_name))
            THEN
                SET v_target_table := `ddr_util`.`get_object_name`(v_non_hist_table_name, NULL, 'hist');

                CALL `ddr_util`.`logger`('debug', c_module, CONCAT('Requesting trigger code for ', v_target_table));

                
                IF (`ddr_util`.`is_column_exists`(v_source_schema, v_non_hist_table_name, c_version_column) )
                THEN
                    SET v_trigger_name := `ddr_util`.`get_object_name`(v_non_hist_table_name, 'tr', 'bi');
                    SET v_code := `ddr_util`.`generate_table_trigger_ddl`(v_source_schema,
                                                                          v_non_hist_table_name,
                                                                          v_target_schema,
                                                                          v_target_table,
                                                                          v_trigger_name,
                                                                          'BI');

                    INSERT INTO `ddr_util`.`ddr_generated_code`
                        (`refactor_table_id`, `refactor_process`, `object_name`, `source_code`)
                    VALUES
                        (v_id, 'TRIG_BI', v_trigger_name, v_code);
                END IF;

                IF (v_generate_triggers)
                THEN
                    
                    SET v_trigger_name := `ddr_util`.`get_object_name`(v_non_hist_table_name, 'tr', 'bu');
                    SET v_code := `ddr_util`.`generate_table_trigger_ddl`(v_source_schema,
                                                                          v_non_hist_table_name,
                                                                          v_target_schema,
                                                                          v_target_table,
                                                                          v_trigger_name,
                                                                          'BU');

                    INSERT INTO `ddr_util`.`ddr_generated_code`
                        (`refactor_table_id`, `refactor_process`, `object_name`, `source_code`)
                    VALUES
                        (v_id, 'TRIG_BU', v_trigger_name, v_code);

                    
                    SET v_trigger_name := `ddr_util`.`get_object_name`(v_non_hist_table_name, 'tr', 'au');
                    SET v_code := `ddr_util`.`generate_table_trigger_ddl`(v_source_schema,
                                                                          v_non_hist_table_name,
                                                                          v_target_schema,
                                                                          v_target_table,
                                                                          v_trigger_name,
                                                                          'AU');

                    INSERT INTO `ddr_util`.`ddr_generated_code`
                        (`refactor_table_id`, `refactor_process`, `object_name`, `source_code`)
                    VALUES
                        (v_id, 'TRIG_AU', v_trigger_name, v_code);

                    
                    SET v_trigger_name := `ddr_util`.`get_object_name`(v_non_hist_table_name, 'tr', 'bd');
                    SET v_code := `ddr_util`.`generate_table_trigger_ddl`(v_source_schema,
                                                                          v_non_hist_table_name,
                                                                          v_target_schema,
                                                                          v_target_table,
                                                                          v_trigger_name,
                                                                          'BD');

                    INSERT INTO `ddr_util`.`ddr_generated_code`
                        (`refactor_table_id`, `refactor_process`, `object_name`, `source_code`)
                    VALUES
                        (v_id ,'TRIG_BD',v_trigger_name ,v_code);
                END IF;
            END IF;
        END IF;
    UNTIL v_is_not_found END REPEAT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_max_id_for_table` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `get_max_id_for_table`(IN    p_schema VARCHAR(64),
                                                   IN    p_table_name VARCHAR(64),
                                                   INOUT p_max_id_for_table BIGINT)
    READS SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'get_max_id_for_table';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_is_hist_table BOOLEAN DEFAULT p_table_name LIKE '%_hist';
    DECLARE c_default_max_id_value BIGINT DEFAULT -1;

    DECLARE c_id VARCHAR(64) DEFAULT 'id';
    DECLARE c_hist_id VARCHAR(64) DEFAULT 'hist_id';

    DECLARE c_cat_table_refs VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`(p_schema, p_table_name);
    DECLARE c_select_max_id_sql VARCHAR(512) CHARSET latin1 DEFAULT CONCAT('SELECT MAX(`', IF(c_is_hist_table, c_hist_id, c_id), '`) INTO @ddr_max_id_value FROM ', c_cat_table_refs);

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_schema, c_null), 
                                                              IFNULL(p_table_name, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (p_schema IS NULL OR p_table_name IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Neither Schema, nor Table Name can be NULL';
    END IF;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Issuing ', c_select_max_id_sql));

    SET @c_select_max_id_sql := c_select_max_id_sql;
    PREPARE select_max_id_sql_stmt FROM @c_select_max_id_sql;
    EXECUTE select_max_id_sql_stmt;
    SET p_max_id_for_table = IFNULL(@ddr_max_id_value, c_default_max_id_value); 
    DEALLOCATE PREPARE select_max_id_sql_stmt;
    SET @c_select_max_id_sql := NULL;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT_WS(' ', 'MAX(id) for', c_cat_table_refs, 'is', p_max_id_for_table));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `logger` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `logger`(p_log_level VARCHAR(10) CHARSET latin1,
                                     p_log_module VARCHAR(64) CHARSET latin1,
                                     p_log_message TEXT CHARSET latin1)
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_log_levels VARCHAR(40) CHARSET latin1 DEFAULT 'none debuginfo warn error';
    DECLARE c_log_level TINYINT DEFAULT ROUND(LOCATE(p_log_level, c_log_levels) / 6, 0);
    DECLARE c_session_log_level TINYINT DEFAULT ROUND((LOCATE(`ddr_util`.`get_log_level`(), c_log_levels)) / 6, 0);

    IF (c_log_level >= c_session_log_level)
    THEN
        INSERT INTO `ddr_util`.`ddr_logger`
            (`connection_id`, `log_level`, `log_module`, `log_message`)
        VALUES
            (connection_id(), p_log_level, IFNULL(p_log_module, 'anon'), IFNULL(p_log_message, 'NULL'));
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `migrate_single_table` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `migrate_single_table`(p_source_schema VARCHAR(64),
                                                   p_target_schema VARCHAR(64),
                                                   p_table_name VARCHAR(64),
                                                   p_date_from DATETIME,
                                                   p_date_to DATETIME,
                                                   p_id_from INTEGER UNSIGNED,
                                                   p_id_to INTEGER UNSIGNED,
                                                   p_is_truncate_required BOOLEAN,
                                                   p_is_where_required BOOLEAN)
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'migrate_single_table';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
    DECLARE c_is_truncate_required BOOLEAN DEFAULT IFNULL(p_is_truncate_required, FALSE);
    DECLARE c_is_where_required BOOLEAN DEFAULT IFNULL(p_is_where_required, TRUE);

    DECLARE c_navoz_sql_mode VARCHAR(24) CHARACTER SET 'latin1' DEFAULT 'NO_AUTO_VALUE_ON_ZERO';
    DECLARE c_start_time DATETIME DEFAULT NOW();
    DECLARE c_source_cat_table_refs VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`(p_source_schema, p_table_name);
    DECLARE c_target_cat_table_refs VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`(p_target_schema, p_table_name);
    DECLARE c_table_not_valid_message_text VARCHAR(256) DEFAULT CONCAT('Your preparable SQL is NULL. Is your table name (', c_target_cat_table_refs, ') valid for single table migration?');

    DECLARE v_insert_select_sql VARCHAR(8192) DEFAULT '';
    DECLARE v_row_count INTEGER DEFAULT 0;
    DECLARE v_old_sql_mode VARCHAR(1024) CHARACTER SET 'latin1' DEFAULT IFNULL(@@SESSION.SQL_MODE, '');

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_source_schema, c_null), 
                                                              IFNULL(p_target_schema, c_null), 
                                                              IFNULL(p_table_name, c_null), 
                                                              IFNULL(p_date_from, c_null), 
                                                              IFNULL(p_date_to, c_null), 
                                                              IFNULL(p_id_from, c_null), 
                                                              IFNULL(p_id_to, c_null),
                                                              IFNULL(p_is_truncate_required, c_null),
                                                              IFNULL(p_is_where_required, c_null),
                                                              IFNULL(v_insert_select_sql, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    
    SET v_insert_select_sql := `ddr_util`.`generate_single_table_sql`(p_source_schema, p_target_schema, p_table_name, p_date_from, p_date_to, p_id_from, p_id_to, c_is_where_required);

    IF (v_insert_select_sql IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = c_table_not_valid_message_text;
    END IF;

    CALL `mot2`.`set_mot_trigger_disabled`(TRUE);
    
    
    
    
    CALL `ddr_util`.`logger`('debug', c_module, CONCAT('Preparing INSERT...SELECT statement for ', c_target_cat_table_refs));
    SET @c_insert_select_sql := v_insert_select_sql;
    PREPARE insert_select_stmt FROM @c_insert_select_sql;

    IF (c_is_truncate_required)
    THEN
        CALL `ddr_util`.`logger`('debug', c_module, 'Truncate required');
        CALL `ddr_util`.`truncate_single_table`(p_target_schema, p_table_name);
    END IF;

    CALL `ddr_util`.`logger`('info', c_module,
                             CONCAT('Migrating ', c_source_cat_table_refs, ' to ', c_target_cat_table_refs, ' (', 
                                    CONCAT_WS(', ', IFNULL(p_date_from, c_null), IFNULL(p_date_to, c_null), IFNULL(p_id_from, c_null), IFNULL(p_id_to, c_null)), ')'));
    SET FOREIGN_KEY_CHECKS = 0;

    
    IF (INSTR(v_old_sql_mode, c_navoz_sql_mode) = 0)
    THEN
        IF (LENGTH(v_old_sql_mode) > 0)
        THEN
            SET @@SESSION.SQL_MODE = CONCAT_WS(',', v_old_sql_mode, c_navoz_sql_mode); 
        ELSE
            SET @@SESSION.SQL_MODE = c_navoz_sql_mode; 
        END IF;
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT('Session sql_mode was: "', v_old_sql_mode, '", is now: "', @@SESSION.SQL_MODE, '"'));
    END IF;

    EXECUTE insert_select_stmt;
    SET v_row_count := ROW_COUNT();
    DEALLOCATE PREPARE insert_select_stmt;

    SET FOREIGN_KEY_CHECKS = 1;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT_WS(' ', c_target_cat_table_refs, FORMAT(v_row_count, 0) , 'row(s) in', TIMEDIFF(NOW(), c_start_time)));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `prepare_then_execute_sql` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `prepare_then_execute_sql`(p_sql VARCHAR(8192))
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'prepare_then_execute_sql';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE v_fk_checks TINYINT DEFAULT NULL;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_sql, c_null),
                                                              IFNULL(v_fk_checks, c_null)));

        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (p_sql IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'SQL cannot be NULL';
    END IF;

    CALL `ddr_util`.`logger`('debug', c_module, CONCAT('SQL is ', p_sql));

    SELECT @FOREIGN_KEY_CHECKS INTO v_fk_checks; 
    SET FOREIGN_KEY_CHECKS = 0;
    SET @v_sql := p_sql;
    PREPARE stmt FROM @v_sql;
    EXECUTE stmt;
    SET FOREIGN_KEY_CHECKS = v_fk_checks;
    DEALLOCATE PREPARE stmt;
    SET @v_sql := NULL;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `reconstitute_fks_on_table` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `reconstitute_fks_on_table`(p_schema VARCHAR(64), 
                                                        p_table_name VARCHAR(64))
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'reconstitute_fks_on_table';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_empty_alter_statement VARCHAR(16) DEFAULT 'ALTER TABLE'; 

    DECLARE v_sql VARCHAR(8192) DEFAULT '';
    DECLARE v_is_not_found BOOLEAN DEFAULT FALSE;
    DECLARE cur_stmt CURSOR FOR SELECT CONCAT_WS(' ',
                                       c_empty_alter_statement,
                                       table_cat_, 
                                       LTRIM(GROUP_CONCAT(add_sql_))) sql_ 
                                  FROM (SELECT `ddr_util`.`cat_table_refs`(a_.`table_schema`, a_.`table_name`) table_cat_, 
                                               CONCAT(' ADD CONSTRAINT `',
                                               a_.`constraint_name`, 
                                               '` FOREIGN KEY (',
                                               b_.col_cat_,
                                               ') REFERENCES ', `ddr_util`.`cat_table_refs`(a_.`referenced_table_schema`, a_.`referenced_table_name`),
                                               ' (', LTRIM(GROUP_CONCAT(CONCAT(' `', a_.`referenced_column_name`, '`') ORDER BY a_.`position_in_unique_constraint`)), ') ON DELETE NO ACTION ON UPDATE NO ACTION') add_sql_
                                          FROM `ddr_util`.`ddr_fk_key_column_usage` a_
                                          JOIN (SELECT `table_name`,
                                                       `constraint_name`,
                                                       LTRIM(GROUP_CONCAT(CONCAT(' `', `column_name`, '`') ORDER BY `position_in_unique_constraint`)) col_cat_,
                                                       `referenced_table_schema`, 
                                                       `referenced_table_name`
                                                  FROM `ddr_util`.`ddr_fk_key_column_usage`
                                                 GROUP BY `table_name`, `constraint_name`) b_
                                            ON (b_.`table_name` = a_.`table_name` AND b_.`constraint_name` = a_.`constraint_name`)
                                         WHERE a_.`table_schema` = p_schema
                                           AND a_.`table_name` = p_table_name
                                         GROUP BY a_.`constraint_name`) c_;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_is_not_found = TRUE;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_schema, c_null), 
                                                              IFNULL(p_table_name, c_null),
                                                              IFNULL(v_sql, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (p_schema IS NULL OR p_table_name IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Neither schema nor table name can be NULL.';
    END IF;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('FKs being reconstituted for ', `ddr_util`.`cat_table_refs`(p_schema, p_table_name)));

    SET GROUP_CONCAT_MAX_LEN = 8192;

    OPEN cur_stmt;
    REPEAT
        FETCH cur_stmt INTO v_sql;
        IF (NOT v_is_not_found AND IFNULL(v_sql, c_empty_alter_statement) != c_empty_alter_statement)
        THEN
            SET FOREIGN_KEY_CHECKS = 0;
            CALL `ddr_util`.`prepare_then_execute_sql`(v_sql);
            SET FOREIGN_KEY_CHECKS = 1;
        END IF;
    UNTIL v_is_not_found END REPEAT;

    CLOSE cur_stmt;

    DELETE FROM `ddr_util`.`ddr_fk_key_column_usage` 
     WHERE `table_schema` = p_schema 
       AND `table_name` = p_table_name;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `record_and_drop_fks_from_table` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `record_and_drop_fks_from_table`(p_schema VARCHAR(64), 
                                                             p_table_name VARCHAR(64))
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'record_and_drop_fks_from_table';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_cat_table_refs VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`(p_schema, p_table_name);

    DECLARE v_constraint_count SMALLINT DEFAULT 0;

    DECLARE v_sql VARCHAR(8192) DEFAULT '';
    DECLARE v_is_not_found BOOLEAN DEFAULT FALSE;
    DECLARE cur_stmt CURSOR FOR SELECT DISTINCT CONCAT('ALTER TABLE ', `ddr_util`.`cat_table_refs`(`TABLE_SCHEMA`, `TABLE_NAME`), ' DROP FOREIGN KEY `', `CONSTRAINT_NAME`, '`') sql_
                                  FROM `information_schema`.`KEY_COLUMN_USAGE`
                                 WHERE `TABLE_SCHEMA` = p_schema
                                   AND `REFERENCED_TABLE_SCHEMA` = `TABLE_SCHEMA`
                                   AND (`TABLE_NAME` = p_table_name
                                        OR `REFERENCED_TABLE_NAME` = p_table_name)
                                 ORDER BY `TABLE_SCHEMA`, `TABLE_NAME`, `REFERENCED_TABLE_NAME`;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_is_not_found = TRUE;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_schema, c_null), 
                                                              IFNULL(p_table_name, c_null),
                                                              IFNULL(v_sql, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (p_schema IS NULL OR p_table_name IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Neither schema nor table name can be NULL.';
    END IF;

    
    SELECT COUNT(*) INTO v_constraint_count
      FROM `information_schema`.`KEY_COLUMN_USAGE`
     WHERE `TABLE_SCHEMA` = p_schema
       AND `CONSTRAINT_NAME` != 'PRIMARY'
       AND `REFERENCED_TABLE_SCHEMA` = `TABLE_SCHEMA`
       AND (`TABLE_NAME` = p_table_name 
            OR `REFERENCED_TABLE_NAME` = p_table_name)
       AND `REFERENCED_COLUMN_NAME` IS NOT NULL;
    
    IF (IFNULL(v_constraint_count, 0) != 0)
    THEN
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT('FK removal occurring from ', c_cat_table_refs, ' for ', v_constraint_count, ' constraint(s)'));

        INSERT IGNORE INTO `ddr_util`.`ddr_fk_key_column_usage`(`constraint_schema`, `constraint_name`, `table_schema`, `table_name`, `column_name`, `ordinal_position`, `position_in_unique_constraint`, 
                                                         `referenced_table_schema`, `referenced_table_name`, `referenced_column_name`)
        SELECT `CONSTRAINT_SCHEMA`, `CONSTRAINT_NAME`, `TABLE_SCHEMA`, `TABLE_NAME`, `COLUMN_NAME`, `ORDINAL_POSITION`, `POSITION_IN_UNIQUE_CONSTRAINT`,
               `REFERENCED_TABLE_SCHEMA`, `REFERENCED_TABLE_NAME`, `REFERENCED_COLUMN_NAME`
          FROM `information_schema`.`KEY_COLUMN_USAGE`
         WHERE `TABLE_SCHEMA` = p_schema
           AND `CONSTRAINT_NAME` != 'PRIMARY'
           AND `REFERENCED_TABLE_SCHEMA` = `TABLE_SCHEMA`
           AND (`TABLE_NAME` = p_table_name 
                OR `REFERENCED_TABLE_NAME` = p_table_name)
           AND `REFERENCED_COLUMN_NAME` IS NOT NULL
         ORDER BY `TABLE_SCHEMA`, `TABLE_NAME`, `REFERENCED_TABLE_NAME`;

        CALL `ddr_util`.`logger`('warn', c_module, CONCAT('FK removal from, and around, ', c_cat_table_refs));

        OPEN cur_stmt;
        REPEAT
            FETCH cur_stmt INTO v_sql;
            IF (NOT v_is_not_found)
            THEN
                CALL `ddr_util`.`prepare_then_execute_sql`(v_sql);
            END IF;
        UNTIL v_is_not_found END REPEAT;

        CLOSE cur_stmt;
    ELSE
        CALL `ddr_util`.`logger`('info', c_module, CONCAT('There are no FKs to remove from, or around, ', c_cat_table_refs));
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `rename_modified_to_updated` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `rename_modified_to_updated`(p_schema VARCHAR(64))
    READS SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'rename_modified_to_updated';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_schema VARCHAR(64) DEFAULT LOWER(TRIM(p_schema));

    DECLARE c_last_updated_by VARCHAR(64) DEFAULT 'last_updated_by';
    DECLARE c_last_updated_on VARCHAR(64) DEFAULT 'last_updated_on';
    DECLARE c_last_modified_by VARCHAR(64) DEFAULT 'last_modified_by';
    DECLARE c_last_modified_on VARCHAR(64) DEFAULT 'last_modified_on';

    DECLARE v_sql VARCHAR(512) DEFAULT NULL;
    DECLARE v_is_not_found BOOLEAN DEFAULT FALSE;
    DECLARE cur_stmt CURSOR FOR SELECT CONCAT_WS(' ', 
                                                 'ALTER TABLE',
                                                 `ddr_util`.`cat_table_refs`(cols_.`TABLE_SCHEMA`, cols_.`TABLE_NAME`),
                                                 'CHANGE COLUMN',
                                                 CONCAT('`', cols_.`COLUMN_NAME`, '`'),
                                                 CONCAT('`', REPLACE(cols_.`COLUMN_NAME`, 'modified', 'updated'), '`'),
                                                 IF(cols_.`COLUMN_NAME` = c_last_modified_by, 'INT(10) NULL', 'TIMESTAMP(6) NULL')) sql_
                                  FROM `information_schema`.`COLUMNS` cols_
                                  JOIN `information_schema`.`TABLES` tabs_ ON (tabs_.`TABLE_SCHEMA` = cols_.`TABLE_SCHEMA` 
                                                                               AND tabs_.`TABLE_NAME` = cols_.`TABLE_NAME`
                                                                               AND tabs_.`TABLE_CATALOG` = cols_.`TABLE_CATALOG`)
                                 WHERE cols_.`TABLE_CATALOG` = 'def' 
                                   AND cols_.`TABLE_SCHEMA` = p_schema
                                   AND cols_.`COLUMN_NAME` IN (c_last_modified_by, c_last_modified_on)
                                   AND tabs_.`TABLE_TYPE` = 'BASE TABLE'
                                 ORDER BY cols_.`TABLE_NAME`, cols_.`COLUMN_NAME`;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_is_not_found = TRUE;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_schema, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (p_schema IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Schema cannot be NULL';
    END IF;

    IF (c_schema IN ('mot_v195_rel4', 'mysql', 'information_schema', 'performance_schema'))
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'This schema is not valid for this column rename operation';
    END IF;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Renaming columns in `', p_schema, '`'));

    SET FOREIGN_KEY_CHECKS = 0;

    OPEN cur_stmt;
    REPEAT
        FETCH cur_stmt INTO v_sql;
        IF (NOT v_is_not_found)
        THEN
            CALL `ddr_util`.`prepare_then_execute_sql`(v_sql);
        END IF;
    UNTIL v_is_not_found END REPEAT;

    CLOSE cur_stmt;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `set_engine_for_table` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `set_engine_for_table`(p_schema VARCHAR(64),
                                                   p_table_name VARCHAR(64),
                                                   p_new_engine VARCHAR(16))
    NO SQL
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'set_engine_for_table';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_schema VARCHAR(64) DEFAULT LOWER(TRIM(p_schema));
    DECLARE c_engine VARCHAR(16) DEFAULT LOWER(TRIM(p_new_engine));

    DECLARE c_cat_table_refs VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`(p_schema, p_table_name);
    DECLARE c_sql VARCHAR(256) DEFAULT CONCAT('ALTER TABLE ', c_cat_table_refs, ' ENGINE=', c_engine,' ROW_FORMAT=COMPRESSED');

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_schema, c_null), 
                                                              IFNULL(p_table_name, c_null),
                                                              IFNULL(p_new_engine, c_null),
                                                              IFNULL(c_sql, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (p_schema IS NULL OR p_table_name IS NULL OR p_new_engine IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Neither schema, table, nor new engine can be NULL';
    END IF;

    IF (c_schema IN ('mysql', 'information_schema', 'performance_schema'))
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'This schema is not valid for this database engine change operation';
    END IF;

    IF (c_engine NOT IN ('innodb', 'blackhole'))
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Only INNODB and BLACKHOLE engines are supported';
    END IF;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('Altering Engine ', c_cat_table_refs, ' to ', QUOTE(UPPER(c_engine))));

    CALL `ddr_util`.`prepare_then_execute_sql`(c_sql);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `set_etl_user_id` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `set_etl_user_id`()
    READS SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'set_etl_user_id';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_username VARCHAR(50) DEFAULT 'refactoring_etl_user';
    DECLARE c_error_msg VARCHAR(256) DEFAULT CONCAT('ETL user id not found at `mot_v195_rel4`.`person`.`username`=''', c_username, '''');

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text));
        RESIGNAL;
    END;

    SELECT p.`id`
      INTO @etl_user_id
      FROM `mot_v195_rel4`.`person` p
     WHERE p.`username` = c_username;

    IF (FOUND_ROWS() = 0)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = c_error_msg;
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `set_log_level` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `set_log_level`(p_log_level VARCHAR(10) CHARSET latin1)
    NO SQL
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_log_level VARCHAR(10) CHARSET latin1 DEFAULT IFNULL(p_log_level, 'info');

    DECLARE arbitrary_signal CONDITION FOR SQLSTATE '45000';
    
    IF (c_log_level NOT IN ('debug', 'info', 'warn', 'error'))
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Invalid log level passed.';
    END IF;

    SET @ddr_log_level = c_log_level;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `truncate_single_table` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `truncate_single_table`(p_schema VARCHAR(64),
                                                    p_table_name VARCHAR(64))
    NO SQL
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'truncate_single_table';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_cat_table_refs VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`(p_schema, p_table_name);
    DECLARE c_sql VARCHAR(256) DEFAULT CONCAT('TRUNCATE TABLE ', c_cat_table_refs);
    DECLARE c_is_truncate_allowed BOOLEAN DEFAULT `ddr_util`.`is_truncate_allowed`(p_schema, p_table_name);

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_schema, c_null), 
                                                              IFNULL(p_table_name, c_null),
                                                              IFNULL(c_sql, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    IF (p_schema IS NULL OR p_table_name IS NULL OR LOWER(p_schema) IN ('mot_v195_rel4', 'mysql', 'information_schema', 'performance_schema'))
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'This combination of schema and table cannot be TRUNCATEd';
    END IF;

    IF (NOT c_is_truncate_allowed)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Your table is not valid for TRUNCATE';
    END IF;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('Truncating ', c_cat_table_refs));

    CALL `ddr_util`.`prepare_then_execute_sql`(c_sql);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `validate_ranges` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `validate_ranges`(INOUT p_date_from DATETIME,
                                              INOUT p_date_to DATETIME,
                                              INOUT p_id_from INTEGER UNSIGNED,
                                              INOUT p_id_to INTEGER UNSIGNED)
    NO SQL
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'validate_ranges';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_1900 VARCHAR(10) DEFAULT '1900-01-01';
    DECLARE c_2999 VARCHAR(10) DEFAULT '2999-12-31';
    DECLARE c_00_00_00 INTEGER UNSIGNED DEFAULT 0;     
    DECLARE c_23_59_59 INTEGER UNSIGNED DEFAULT 86399; 
    DECLARE c_4BN INTEGER UNSIGNED DEFAULT 4294967295;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_date_from, c_null), 
                                                              IFNULL(p_date_to, c_null), 
                                                              IFNULL(p_id_from, c_null), 
                                                              IFNULL(p_id_to, c_null)));
        RESIGNAL;
    END;

    IF (p_date_from IS NULL AND p_date_to IS NULL AND p_id_from IS NULL AND p_id_to IS NULL)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Poor range selection. Ranges are too vague';
    END IF;

    SET p_date_from := IFNULL(p_date_from, DATE(c_1900));
    SET p_date_from := DATE(p_date_from) + INTERVAL c_00_00_00 SECOND; 

    SET p_date_to   := IFNULL(p_date_to, DATE(c_2999));
    SET p_date_to   := DATE(p_date_to) + INTERVAL c_23_59_59 SECOND; 

    SET p_id_from   := IFNULL(p_id_from, 0);
    SET p_id_to     := IFNULL(p_id_to, c_4BN);

    CALL `ddr_util`.`logger`('debug', c_module, CONCAT('Params adjusted to ', CONCAT_WS(', ', p_date_from, p_date_to, p_id_from, p_id_to)));

    IF (p_date_from >= p_date_to OR p_id_from > p_id_to)
    THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Poor range selection. From Date should be < To Date, and From Id should be <= To Id';
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Current Database: `mot_refactor`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `mot_refactor` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `mot_refactor`;

--
-- Dumping routines for database 'mot_refactor'
--
/*!50003 DROP PROCEDURE IF EXISTS `pop_empty_reason_map` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `pop_empty_reason_map`()
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'pop_empty_reason_map';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_target_schema VARCHAR(64) DEFAULT 'mot2';
    DECLARE c_table_name VARCHAR(64) DEFAULT 'empty_reason_map';
    DECLARE c_cat_table_refs VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`(c_target_schema, c_table_name);

    DECLARE c_etl_user_id INTEGER(10) UNSIGNED DEFAULT `ddr_util`.`get_etl_user_id`();
    DECLARE c_start_time DATETIME DEFAULT NOW();
    DECLARE c_truncate_is_required BOOLEAN DEFAULT TRUE;
    DECLARE c_where_is_not_required BOOLEAN DEFAULT FALSE;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    CALL `ddr_util`.`logger`('info', c_module, 'Started migration');

    CALL `mot2`.`set_mot_trigger_disabled`(TRUE);

    CALL `ddr_util`.`logger`('debug', c_module, 'Truncate required');
    CALL `ddr_util`.`truncate_single_table`(c_target_schema, c_table_name);

    SET FOREIGN_KEY_CHECKS = 0;

    INSERT IGNORE INTO `mot2`.`empty_reason_map` (`vehicle_id`, `empty_vin_reason_lookup_id`, `empty_vrm_reason_lookup_id`,
                                              `created_by`, `created_on`, `last_updated_by`,
                                              `last_updated_on`)
    SELECT src_.`id`,
           src_.`empty_vin_reason_id`,
           src_.`empty_vrm_reason_id`,
           c_etl_user_id, c_start_time,
           c_etl_user_id, c_start_time
    FROM `mot_v195_rel4`.`vehicle` src_
    WHERE empty_vin_reason_id IS NOT NULL OR empty_vrm_reason_id IS NOT NULL;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT_WS(' ', c_cat_table_refs,
                                                         FORMAT(ROW_COUNT(), 0), 'row(s) in',
                                                         TIMEDIFF(NOW(), c_start_time)));

    CALL `ddr_util`.`analyze_table`(c_target_schema, c_table_name);

    SET FOREIGN_KEY_CHECKS = 1;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Finished migration in ', TIMEDIFF(NOW(), c_start_time)));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `pop_make` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `pop_make`()
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'pop_make';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_source_schema VARCHAR(64) DEFAULT 'mot_v195_rel4';
    DECLARE c_target_schema VARCHAR(64) DEFAULT 'mot2';
    DECLARE c_table_name VARCHAR(64) DEFAULT 'make';

    DECLARE c_start_time DATETIME DEFAULT NOW();
    DECLARE c_truncate_is_not_required BOOLEAN DEFAULT FALSE;
    DECLARE c_where_is_not_required BOOLEAN DEFAULT FALSE;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    CALL `ddr_util`.`logger`('info', c_module, 'Started migration');

    CALL `mot2`.`set_mot_trigger_disabled`(TRUE);

    SET FOREIGN_KEY_CHECKS = 0;

    CALL `ddr_util`.`migrate_single_table`(c_source_schema, c_target_schema, c_table_name, NULL, NULL, NULL, NULL, c_truncate_is_not_required, c_where_is_not_required);
    CALL `ddr_util`.`analyze_table`(c_target_schema, c_table_name);

    CALL `mot_refactor`.`pri_make`();

    SET FOREIGN_KEY_CHECKS = 1;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Finished migration in ', TIMEDIFF(NOW(), c_start_time)));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `pop_model` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `pop_model`()
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'pop_model';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_source_schema VARCHAR(64) DEFAULT 'mot_v195_rel4';
    DECLARE c_target_schema VARCHAR(64) DEFAULT 'mot2';
    DECLARE c_table_name VARCHAR(64) DEFAULT 'model';

    DECLARE c_start_time DATETIME DEFAULT NOW();
    DECLARE c_truncate_is_not_required BOOLEAN DEFAULT FALSE;
    DECLARE c_where_is_not_required BOOLEAN DEFAULT FALSE;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    CALL `ddr_util`.`logger`('info', c_module, 'Started migration');

    CALL `mot2`.`set_mot_trigger_disabled`(TRUE);

    SET FOREIGN_KEY_CHECKS = 0;

    CALL `ddr_util`.`migrate_single_table`(c_source_schema, c_target_schema, c_table_name, NULL, NULL, NULL, NULL, c_truncate_is_not_required, c_where_is_not_required);
    CALL `ddr_util`.`analyze_table`(c_target_schema, c_table_name);

    CALL `mot_refactor`.`pri_model`();

    SET FOREIGN_KEY_CHECKS = 1;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Finished migration in ', TIMEDIFF(NOW(), c_start_time)));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `pop_model_detail` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `pop_model_detail`()
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'pop_model_detail';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_target_schema VARCHAR(64) DEFAULT 'mot2';
    DECLARE c_table_name VARCHAR(64) DEFAULT 'model_detail';
    DECLARE c_cat_table_refs VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`(c_target_schema, c_table_name);

    DECLARE c_etl_user_id INTEGER(10) UNSIGNED DEFAULT `ddr_util`.`get_etl_user_id`();
    DECLARE c_start_time DATETIME DEFAULT NOW();
    DECLARE c_truncate_is_required BOOLEAN DEFAULT TRUE;
    DECLARE c_where_is_not_required BOOLEAN DEFAULT FALSE;
    DECLARE c_unknown VARCHAR(8) DEFAULT 'UNKNOWN';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    CALL `ddr_util`.`logger`('info', c_module, 'Started migration');

    CALL `mot2`.`set_mot_trigger_disabled`(TRUE);

    SET FOREIGN_KEY_CHECKS = 0;

     
    INSERT IGNORE INTO `mot2`.`model_detail` (`body_type_id`, `fuel_type_id`, `wheelplan_type_id`, `transmission_type_id`,
                                              `eu_classification`, `cylinder_capacity`, `vehicle_class_id`, `model_id`,
                                              `sha1_concat_ws_chksum`, `created_by`, `created_on`, `last_updated_by`,
                                              `last_updated_on`)
    SELECT sha_src_.`body_type_id`,
           sha_src_.`fuel_type_id`,
           sha_src_.`wheelplan_type_id`,
           sha_src_.`transmission_type_id`,
           sha_src_.`eu_classification`,
           sha_src_.`cylinder_capacity`,
           sha_src_.`vehicle_class_id`,
           sha_src_.`model_id`,
           `ddr_util`.`get_model_detail_sha1`(sha_src_.`body_type_id`,
                                              sha_src_.`cylinder_capacity`,
                                              sha_src_.`eu_classification`,
                                              sha_src_.`fuel_type_id`,
                                              sha_src_.`transmission_type_id`,
                                              sha_src_.`vehicle_class_id`,
                                              sha_src_.`wheelplan_type_id`,
                                              sha_src_.`model_id`) sha1_concat_ws_chksum_,
           c_etl_user_id, c_start_time,
           c_etl_user_id, c_start_time
      FROM (SELECT DISTINCT
                   src_.`body_type_id`,
                   src_.`fuel_type_id`,
                   src_.`wheelplan_type_id`,
                   src_.`transmission_type_id`,
                   src_.`eu_classification`,
                   src_.`cylinder_capacity`,
                   src_.`vehicle_class_id`,
                   mo_.`id` model_id
              FROM `mot_v195_rel4`.`vehicle` src_
              JOIN `mot2`.`model` mo_ ON mo_.`make_id` = src_.`make_id` AND mo_.`id` = src_.`model_id`
             UNION SELECT DISTINCT
                   src_.`body_type_id`,
                   src_.`fuel_type_id`,
                   src_.`wheelplan_type_id`,
                   src_.`transmission_type_id`,
                   src_.`eu_classification`,
                   src_.`cylinder_capacity`,
                   src_.`vehicle_class_id`,
                   mo_.`id` model_id
              FROM `mot_v195_rel4`.`vehicle` src_
              JOIN `mot2`.`model` mo_ ON mo_.`make_id` = src_.`make_id` AND mo_.`name` = TRIM(src_.`model_name`)
             WHERE src_.`model_id` IS NULL
             UNION SELECT DISTINCT
                   src_.`body_type_id`,
                   src_.`fuel_type_id`,
                   src_.`wheelplan_type_id`,
                   src_.`transmission_type_id`,
                   src_.`eu_classification`,
                   src_.`cylinder_capacity`,
                   src_.`vehicle_class_id`,
                   mo_.`id` model_id
              FROM `mot_v195_rel4`.`vehicle` src_
              JOIN `mot2`.`model` mo_ ON mo_.`make_id` = src_.`make_id`
             WHERE src_.`model_id` IS NULL AND mo_.`name` = ''
             UNION SELECT DISTINCT
                   src_.`body_type_id`,
                   src_.`fuel_type_id`,
                   src_.`wheelplan_type_id`,
                   src_.`transmission_type_id`,
                   src_.`eu_classification`,
                   src_.`cylinder_capacity`,
                   src_.`vehicle_class_id`,
                   mo_.`id` model_id
              FROM `mot_v195_rel4`.`vehicle` src_
              JOIN `mot2`.`model` mo_ ON (mo_.`name` = TRIM(src_.`model_name`))
              JOIN `mot2`.`make` mk_ ON (mk_.`name` = src_.`make_name` AND mo_.`make_id` = mk_.`id`)
             WHERE src_.`make_id` IS NULL and src_.`model_id` IS NULL
             UNION SELECT DISTINCT
                   src_.`body_type_id`,
                   src_.`fuel_type_id`,
                   src_.`wheelplan_type_id`,
                   src_.`transmission_type_id`,
                   src_.`eu_classification`,
                   src_.`cylinder_capacity`,
                   src_.`vehicle_class_id`,
                   mo_.`id` model_id
              FROM `mot_v195_rel4`.`vehicle` src_
              JOIN `mot2`.`model` mo_
              JOIN `mot2`.`make` mk_ ON (mk_.`name` = src_.`make_name` AND mo_.`make_id` = mk_.`id`)
             WHERE mo_.`name` = '' AND src_.`make_id` IS NULL and src_.`model_id` IS NULL
             UNION SELECT DISTINCT
                   src_.`body_type_id`,
                   src_.`fuel_type_id`,
                   src_.`wheelplan_type_id`,
                   src_.`transmission_type_id`,
                   src_.`eu_classification`,
                   src_.`cylinder_capacity`,
                   src_.`vehicle_class_id`,
                   mo_.`id` model_id
              FROM `mot_v195_rel4`.`vehicle` src_
              JOIN `mot2`.`model` mo_ 
              JOIN `mot2`.`make` mk_ ON (mo_.`make_id` = mk_.`id`)
             WHERE mo_.`name` = c_unknown 
               AND mk_.`name` = c_unknown
               AND src_.`make_id` IS NULL and src_.`model_id` IS NULL AND src_.`make_name` IS NULL AND src_.`model_name` IS NULL) sha_src_;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT_WS(' ', c_cat_table_refs,
                                                         FORMAT(ROW_COUNT(), 0), 'row(s) in',
                                                         TIMEDIFF(NOW(), c_start_time)));

    CALL `ddr_util`.`analyze_table`(c_target_schema, c_table_name);

    SET FOREIGN_KEY_CHECKS = 1;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Finished migration in ', TIMEDIFF(NOW(), c_start_time)));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `pop_mot_test_hist` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `pop_mot_test_hist`()
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'pop_mot_test_hist';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
    DECLARE c_source_schema VARCHAR(64) DEFAULT 'mot_v195_rel4';
    DECLARE c_target_schema VARCHAR(64) DEFAULT 'mot2';
    DECLARE c_table_name VARCHAR(64) DEFAULT 'mot_test_hist';
    DECLARE c_default_max_id_value BIGINT DEFAULT -1;

    DECLARE c_start_time DATETIME DEFAULT NOW();
    DECLARE c_where_is_required BOOLEAN DEFAULT TRUE;

    DECLARE c_known_replace_point_in_sql VARCHAR(32) DEFAULT ' WHERE src_.'; 
    DECLARE c_sql_replacement VARCHAR(128) DEFAULT ' WHERE src_.`emergency_log_id` IS NOT NULL AND src_.';

    DECLARE v_sql VARCHAR(8192) DEFAULT '';
    DECLARE v_sql_before VARCHAR(8192) DEFAULT '';
    DECLARE v_row_count INTEGER DEFAULT 0;
    DECLARE v_max_id BIGINT DEFAULT 0; 

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    CALL `ddr_util`.`logger`('info', c_module, 'Started migration');

    CALL `mot2`.`set_mot_trigger_disabled`(TRUE);

    SET FOREIGN_KEY_CHECKS = 0;

    CALL `ddr_util`.`get_max_id_for_table`(c_target_schema, c_table_name, v_max_id);

    IF (v_max_id = c_default_max_id_value)
    THEN
        SET v_max_id := 0;
    END IF;

    SET v_sql := `ddr_util`.`generate_single_table_sql`(c_source_schema, c_target_schema, c_table_name, NULL, NULL, v_max_id, NULL, c_where_is_required);
    SET v_sql := REPLACE(v_sql, c_known_replace_point_in_sql, c_sql_replacement);

    CALL `ddr_util`.`logger`('debug', c_module, CONCAT('Preparing SQL using ', IFNULL(v_sql, c_null)));
    SET @c_insert_select_sql := v_sql;
    PREPARE insert_select_stmt FROM @c_insert_select_sql;

    EXECUTE insert_select_stmt;
    SET v_row_count := ROW_COUNT();
    DEALLOCATE PREPARE insert_select_stmt;

    CALL `ddr_util`.`analyze_table`(c_target_schema, c_table_name);

    SET FOREIGN_KEY_CHECKS = 1;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT_WS(' ', `ddr_util`.`cat_table_refs`(c_target_schema, c_table_name), FORMAT(v_row_count, 0) , 'row(s) in', TIMEDIFF(NOW(), c_start_time)));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `pop_vehicle` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `pop_vehicle`(p_date_from DATETIME, p_date_to DATETIME, p_id_from INTEGER UNSIGNED, p_id_to INTEGER UNSIGNED)
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'pop_vehicle';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_source_schema VARCHAR(64) DEFAULT 'mot_v195_rel4';
    DECLARE c_target_schema VARCHAR(64) DEFAULT 'mot2';
    DECLARE c_table_name VARCHAR(64) DEFAULT 'vehicle';

    DECLARE c_start_time DATETIME DEFAULT NOW();
    DECLARE c_truncate_is_not_required BOOLEAN DEFAULT FALSE;
    DECLARE c_where_is_required BOOLEAN DEFAULT TRUE;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_date_from, c_null), 
                                                              IFNULL(p_date_to, c_null), 
                                                              IFNULL(p_id_from, c_null), 
                                                              IFNULL(p_id_to, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    CALL `ddr_util`.`validate_ranges`(p_date_from, p_date_to, p_id_from, p_id_to);
   
    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Started migration using ', CONCAT_WS(', ', p_date_from, p_date_to, p_id_from, p_id_to)));

    CALL `mot2`.`set_mot_trigger_disabled`(TRUE);

    SET FOREIGN_KEY_CHECKS = 0;

    CALL `ddr_util`.`migrate_single_table`(c_source_schema, c_target_schema, c_table_name, p_date_from, p_date_to, p_id_from, p_id_to, c_truncate_is_not_required, c_where_is_required);
    CALL `ddr_util`.`analyze_table`(c_target_schema, c_table_name);

    CALL `mot_refactor`.`pri_vehicle_model_detail`(p_date_from, p_date_to, p_id_from, p_id_to);

    SET FOREIGN_KEY_CHECKS = 1;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Finished migration in ', TIMEDIFF(NOW(), c_start_time)));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `pri_make` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `pri_make`()
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'pri_make';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_target_schema VARCHAR(64) DEFAULT 'mot2';
    DECLARE c_table_name VARCHAR(64) DEFAULT 'make';
    DECLARE c_cat_source_table_refs VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`('mot_v195_rel4', 'vehicle');
    DECLARE c_cat_target_table_refs VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`(c_target_schema, c_table_name);

    DECLARE c_arbitrary_user_id INTEGER(10) UNSIGNED DEFAULT `ddr_util`.`get_etl_user_id`();
    DECLARE c_start_time DATETIME DEFAULT NOW();
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    SET FOREIGN_KEY_CHECKS = 0;
    
    CALL `ddr_util`.`logger`('debug', c_module, CONCAT(c_cat_target_table_refs, ' from ', c_cat_source_table_refs, '...'));

    INSERT IGNORE INTO `mot2`.`make` (`id`, `name`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`)
    SELECT 0 id, filtered_.make_name_, c_arbitrary_user_id, c_start_time, c_arbitrary_user_id, c_start_time
      FROM (SELECT DISTINCT TRIM(src_.`make_name`) make_name_
              FROM `mot_v195_rel4`.`vehicle` src_
             WHERE src_.`make_id` IS NULL
               AND LENGTH(TRIM(IFNULL(src_.`make_name`, ''))) != 0
             ORDER BY 1) filtered_; 

    CALL `ddr_util`.`logger`('info', c_module, CONCAT_WS(' ', c_cat_target_table_refs, 'from', c_cat_source_table_refs, FORMAT(ROW_COUNT(), 0), 'row(s)'));

    CALL `ddr_util`.`analyze_table`(c_target_schema, c_table_name);

    SET FOREIGN_KEY_CHECKS = 1;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `pri_model` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `pri_model`()
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'pri_model';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_target_schema VARCHAR(64) DEFAULT 'mot2';
    DECLARE c_table_name VARCHAR(64) DEFAULT 'model';
    DECLARE c_cat_source_table_refs VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`('mot_v195_rel4', 'vehicle');
    DECLARE c_cat_target_table_refs VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`(c_target_schema, c_table_name);

    DECLARE c_arbitrary_user_id INTEGER(10) UNSIGNED DEFAULT `ddr_util`.`get_etl_user_id`();
    DECLARE c_start_time DATETIME DEFAULT NOW();

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    SET FOREIGN_KEY_CHECKS = 0;
    
    CALL `ddr_util`.`logger`('debug', c_module, CONCAT(c_cat_target_table_refs, ' from ', c_cat_source_table_refs, '...'));

    INSERT IGNORE INTO `mot2`.`model` (`id`, `make_id`, `name`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`)
    SELECT 0 id, filtered_.make_id_, filtered_.model_name_, c_arbitrary_user_id, c_start_time, c_arbitrary_user_id, c_start_time
      FROM (SELECT DISTINCT TRIM(IFNULL(src_.`model_name`,'')) model_name_, mk_.`id` make_id_
              FROM `mot_v195_rel4`.`vehicle` src_
              JOIN `mot2`.`make` mk_ ON (mk_.`id` = src_.`make_id`)
             WHERE src_.`model_id` IS NULL
               AND src_.`make_id` IS NOT NULL    
             UNION
            SELECT DISTINCT TRIM(IFNULL(src_.`model_name`,'')) model_name_, mk_.`id` make_id_
              FROM `mot_v195_rel4`.`vehicle` src_
              JOIN `mot2`.`make` mk_ ON (mk_.`name` = src_.`make_name`)
             WHERE src_.`model_id` IS NULL
               AND src_.`make_id` IS NULL
            ORDER BY 1) filtered_; 

    CALL `ddr_util`.`logger`('info', c_module, CONCAT_WS(' ', c_cat_target_table_refs, 'from', c_cat_source_table_refs, FORMAT(ROW_COUNT(), 0), 'row(s)'));

    CALL `ddr_util`.`analyze_table`(c_target_schema, c_table_name);

    SET FOREIGN_KEY_CHECKS = 1;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `pri_vehicle_model_detail` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `pri_vehicle_model_detail`(p_date_from DATETIME, p_date_to DATETIME, p_id_from INTEGER UNSIGNED, p_id_to INTEGER UNSIGNED)
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'pri_vehicle_model_detail';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_target_schema VARCHAR(64) DEFAULT 'mot2';
    DECLARE c_table_name_model_detail VARCHAR(64) DEFAULT 'model_detail';
    DECLARE c_target_model_detail_table VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`(c_target_schema, c_table_name_model_detail);
    DECLARE c_table_name_vehicle VARCHAR(64) DEFAULT 'vehicle';
    DECLARE c_target_vehicle_table VARCHAR(256) DEFAULT `ddr_util`.`cat_table_refs`(c_target_schema, c_table_name_vehicle);
    DECLARE c_unknown VARCHAR(8) DEFAULT 'UNKNOWN';

    DECLARE v_start_time DATETIME;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_date_from, c_null), 
                                                              IFNULL(p_date_to, c_null), 
                                                              IFNULL(p_id_from, c_null), 
                                                              IFNULL(p_id_to, c_null)));
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    CALL `ddr_util`.`validate_ranges`(p_date_from, p_date_to, p_id_from, p_id_to);

    SET FOREIGN_KEY_CHECKS = 0;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT('Attaching ', c_target_model_detail_table,' back to ', c_target_vehicle_table));

    SET v_start_time := NOW();

    
    UPDATE `mot2`.`vehicle` v_
      JOIN `mot_v195_rel4`.`vehicle` src_ ON (src_.`id` = v_.`id`)
      JOIN `mot_v195_rel4`.`model` mo_ ON (mo_.`make_id` = src_.`make_id` AND mo_.`id` = src_.`model_id`)
      JOIN `mot2`.`model_detail` md_ ON (md_.`sha1_concat_ws_chksum` = `ddr_util`.`get_model_detail_sha1`(src_.`body_type_id`,
                                                                                                          src_.`cylinder_capacity`,
                                                                                                          src_.`eu_classification`,
                                                                                                          src_.`fuel_type_id`,
                                                                                                          src_.`transmission_type_id`,
                                                                                                          src_.`vehicle_class_id`,
                                                                                                          src_.`wheelplan_type_id`,
                                                                                                          mo_.`id`))
       SET v_.`model_detail_id` =  md_.`id`
     WHERE IFNULL(src_.`last_updated_on`, src_.`created_on`) BETWEEN p_date_from AND p_date_to
       AND src_.`id` BETWEEN p_id_from AND p_id_to;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT_WS(' ', c_target_model_detail_table, '#1 back to', c_target_vehicle_table,
                                                         FORMAT(ROW_COUNT(), 0),
                                                         'vehicle row(s) updated with `model_detail_id` values in',
                                                         TIMEDIFF(NOW(), v_start_time)));

    SET v_start_time := NOW();

    
    UPDATE `mot2`.`vehicle` v_
      JOIN `mot_v195_rel4`.`vehicle` src_ ON (src_.`id` = v_.`id`)
      JOIN `mot2`.`model` mo_ ON (mo_.`make_id` = src_.`make_id` AND mo_.`name` = TRIM(IFNULL(src_.`model_name`,'')))
      JOIN `mot2`.`model_detail` md_ ON (md_.`sha1_concat_ws_chksum` = `ddr_util`.`get_model_detail_sha1`(src_.`body_type_id`,
                                                                                                          src_.`cylinder_capacity`,
                                                                                                          src_.`eu_classification`,
                                                                                                          src_.`fuel_type_id`,
                                                                                                          src_.`transmission_type_id`,
                                                                                                          src_.`vehicle_class_id`,
                                                                                                          src_.`wheelplan_type_id`,
                                                                                                          mo_.`id`))
       SET v_.`model_detail_id` =  md_.`id`
     WHERE IFNULL(src_.`last_updated_on`, src_.`created_on`) BETWEEN p_date_from AND p_date_to
       AND src_.`id` BETWEEN p_id_from AND p_id_to
       AND v_.`model_detail_id` IS NULL;

    
    CALL `ddr_util`.`logger`('info', c_module, CONCAT_WS(' ', c_target_model_detail_table, '#2 back to', c_target_vehicle_table,
                                                         FORMAT(ROW_COUNT(), 0),
                                                         'vehicle row(s) updated with `model_detail_id` values in',
                                                         TIMEDIFF(NOW(), v_start_time)));

    SET v_start_time := NOW();

    UPDATE `mot2`.`vehicle` v_
      JOIN `mot_v195_rel4`.`vehicle` src_ ON (src_.`id` = v_.`id`)
      JOIN `mot2`.`make` mk_ ON (mk_.`name` = src_.`make_name`)
      JOIN `mot2`.`model` mo_ ON (mo_.`make_id` = mk_.`id` AND mo_.`name` = TRIM(IFNULL(src_.`model_name`,'')))
      JOIN `mot2`.`model_detail` md_ ON (md_.`sha1_concat_ws_chksum` = `ddr_util`.`get_model_detail_sha1`(src_.`body_type_id`,
                                                                                                          src_.`cylinder_capacity`,
                                                                                                          src_.`eu_classification`,
                                                                                                          src_.`fuel_type_id`,
                                                                                                          src_.`transmission_type_id`,
                                                                                                          src_.`vehicle_class_id`,
                                                                                                          src_.`wheelplan_type_id`,
                                                                                                          mo_.`id`))
       SET v_.`model_detail_id` =  md_.`id`
     WHERE IFNULL(src_.`last_updated_on`, src_.`created_on`) BETWEEN p_date_from AND p_date_to
       AND src_.`id` BETWEEN p_id_from AND p_id_to
       AND v_.`model_detail_id` IS NULL;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT_WS(' ', c_target_model_detail_table, '#3 back to', c_target_vehicle_table,
                                                         FORMAT(ROW_COUNT(), 0),
                                                         'vehicle row(s) updated with `model_detail_id` values in',
                                                         TIMEDIFF(NOW(), v_start_time)));
    SET v_start_time := NOW();

    
    UPDATE `mot2`.`vehicle` v_
      JOIN `mot_v195_rel4`.`vehicle` src_ ON (src_.`id` = v_.`id`)
      JOIN `mot2`.`model` mo_ 
      JOIN `mot2`.`make` mk_ ON (mo_.`make_id` = mk_.`id`)
      JOIN `mot2`.`model_detail` md_ ON (md_.`sha1_concat_ws_chksum` = `ddr_util`.`get_model_detail_sha1`(src_.`body_type_id`,
                                                                                                          src_.`cylinder_capacity`,
                                                                                                          src_.`eu_classification`,
                                                                                                          src_.`fuel_type_id`,
                                                                                                          src_.`transmission_type_id`,
                                                                                                          src_.`vehicle_class_id`,
                                                                                                          src_.`wheelplan_type_id`,
                                                                                                          mo_.`id`))
       SET v_.`model_detail_id` =  md_.`id`
     WHERE IFNULL(src_.`last_updated_on`, src_.`created_on`) BETWEEN p_date_from AND p_date_to
       AND src_.`id` BETWEEN p_id_from AND p_id_to
       AND mk_.`name` = c_unknown
       AND mo_.`name` = c_unknown
       AND src_.`make_id` IS NULL 
       AND src_.`make_name` IS NULL 
       AND src_.`model_id` IS NULL 
       AND src_.`model_name` IS NULL 
       AND v_.`model_detail_id` IS NULL;

    CALL `ddr_util`.`logger`('info', c_module, CONCAT_WS(' ', c_target_model_detail_table, '#4 back to', c_target_vehicle_table,
                                                         FORMAT(ROW_COUNT(), 0),
                                                         'vehicle row(s) updated with `model_detail_id` values in',
                                                         TIMEDIFF(NOW(), v_start_time)));

    CALL `ddr_util`.`analyze_table`(c_target_schema, c_table_name_vehicle);

    SET FOREIGN_KEY_CHECKS = 1;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Current Database: `ut_ddr_util`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `ut_ddr_util` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `ut_ddr_util`;

--
-- Dumping routines for database 'ut_ddr_util'
--
/*!50003 DROP PROCEDURE IF EXISTS `ut_add_boilerplate` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `ut_add_boilerplate`()
    NO SQL
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'ut_add_boilerplate';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    
    DECLARE c_start_time DATETIME DEFAULT NOW(); 

    DECLARE v_is_test_failed BOOLEAN DEFAULT FALSE; 

    DECLARE v_test_stage VARCHAR(1024) DEFAULT '';

    
    DECLARE v_code VARCHAR(8000);
    DECLARE v_object_name VARCHAR(64);

    
    DECLARE ut_generic_exc CONDITION FOR SQLSTATE '45000';
    DECLARE ut_assert_failed_exc CONDITION FOR SQLSTATE '45223';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        ROLLBACK;
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT_WS('|', 'UNIT TEST FAILED', v_test_stage, v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 1; 
        RESIGNAL;
    END;

    SET v_test_stage := 'setup';
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST STARTED: ', c_module));
    START TRANSACTION;

    
    SET v_test_stage := 'user setup';

    
    

    SET v_test_stage := '#1.0 - check for object name in comments';
    SET v_code := 'Initial string';
    SET v_object_name := 'test_object_name';
    CALL `ddr_util`.`add_boilerplate`(v_code, v_object_name, FALSE);
    CALL `ut`.`assert_in`(v_code, v_object_name);

    SET v_test_stage := '#1.1 - check for version information in comments';
    SET v_code := 'Initial string';
    SET v_object_name := 'test_object_name';
    CALL `ddr_util`.`add_boilerplate`(v_code, v_object_name, TRUE);
    CALL `ut`.`assert_in`(v_code, CONCAT('$Id', '$'));

    
    

    
    
    SET v_test_stage := 'user teardown';

    
    SET v_test_stage := 'teardown';
    ROLLBACK;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST PASSED: ', c_module));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ut_add_code_line` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `ut_add_code_line`()
    NO SQL
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'ut_add_code_line';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    
    DECLARE c_start_time DATETIME DEFAULT NOW(); 

    DECLARE v_is_test_failed BOOLEAN DEFAULT FALSE; 

    DECLARE v_test_stage VARCHAR(1024) DEFAULT '';

    
    DECLARE v_code VARCHAR(8000);
    DECLARE v_add_line VARCHAR(256);
    DECLARE v_indent INTEGER(2) UNSIGNED;

    
    DECLARE ut_generic_exc CONDITION FOR SQLSTATE '45000';
    DECLARE ut_assert_failed_exc CONDITION FOR SQLSTATE '45223';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        ROLLBACK;
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT_WS('|', 'UNIT TEST FAILED', v_test_stage, v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 1; 
        RESIGNAL;
    END;

    SET v_test_stage := 'setup';
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST STARTED: ', c_module));
    START TRANSACTION;

    
    SET v_test_stage := 'user setup';

    
    

    SET v_test_stage := '#1.0 - NULL initial string, non-NULL input, indent=1';
    SET v_code := NULL;
    SET v_add_line := 'Added line';
    SET v_indent := 1;
    CALL `ddr_util`.`add_code_line`(v_code, v_add_line, v_indent);
    CALL `ut`.`assert_eq`(v_code, CONCAT(CHAR(10), '    Added line'));

    SET v_test_stage := '#1.1 - non-NULL initial string, non-NULL input, indent=0';
    SET v_code := 'First line';
    SET v_add_line := 'Next line';
    SET v_indent := 0;
    CALL `ddr_util`.`add_code_line`(v_code, v_add_line, v_indent);
    CALL `ut`.`assert_eq`(v_code, CONCAT('First line', CHAR(10), 'Next line'));

    SET v_test_stage := '#1.2 - non-NULL initial string, NULL input, indent=2';
    SET v_code := 'First line';
    SET v_add_line := NULL;
    SET v_indent := 0;
    CALL `ddr_util`.`add_code_line`(v_code, v_add_line, v_indent);
    CALL `ut`.`assert_eq`(v_code, CONCAT('First line', CHAR(10)));

    SET v_test_stage := '#1.3 - space-padded input';
    SET v_code := 'First line';
    SET v_add_line := '  Next line  ';
    SET v_indent := 0;
    CALL `ddr_util`.`add_code_line`(v_code, v_add_line, v_indent);
    CALL `ut`.`assert_eq`(v_code, CONCAT('First line', CHAR(10), 'Next line'));

    
    

    
    
    SET v_test_stage := 'user teardown';

    
    SET v_test_stage := 'teardown';
    ROLLBACK;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST PASSED: ', c_module));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ut_analyze_table` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `ut_analyze_table`()
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'ut_analyze_table';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    
    DECLARE c_start_time DATETIME DEFAULT NOW(); 

    DECLARE v_is_test_failed BOOLEAN DEFAULT FALSE; 

    DECLARE v_test_stage VARCHAR(1024) DEFAULT '';

    

    
    DECLARE ut_generic_exc CONDITION FOR SQLSTATE '45000';
    DECLARE ut_assert_failed_exc CONDITION FOR SQLSTATE '45223';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        ROLLBACK;
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT_WS('|', 'UNIT TEST FAILED', v_test_stage, v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 1; 
        RESIGNAL;
    END;

    SET v_test_stage := 'setup';
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST STARTED: ', c_module));
    START TRANSACTION;

    
    SET v_test_stage := 'user setup';

    
    

    SET v_test_stage := '#1.0 - ANALYZE existing, known (albeit borrowed) table';
    CALL `ddr_util`.`analyze_table`('mot_v195_rel4', 'app_status');

    

    SET v_test_stage := '#2.0 - ANALYZE not allowed on NULL schema';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`analyze_table`(NULL, 'app_status');
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#2.1 - ANALYZE not allowed on NULL table name';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`analyze_table`('mot_v195_rel4', NULL);
        CALL `ut`.`fail_test`;
    END;

    

    SET v_test_stage := '#3.0 - ANALYZE not allowed on non-existent table';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`analyze_table`('abc', 'def_');
        CALL `ut`.`fail_test`;
    END;
    
    
    SET v_test_stage := 'user teardown';

    
    SET v_test_stage := 'teardown';
    ROLLBACK;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST PASSED: ', c_module));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ut_cat_table_refs` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `ut_cat_table_refs`()
    NO SQL
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'ut_cat_table_refs';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    
    DECLARE c_start_time DATETIME DEFAULT NOW(); 

    DECLARE v_is_test_failed BOOLEAN DEFAULT FALSE; 

    DECLARE v_test_stage VARCHAR(1024) DEFAULT '';

    
    DECLARE v_dummy VARCHAR(256) DEFAULT '';

    
    DECLARE ut_generic_exc CONDITION FOR SQLSTATE '45000';
    DECLARE ut_assert_failed_exc CONDITION FOR SQLSTATE '45223';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        ROLLBACK;
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT_WS('|', 'UNIT TEST FAILED', v_test_stage, v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 1; 
        RESIGNAL;
    END;

    SET v_test_stage := 'setup';
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST STARTED: ', c_module));
    START TRANSACTION;

    
    SET v_test_stage := 'user setup';

    
    

    SET v_test_stage := '#1.0 - quality in, quality out';
    CALL `ut`.`assert_eq`('`mot2`.`dvla_vehicle`', `ddr_util`.`cat_table_refs`('mot2', 'dvla_vehicle'));

    

    SET v_test_stage := '#2.0 - no NULL args allowed - schema name';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        SET v_dummy := `ddr_util`.`cat_table_refs`(NULL, 'dvla_vehicle');
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#2.1 - no NULL args allowed - table name';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        SET v_dummy := `ddr_util`.`cat_table_refs`('mot2', NULL);
        CALL `ut`.`fail_test`;
    END;

    

    SET v_test_stage := '#3.0 - no zero length args allowed - schema name';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        SET v_dummy := `ddr_util`.`cat_table_refs`('', 'dvla_vehicle');
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#3.1 - no zero length args allowed - table name';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        SET v_dummy := `ddr_util`.`cat_table_refs`('mot2', '');
        CALL `ut`.`fail_test`;
    END;

    
    
    SET v_test_stage := 'user teardown';

    
    SET v_test_stage := 'teardown';
    ROLLBACK;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST PASSED: ', c_module));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ut_create_hist_table` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `ut_create_hist_table`()
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'ut_create_hist_table';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    
    DECLARE c_start_time DATETIME DEFAULT NOW(); 

    DECLARE v_is_test_failed BOOLEAN DEFAULT FALSE; 

    DECLARE v_test_stage VARCHAR(1024) DEFAULT '';

    
    DECLARE c_dummy_source_schema_name VARCHAR(64) DEFAULT 'ut'; 
    DECLARE c_dummy_target_schema_name VARCHAR(64) DEFAULT c_dummy_source_schema_name;
    DECLARE c_dummy_table_name VARCHAR(64) DEFAULT 'create_hist_table_temp';
    DECLARE c_dummy_table_name_hist VARCHAR(64) DEFAULT 'create_hist_table_temp_hist';

    
    DECLARE ut_generic_exc CONDITION FOR SQLSTATE '45000';
    DECLARE ut_assert_failed_exc CONDITION FOR SQLSTATE '45223';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        ROLLBACK;
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT_WS('|', 'UNIT TEST FAILED', v_test_stage, v_returned_sqlstate, v_message_text));
        DROP TABLE IF EXISTS `ut`.`create_hist_table_temp`;
        DROP TABLE IF EXISTS `ut`.`create_hist_table_temp_hist`;
        SET FOREIGN_KEY_CHECKS = 1; 
        RESIGNAL;
    END;

    SET v_test_stage := 'setup';
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST STARTED: ', c_module));
    START TRANSACTION;

    
    SET v_test_stage := 'user setup';

    DROP TABLE IF EXISTS `ut`.`create_hist_table_temp`;
    DROP TABLE IF EXISTS `ut`.`create_hist_table_temp_hist`;

    SET v_test_stage := 'user setup - create "temporary" table';
    CREATE TABLE `ut`.`create_hist_table_temp`(`id` INTEGER(10) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY, `version` INTEGER(10) DEFAULT 1, `text_column` TEXT);

    
    

    SET v_test_stage := '#1.0 - create a valid history table';
    CALL `ut`.`assert_false`(`ddr_util`.`is_table_exists`(c_dummy_target_schema_name, c_dummy_table_name_hist));

    CALL `ddr_util`.`create_hist_table`(c_dummy_source_schema_name, c_dummy_target_schema_name, c_dummy_table_name);

    CALL `ut`.`assert_true`(`ddr_util`.`is_table_exists`(c_dummy_target_schema_name, c_dummy_table_name_hist));

    

    SET v_test_stage := '#2.0 - NULL source schema';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`create_hist_table`(NULL, SHA1(c_start_time), SHA1(c_start_time));
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#2.1 - NULL target schema';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`create_hist_table`(SHA1(c_start_time), NULL, SHA1(c_start_time));
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#2.2 - NULL non-history table name';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`create_hist_table`(SHA1(c_start_time), SHA1(c_start_time), NULL);
        CALL `ut`.`fail_test`;
    END;

    

    SET v_test_stage := '#3.0 - invalid source schema choice mot_v195_rel4';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`create_hist_table`('mot_v195_rel4', SHA1(c_start_time), SHA1(c_start_time));
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#3.1 - invalid source schema choice mysql';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`create_hist_table`('mysql', SHA1(c_start_time), SHA1(c_start_time));
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#3.2 - invalid source schema choice information_schema';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`create_hist_table`('information_schema', SHA1(c_start_time), SHA1(c_start_time));
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#3.3 - invalid source schema choice performance_schema';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`create_hist_table`('performance_schema', SHA1(c_start_time), SHA1(c_start_time));
        CALL `ut`.`fail_test`;
    END;
    

    SET v_test_stage := '#4.0 - invalid target schema choice mot_v195_rel4';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`create_hist_table`(SHA1(c_start_time), 'mot_v195_rel4', SHA1(c_start_time));
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#4.1 - invalid target schema choice mysql';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`create_hist_table`(SHA1(c_start_time), 'mysql', SHA1(c_start_time));
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#4.2 - invalid target schema choice information_schema';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`create_hist_table`(SHA1(c_start_time), 'information_schema', SHA1(c_start_time));
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#4.3 - invalid target schema choice performance_schema';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`create_hist_table`(SHA1(c_start_time), 'performance_schema', SHA1(c_start_time));
        CALL `ut`.`fail_test`;
    END;

    
    
    SET v_test_stage := 'user teardown';
    DROP TABLE IF EXISTS `ut`.`create_hist_table_temp`;
    DROP TABLE IF EXISTS `ut`.`create_hist_table_temp_hist`;

    
    SET v_test_stage := 'teardown';
    ROLLBACK;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST PASSED: ', c_module));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ut_drop_batch_number_columns` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `ut_drop_batch_number_columns`()
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'ut_drop_batch_number_columns';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    
    DECLARE c_start_time DATETIME DEFAULT NOW(); 

    DECLARE v_is_test_failed BOOLEAN DEFAULT FALSE; 

    DECLARE v_test_stage VARCHAR(1024) DEFAULT '';

    
    DECLARE c_dummy_schema_name VARCHAR(64) DEFAULT 'ut'; 
    DECLARE c_dummy_table_name_1 VARCHAR(64) DEFAULT 'drop_batch_number_columns_1_temp';
    DECLARE c_dummy_table_name_2 VARCHAR(64) DEFAULT 'drop_batch_number_columns_2_temp';

    DECLARE v_column_count INTEGER UNSIGNED DEFAULT 0;

    
    DECLARE ut_generic_exc CONDITION FOR SQLSTATE '45000';
    DECLARE ut_assert_failed_exc CONDITION FOR SQLSTATE '45223';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        ROLLBACK;
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT_WS('|', 'UNIT TEST FAILED', v_test_stage, v_returned_sqlstate, v_message_text));
        DROP TABLE IF EXISTS `ut`.`drop_batch_number_columns_1_temp`;
        DROP TABLE IF EXISTS `ut`.`drop_batch_number_columns_2_temp`;
        SET FOREIGN_KEY_CHECKS = 1; 
        RESIGNAL;
    END;

    SET v_test_stage := 'setup';
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST STARTED: ', c_module));
    START TRANSACTION;

    
    SET v_test_stage := 'user setup - drop "temporary" tables';
    DROP TABLE IF EXISTS `ut`.`drop_batch_number_columns_1_temp`;
    DROP TABLE IF EXISTS `ut`.`drop_batch_number_columns_2_temp`;

    SET v_test_stage := 'user setup - create first "temporary" table';
    CREATE TABLE `ut`.`drop_batch_number_columns_1_temp`(`id` INTEGER(10) UNSIGNED NOT NULL AUTO_INCREMENT, `batch_number` INT(10) UNSIGNED, `mot1_legacy_id` VARCHAR(80), PRIMARY KEY(`id`));

    SET v_test_stage := 'user setup - create duplicate "temporary" tables';
    CREATE TABLE `ut`.`drop_batch_number_columns_2_temp`(`id` INTEGER(10) UNSIGNED NOT NULL AUTO_INCREMENT, `not_batch_number` INT(10) UNSIGNED, `not_mot1_legacy_id` VARCHAR(80), PRIMARY KEY(`id`));

    SET v_test_stage := 'user setup - count start position';
    SELECT COUNT(*) INTO v_column_count
      FROM `information_schema`.`COLUMNS`
     WHERE `table_catalog` = 'def'
       AND `table_schema` = c_dummy_schema_name
       AND `column_name` IN ('batch_number', 'mot1_legacy_id');

    CALL `ut`.`assert_true`(v_column_count != 0);

    
    

    SET v_test_stage := '#1.0 - NULL schema not allowed';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`drop_batch_number_columns`(NULL); 
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#1.1 - mot_v195_rel4 schema not allowed';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`drop_batch_number_columns`('mot_v195_rel4');
        CALL `ut`.`fail_test`;
    END;

    

    SET v_test_stage := '#2.0 - requisite columns have been dropped';
    CALL `ddr_util`.`drop_batch_number_columns`(c_dummy_schema_name);

    SELECT COUNT(*) INTO v_column_count
      FROM `information_schema`.`COLUMNS`
     WHERE `table_catalog` = 'def'
       AND `table_schema` = c_dummy_schema_name
       AND `column_name` IN ('batch_number', 'mot1_legacy_id');

    CALL `ut`.`assert_true`(v_column_count = 0);

    
    
    SET v_test_stage := 'user teardown';
    ROLLBACK; 

    DROP TABLE IF EXISTS `ut`.`drop_batch_number_columns_1_temp`;
    DROP TABLE IF EXISTS `ut`.`drop_batch_number_columns_2_temp`;

    
    SET v_test_stage := 'teardown';
    ROLLBACK;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST PASSED: ', c_module));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ut_drop_hist_table` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `ut_drop_hist_table`()
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'ut_drop_hist_table';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    
    DECLARE c_start_time DATETIME DEFAULT NOW(); 

    DECLARE v_is_test_failed BOOLEAN DEFAULT FALSE; 

    DECLARE v_test_stage VARCHAR(1024) DEFAULT '';

    
    DECLARE c_dummy_source_schema_name VARCHAR(64) DEFAULT 'ut'; 
    DECLARE c_dummy_target_schema_name VARCHAR(64) DEFAULT c_dummy_source_schema_name;
    DECLARE c_dummy_table_name VARCHAR(64) DEFAULT 'drop_hist_table_temp';
    DECLARE c_dummy_table_name_hist VARCHAR(64) DEFAULT 'drop_hist_table_temp_hist';

    
    DECLARE ut_generic_exc CONDITION FOR SQLSTATE '45000';
    DECLARE ut_assert_failed_exc CONDITION FOR SQLSTATE '45223';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        ROLLBACK;
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT_WS('|', 'UNIT TEST FAILED', v_test_stage, v_returned_sqlstate, v_message_text));
        DROP TABLE IF EXISTS `ut`.`drop_hist_table_temp`;
        DROP TABLE IF EXISTS `ut`.`drop_hist_table_temp_hist`;
        SET FOREIGN_KEY_CHECKS = 1; 
        RESIGNAL;
    END;

    SET v_test_stage := 'setup';
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST STARTED: ', c_module));
    START TRANSACTION;
    
    
    SET v_test_stage := 'user setup';

    DROP TABLE IF EXISTS `ut`.`drop_hist_table_temp`;
    DROP TABLE IF EXISTS `ut`.`drop_hist_table_temp_hist`;

    SET v_test_stage := 'user setup - create "temporary" table';
    CREATE TABLE `ut`.`drop_hist_table_temp`(`id` INTEGER(10) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY, `version` INTEGER(10) DEFAULT 1, `text_column` TEXT);

    SET v_test_stage := 'user setup - create history table';
    CALL `ddr_util`.`create_hist_table`(c_dummy_source_schema_name, c_dummy_target_schema_name, c_dummy_table_name);

    
    

    SET v_test_stage := '#1.0 - drop the history table';
    CALL `ut`.`assert_true`(`ddr_util`.`is_table_exists`(c_dummy_target_schema_name, c_dummy_table_name_hist));

    CALL `ddr_util`.`drop_hist_table`(c_dummy_target_schema_name, c_dummy_table_name_hist);

    CALL `ut`.`assert_false`(`ddr_util`.`is_table_exists`(c_dummy_target_schema_name, c_dummy_table_name_hist));

    

    SET v_test_stage := '#2.0 - NULL schema';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`drop_hist_table`(NULL, SHA1(c_start_time));
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#2.2 - NULL history table name';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`drop_hist_table`(SHA1(c_start_time), NULL);
        CALL `ut`.`fail_test`;
    END;

    

    SET v_test_stage := '#3.0 - must be a _hist table';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`drop_hist_table`(c_dummy_target_schema_name, c_dummy_table_name);
        CALL `ut`.`fail_test`;
    END;

    

    SET v_test_stage := '#4.0 - invalid schema choice mot_v195_rel4';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`drop_hist_table`('mot_v195_rel4', SHA1(c_start_time));
        CALL `ut`.`fail_test`;
    END;

    
    
    SET v_test_stage := 'user teardown';
    DROP TABLE IF EXISTS `ut`.`drop_hist_table_temp`;
    DROP TABLE IF EXISTS `ut`.`drop_hist_table_temp_hist`;

    
    SET v_test_stage := 'teardown';
    ROLLBACK;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST PASSED: ', c_module));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ut_generate_hist_table_ddl` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `ut_generate_hist_table_ddl`()
    NO SQL
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'ut_generate_hist_table_ddl';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    
    DECLARE c_start_time DATETIME DEFAULT NOW(); 

    DECLARE v_is_test_failed BOOLEAN DEFAULT FALSE; 

    DECLARE v_test_stage VARCHAR(1024) DEFAULT '';

    
    DECLARE c_source_schema VARCHAR(64) DEFAULT 'source_schema';
    DECLARE c_target_schema VARCHAR(64) DEFAULT 'target_schema';
    DECLARE c_non_hist_table_name VARCHAR(64) DEFAULT 'table_name';
    DECLARE c_hist_table_name VARCHAR(64) DEFAULT 'table_name_hist';

    DECLARE v_ddl VARCHAR(8000);

    
    DECLARE ut_generic_exc CONDITION FOR SQLSTATE '45000';
    DECLARE ut_assert_failed_exc CONDITION FOR SQLSTATE '45223';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        ROLLBACK;
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT_WS('|', 'UNIT TEST FAILED', v_test_stage, v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 1; 
        RESIGNAL;
    END;

    SET v_test_stage := 'setup';
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST STARTED: ', c_module));
    START TRANSACTION;

    
    SET v_test_stage := 'user setup';

    
    

    SET v_test_stage := '#1.0 - Check elements of a create table exist - CREATE TABLE / PRIMARY KEY / COMMENT';

    SET v_ddl := `ddr_util`.`generate_hist_table_ddl`(c_source_schema, c_target_schema, c_non_hist_table_name);
    
    CALL `ut`.`assert_in`(v_ddl, CONCAT('CREATE TABLE ', `ddr_util`.`cat_table_refs`(c_target_schema, c_hist_table_name)));
    CALL `ut`.`assert_in`(v_ddl, 'PRIMARY KEY (hist_id)');
    CALL `ut`.`assert_in`(v_ddl, ') ENGINE=InnoDB ROW_FORMAT=COMPRESSED COMMENT ''DDL GENERATED ');

    

    SET v_test_stage := '#2.0 - NULL parameters; check source schema';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        SET v_ddl := `ddr_util`.`generate_hist_table_ddl`(NULL, c_target_schema, c_non_hist_table_name);
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#2.1 - NULL parameters; check target schema';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        SET v_ddl := `ddr_util`.`generate_hist_table_ddl`(c_source_schema, NULL, c_non_hist_table_name);
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#2.2 - NULL parameters; check non-history table name';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        SET v_ddl := `ddr_util`.`generate_hist_table_ddl`(c_source_schema, c_target_schema, NULL);
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#2.3 - parameters; check non-history table name isn''t really a history table already';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        SET v_ddl := `ddr_util`.`generate_hist_table_ddl`(c_source_schema, c_target_schema, c_hist_table_name);
        CALL `ut`.`fail_test`;
    END;

    
    

    
    SET v_test_stage := 'teardown';
    ROLLBACK;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST PASSED: ', c_module));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ut_generate_single_table_sql` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `ut_generate_single_table_sql`()
    NO SQL
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'ut_generate_single_table_sql';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    
    DECLARE c_start_time DATETIME DEFAULT NOW(); 

    DECLARE v_is_test_failed BOOLEAN DEFAULT FALSE; 

    DECLARE v_test_stage VARCHAR(1024) DEFAULT '';

    
    DECLARE c_lf CHAR(1) CHARACTER SET latin1 DEFAULT CHAR(10);

    DECLARE c_good_sql_prefix VARCHAR(2048) DEFAULT CONCAT('INSERT INTO `mot2`.`dvla_vehicle`(`id`,`registration`,`registration_collapsed`,`registration_validation_character`,`vin`,',
                                                                                             '`vin_reversed`,`vin_collapsed`,`vin_collapsed_reversed`,`model_code`,`make_code`,`make_in_full`,',
                                                                                             '`colour_1_code`,`colour_2_code`,`propulsion_code`,`designed_gross_weight`,`unladen_weight`,',
                                                                                             '`engine_number`,`engine_capacity`,`seating_capacity`,`manufacture_date`,`first_registration_date`,',
                                                                                             '`is_seriously_damaged`,`recent_v5_document_number`,`is_vehicle_new_at_first_registration`,',
                                                                                             '`body_type_code`,`wheelplan_code`,`sva_emission_standard`,`ct_related_mark`,`vehicle_id`,',
                                                                                             '`dvla_vehicle_id`,`eu_classification`,`mass_in_service_weight`,`mot1_legacy_id`,`created_by`,`created_on`,',
                                                                                             '`version`,`batch_number`,`last_updated_by`,`last_updated_on`)', c_lf,
                                                           'SELECT src_.`id`,src_.`registration`,src_.`registration_collapsed`,src_.`registration_validation_character`,src_.`vin`,',
                                                                  'src_.`vin_reversed`,src_.`vin_collapsed`,src_.`vin_collapsed_reversed`,src_.`model_code`,src_.`make_code`,',
                                                                  'src_.`make_in_full`,src_.`colour_1_code`,src_.`colour_2_code`,src_.`propulsion_code`,src_.`designed_gross_weight`,',
                                                                  'src_.`unladen_weight`,src_.`engine_number`,src_.`engine_capacity`,src_.`seating_capacity`,src_.`manufacture_date`,',
                                                                  'src_.`first_registration_date`,src_.`is_seriously_damaged`,src_.`recent_v5_document_number`,',
                                                                  'src_.`is_vehicle_new_at_first_registration`,src_.`body_type_code`,src_.`wheelplan_code`,src_.`sva_emission_standard`,',
                                                                  'src_.`ct_related_mark`,src_.`vehicle_id`,src_.`dvla_vehicle_id`,src_.`eu_classification`,src_.`mass_in_service_weight`,',
                                                                  'src_.`mot1_legacy_id`,src_.`created_by`,src_.`created_on`,src_.`version`,src_.`batch_number`,',
                                                                  'COALESCE(src_.`last_updated_by`,src_.`created_by`,`ddr_util`.`get_etl_user_id`()),IFNULL(src_.`last_updated_on`,src_.`created_on`)', c_lf,
                                                           '  FROM `mot_v195_rel4`.`dvla_vehicle` src_ ', c_lf);

    DECLARE c_date_and_id_related_sql_infix VARCHAR(256) DEFAULT CONCAT(' WHERE src_.`last_updated_on` BETWEEN \'2010-01-01 00:00:00\' AND \'2011-12-31 23:59:59\'', c_lf,
                                                                   '   AND src_.`id` BETWEEN 100 AND 1000', c_lf);
 
    DECLARE c_representative_sql_infix VARCHAR(256) DEFAULT CONCAT(' WHERE src_.`id` BETWEEN 0 AND 4294967295', c_lf);

    DECLARE c_date_related_sql_infix VARCHAR(256) DEFAULT CONCAT(' WHERE src_.`last_updated_on` BETWEEN \'2010-01-01 00:00:00\' AND \'2011-12-31 23:59:59\'', c_lf);

    DECLARE c_id_related_sql_infix VARCHAR(256) DEFAULT CONCAT(' WHERE src_.`id` BETWEEN 100 AND 1000', c_lf);

    DECLARE c_good_sql_suffix VARCHAR(2048) DEFAULT CONCAT('    ON DUPLICATE KEY', c_lf,
                                                           'UPDATE `registration`=src_.`registration`,`registration_collapsed`=src_.`registration_collapsed`,',
                                                                  '`registration_validation_character`=src_.`registration_validation_character`,`vin`=src_.`vin`,`vin_reversed`=src_.`vin_reversed`,',
                                                                  '`vin_collapsed`=src_.`vin_collapsed`,`vin_collapsed_reversed`=src_.`vin_collapsed_reversed`,`model_code`=src_.`model_code`,',
                                                                  '`make_code`=src_.`make_code`,`make_in_full`=src_.`make_in_full`,`colour_1_code`=src_.`colour_1_code`,',
                                                                  '`colour_2_code`=src_.`colour_2_code`,`propulsion_code`=src_.`propulsion_code`,',
                                                                  '`designed_gross_weight`=src_.`designed_gross_weight`,`unladen_weight`=src_.`unladen_weight`,',
                                                                  '`engine_number`=src_.`engine_number`,`engine_capacity`=src_.`engine_capacity`,`seating_capacity`=src_.`seating_capacity`,',
                                                                  '`manufacture_date`=src_.`manufacture_date`,`first_registration_date`=src_.`first_registration_date`,',
                                                                  '`is_seriously_damaged`=src_.`is_seriously_damaged`,`recent_v5_document_number`=src_.`recent_v5_document_number`,',
                                                                  '`is_vehicle_new_at_first_registration`=src_.`is_vehicle_new_at_first_registration`,`body_type_code`=src_.`body_type_code`,',
                                                                  '`wheelplan_code`=src_.`wheelplan_code`,`sva_emission_standard`=src_.`sva_emission_standard`,',
                                                                  '`ct_related_mark`=src_.`ct_related_mark`,`vehicle_id`=src_.`vehicle_id`,`dvla_vehicle_id`=src_.`dvla_vehicle_id`,',
                                                                  '`eu_classification`=src_.`eu_classification`,`mass_in_service_weight`=src_.`mass_in_service_weight`,',
                                                                  '`mot1_legacy_id`=src_.`mot1_legacy_id`,`version`=src_.`version`,`batch_number`=src_.`batch_number`,',
                                                                  '`last_updated_by`=COALESCE(src_.`last_updated_by`,src_.`created_by`,`ddr_util`.`get_etl_user_id`()),`last_updated_on`=IFNULL(src_.`last_updated_on`,src_.`created_on`)');

    DECLARE c_where_is_required BOOLEAN DEFAULT TRUE;
    DECLARE c_where_is_not_required BOOLEAN DEFAULT FALSE;

    DECLARE v_test_concat_sql TEXT DEFAULT '';

    
    DECLARE ut_generic_exc CONDITION FOR SQLSTATE '45000';
    DECLARE ut_assert_failed_exc CONDITION FOR SQLSTATE '45223';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        ROLLBACK;
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT_WS('|', 'UNIT TEST FAILED', v_test_stage, v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 1; 
        RESIGNAL;
    END;

    SET v_test_stage := 'setup';
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST STARTED: ', c_module));
    START TRANSACTION;

    
    SET v_test_stage := 'user setup';

    
    

    SET v_test_stage := '#1.0 - good SQL for known (expected) combination with WHERE';
    SET v_test_concat_sql := CONCAT(c_good_sql_prefix, c_representative_sql_infix, c_good_sql_suffix);
    CALL `ddr_util`.`logger`('debug', c_module, CONCAT('Expecting: ', v_test_concat_sql));
    CALL `ut`.`assert_eq`(v_test_concat_sql, `ddr_util`.`generate_single_table_sql`('mot_v195_rel4', 'mot2', 'dvla_vehicle', NULL, NULL, 0, NULL, c_where_is_required));

    SET v_test_stage := '#1.1 - good SQL for known (expected) combination without WHERE due to all params NULL';
    SET v_test_concat_sql := CONCAT(c_good_sql_prefix, c_good_sql_suffix);
    CALL `ut`.`assert_eq`(v_test_concat_sql, `ddr_util`.`generate_single_table_sql`('mot_v195_rel4', 'mot2', 'dvla_vehicle', NULL, NULL, NULL, NULL, c_where_is_not_required));

    SET v_test_stage := '#1.2 - good SQL for known (expected) combination without WHERE by request';
    CALL `ut`.`assert_eq`(v_test_concat_sql, `ddr_util`.`generate_single_table_sql`('mot_v195_rel4', 'mot2', 'dvla_vehicle', NULL, NULL, 0, NULL, c_where_is_not_required));

    SET v_test_stage := '#1.3 - good SQL for known (expected) combination without WHERE due to all params NULL and despite request';
    CALL `ut`.`assert_eq`(v_test_concat_sql, `ddr_util`.`generate_single_table_sql`('mot_v195_rel4', 'mot2', 'dvla_vehicle', NULL, NULL, NULL, NULL, c_where_is_required));

    

    SET v_test_stage := '#2.0 - individual args passed as NULL should all throw exceptions - source schema';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        SET v_test_concat_sql := `ddr_util`.`generate_single_table_sql`(NULL, 'mot2', 'dvla_vehicle', NULL, NULL, 0, NULL, c_where_is_required);
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#2.1 - individual args passed as NULL should all throw exceptions - target schema';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        SET v_test_concat_sql := `ddr_util`.`generate_single_table_sql`('mot_v195_rel4', NULL, 'dvla_vehicle', NULL, NULL, 0, NULL, c_where_is_required);
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#2.2 - individual args passed as NULL should all throw exceptions - table name';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        SET v_test_concat_sql := `ddr_util`.`generate_single_table_sql`('mot_v195_rel4', 'mot2', NULL, NULL, NULL, 0, NULL, c_where_is_required);
        CALL `ut`.`fail_test`;
    END;

    

    SET v_test_stage := '#3.0 - good SQL for known (expected) combination with WHERE for date range (23:59:59 is forced on the SQL)';
    SET v_test_concat_sql := CONCAT(c_good_sql_prefix, c_date_related_sql_infix, c_good_sql_suffix);
    CALL `ut`.`assert_eq`(v_test_concat_sql, `ddr_util`.`generate_single_table_sql`('mot_v195_rel4', 'mot2', 'dvla_vehicle', '2010-01-01 00:10:00', '2011-12-31 23:00:00', NULL, NULL, c_where_is_required));

    SET v_test_stage := '#3.1 - good SQL for known (expected) combination with WHERE for id range';
    SET v_test_concat_sql := CONCAT(c_good_sql_prefix, c_id_related_sql_infix, c_good_sql_suffix);
    CALL `ut`.`assert_eq`(v_test_concat_sql, `ddr_util`.`generate_single_table_sql`('mot_v195_rel4', 'mot2', 'dvla_vehicle', NULL, NULL, 100, 1000, c_where_is_required));

    SET v_test_stage := '#3.2 - good SQL for known (expected) combination with WHERE for both date and id range';
    SET v_test_concat_sql := CONCAT(c_good_sql_prefix, c_date_and_id_related_sql_infix, c_good_sql_suffix);
    CALL `ut`.`assert_eq`(v_test_concat_sql, `ddr_util`.`generate_single_table_sql`('mot_v195_rel4', 'mot2', 'dvla_vehicle', '2010-01-01 00:10:00', '2011-12-31 23:00:00', 100, 1000, c_where_is_required));

    
    
    SET v_test_stage := 'user teardown';

    
    SET v_test_stage := 'teardown';
    ROLLBACK;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST PASSED: ', c_module));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ut_generate_trigger_source` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `ut_generate_trigger_source`()
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'ut_generate_trigger_source';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    
    DECLARE c_start_time DATETIME DEFAULT NOW(); 

    DECLARE v_is_test_failed BOOLEAN DEFAULT FALSE; 

    DECLARE v_test_stage VARCHAR(1024) DEFAULT '';

    
    DECLARE v_source_schema VARCHAR(64);
    DECLARE v_target_schema VARCHAR(64);
    DECLARE v_table_name VARCHAR(64);
    DECLARE v_code VARCHAR(8000);

    
    DECLARE ut_generic_exc CONDITION FOR SQLSTATE '45000';
    DECLARE ut_assert_failed_exc CONDITION FOR SQLSTATE '45223';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        ROLLBACK;
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT_WS('|', 'UNIT TEST FAILED', v_test_stage, v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 1; 
        RESIGNAL;
    END;

    SET v_test_stage := 'setup';
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST STARTED: ', c_module));
    START TRANSACTION;

    
    SET v_test_stage := 'user setup';
    SET v_source_schema := 'ut';
    SET v_target_schema := 'ut'; 
    SET v_table_name := 'ut_create_source_tbl';

    CALL `ddr_util`.`prepare_then_execute_sql`(CONCAT('DROP TABLE IF EXISTS ', `ddr_util`.`cat_table_refs`(v_source_schema, v_table_name)));
    CALL `ddr_util`.`prepare_then_execute_sql`(CONCAT('CREATE TABLE ', `ddr_util`.`cat_table_refs`(v_source_schema, v_table_name), ' (ID INTEGER(5) UNSIGNED)'));

    DELETE FROM `ddr_util`.`ddr_refactor_table`
     WHERE `source_schema` = v_source_schema
       AND `target_schema` = v_target_schema
       AND `table_name` = v_table_name;

    INSERT INTO `ddr_util`.`ddr_refactor_table`
        (`source_schema`
        ,`target_schema`
        ,`table_name`
        ,`generate_triggers`)
        VALUES
        (v_source_schema
        ,v_target_schema
        ,v_table_name
        ,TRUE);

    
    

    SET v_test_stage := CONCAT('#1.0 - Check we can build a trigger for ', v_table_name);

    CALL `ddr_util`.`generate_trigger_source`();

    SELECT gc.`source_code`
      INTO v_code
      FROM `ddr_util`.`ddr_generated_code` gc
      JOIN `ddr_util`.`ddr_refactor_table` rt
        ON gc.`refactor_table_id` = rt.`id`
     WHERE rt.`table_name` = v_table_name
       AND gc.`refactor_process` = 'TRIG_AU';

    CALL `ut`.`assert_not_null`(v_code);

    SET v_test_stage := CONCAT('#1.0a - Check we can build a trigger for ', v_table_name);
    CALL `ut`.`assert_in`(v_code, CONCAT('CREATE TRIGGER `', v_source_schema, '`.`tr_', v_table_name, '_au`'));
    SET v_test_stage := CONCAT('#1.0b - Check we can build a trigger for ', v_table_name);
    CALL `ut`.`assert_in`(v_code, CONCAT('AFTER UPDATE ON `', v_source_schema, '`.`', v_table_name, '`'));
    SET v_test_stage := CONCAT('#1.0c - Check we can build a trigger for ', v_table_name);
    CALL `ut`.`assert_in`(v_code, 'FOR EACH ROW');
    SET v_test_stage := CONCAT('#1.0d - Check we can build a trigger for ', v_table_name);
    CALL `ut`.`assert_in`(v_code, CONCAT('INSERT INTO `', v_target_schema, '`.`', v_table_name, '_hist`'));

    SET v_test_stage := '#1.1 - Test for non-existent table - should not fail';
    INSERT INTO `ddr_util`.`ddr_refactor_table`
        (`source_schema`
        ,`target_schema`
        ,`table_name`
        ,`generate_triggers`)
        VALUES
        ('test_a', 'test_b', 'ut_create_source_01', 1);

    CALL `ddr_util`.`generate_trigger_source`;

    DELETE FROM `ddr_util`.`ddr_refactor_table`
     WHERE `source_schema` = 'test_a'
       AND `target_schema` = 'test_b'
       AND `table_name` = 'ut_create_source_01';

    
    

    
    
    SET v_test_stage := 'user teardown';
    CALL `ddr_util`.`prepare_then_execute_sql`(CONCAT('DROP TABLE IF EXISTS ', `ddr_util`.`cat_table_refs`(v_source_schema, v_table_name)));

    DELETE FROM `ddr_util`.`ddr_refactor_table`
     WHERE `source_schema` = v_source_schema
       AND `target_schema` = v_target_schema
       AND `table_name` = v_table_name;

    
    SET v_test_stage := 'teardown';
    ROLLBACK;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST PASSED: ', c_module));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ut_get_etl_user_id` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `ut_get_etl_user_id`()
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'ut_get_etl_user_id';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    
    DECLARE c_start_time DATETIME DEFAULT NOW(); 

    DECLARE v_is_test_failed BOOLEAN DEFAULT FALSE; 

    DECLARE v_test_stage VARCHAR(1024) DEFAULT '';

    
    DECLARE c_etl_username VARCHAR(50) DEFAULT 'refactoring_etl_user';

    DECLARE v_etl_user_id INTEGER(10) UNSIGNED;

    
    DECLARE ut_generic_exc CONDITION FOR SQLSTATE '45000';
    DECLARE ut_assert_failed_exc CONDITION FOR SQLSTATE '45223';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        ROLLBACK;
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT_WS('|', 'UNIT TEST FAILED', v_test_stage, v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 1; 
        RESIGNAL;
    END;

    SET v_test_stage := 'setup';
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST STARTED: ', c_module));
    START TRANSACTION;

    
    SET v_test_stage := 'user setup - refactoring_etl_user may or may not already exist in the data build we\'re running against';
    SET FOREIGN_KEY_CHECKS = 0;
    INSERT IGNORE INTO `mot_v195_rel4`.`person`
      (`username`
      ,`person_auth_type_lookup_id`
      ,`family_name`
      ,`is_deceased`
      ,`created_by`)
      SELECT c_etl_username
           , a.`id`
           , 'ETLUser'
           , 0
           , 1
        FROM `mot_v195_rel4`.`person_auth_type_lookup` a
       WHERE a.`name` = 'Pin';

    SET FOREIGN_KEY_CHECKS = 1;

    SET v_test_stage := 'user setup - retrieve refactoring_etl_user id for assertions';
    SELECT `id`
      INTO v_etl_user_id
      FROM `mot_v195_rel4`.`person`
     WHERE `username` = c_etl_username;

    
    

    SET v_test_stage := '#1.0 - test we get v_etl_user_id back';
    CALL `ut`.`assert_eq`(v_etl_user_id, `ddr_util`.`get_etl_user_id`());

    

    SET v_test_stage := '#2.0 - remove person_id and re-test';
    SET FOREIGN_KEY_CHECKS = 0;
    DELETE FROM `mot_v195_rel4`.`person`
     WHERE `id` = v_etl_user_id;
    SET FOREIGN_KEY_CHECKS = 1;

    SET @etl_user_id := NULL;

    SET v_test_stage := '#2.1 - test should raise an exception if the ETL user does not exist';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ut`.`assert_eq`(v_etl_user_id, `ddr_util`.`get_etl_user_id`());
        CALL `ut`.`fail_test`;
    END;

    
    
    SET v_test_stage := 'user teardown';

    
    SET v_test_stage := 'teardown';
    ROLLBACK;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST PASSED: ', c_module));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ut_get_max_id_for_table` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `ut_get_max_id_for_table`()
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'ut_get_max_id_for_table';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    
    DECLARE c_start_time DATETIME DEFAULT NOW(); 

    DECLARE v_is_test_failed BOOLEAN DEFAULT FALSE; 

    DECLARE v_test_stage VARCHAR(1024) DEFAULT '';

    
    DECLARE c_autoincrement_offset INTEGER(10) UNSIGNED DEFAULT @@GLOBAL.AUTO_INCREMENT_OFFSET;
    DECLARE c_autoincrement_increment INTEGER(10) UNSIGNED DEFAULT @@GLOBAL.AUTO_INCREMENT_INCREMENT;

    DECLARE v_dummy INTEGER(10) UNSIGNED DEFAULT NULL;
    DECLARE v_loop INTEGER(3) UNSIGNED DEFAULT (c_autoincrement_offset - 1);
    DECLARE v_max_id INTEGER(10) UNSIGNED DEFAULT NULL;


    
    DECLARE ut_generic_exc CONDITION FOR SQLSTATE '45000';
    DECLARE ut_assert_failed_exc CONDITION FOR SQLSTATE '45223';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        ROLLBACK;
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT_WS('|', 'UNIT TEST FAILED', v_test_stage, v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 1; 
        RESIGNAL;
    END;

    SET v_test_stage := 'setup';
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST STARTED: ', c_module));
    START TRANSACTION;

    
    SET v_test_stage := 'user setup - create temp table';
    DROP TEMPORARY TABLE IF EXISTS `ut_ddr_util`.`get_max_id_for_table_temp`;
    CREATE TEMPORARY TABLE `ut_ddr_util`.`get_max_id_for_table_temp`(`id` INTEGER(10) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY);

    SET v_test_stage := 'user setup - self-test - temporary table should have NULL MAX(id)';
    SELECT MAX(`id`) INTO v_dummy FROM `ut_ddr_util`.`get_max_id_for_table_temp`;
    CALL `ut`.`assert_null`(v_dummy);

    SET v_test_stage := 'user setup - priming temporary table with non-zero id data';
    SET v_dummy = CEIL(RAND() * 99);
    IF (MOD(c_autoincrement_offset, 2) = 1 AND MOD(v_dummy, 2) = 0)
    THEN
        
        SET v_dummy := v_dummy + 1;
    END IF;
    REPEAT
        SET v_loop = v_loop + c_autoincrement_increment;
        INSERT INTO `ut_ddr_util`.`get_max_id_for_table_temp`(`id`) VALUES (NULL);
    UNTIL (v_loop >= v_dummy) END REPEAT;

    
    

    SET v_test_stage := CONCAT('#1.0 - value should be the same as the temporary table value ', v_max_id);
    CALL `ddr_util`.`get_max_id_for_table`('ut_ddr_util', 'get_max_id_for_table_temp', v_max_id);
    CALL `ut`.`assert_eq`(v_dummy, v_max_id);

    
    
    SET v_test_stage := 'user teardown';
    DROP TEMPORARY TABLE IF EXISTS `ut_ddr_util`.`get_max_id_for_table_temp`;

    
    SET v_test_stage := 'teardown';
    ROLLBACK;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST PASSED: ', c_module));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ut_get_model_detail_sha1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `ut_get_model_detail_sha1`()
    NO SQL
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'ut_get_model_detail_sha1';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    
    DECLARE c_start_time DATETIME DEFAULT NOW(); 

    DECLARE v_is_test_failed BOOLEAN DEFAULT FALSE; 

    DECLARE v_test_stage VARCHAR(1024) DEFAULT '';

    
    DECLARE c_all_nulls VARCHAR(40) DEFAULT '5ca26fd2bf3351f9532b9d14e791ad9db86bd9f3';
    DECLARE c_max_allowable VARCHAR(40) DEFAULT '148ba31db077198fb39fc82aee4089e3bb74d5bd';
    DECLARE c_max_allowable_empty_string VARCHAR(40) DEFAULT '83952a8638d3cc00aa93c7f0c1cc85b39b8b03b3';
    DECLARE c_64k SMALLINT(5) UNSIGNED DEFAULT 65535;
    DECLARE c_4bn INTEGER(10) UNSIGNED DEFAULT 4294967295;

    
    DECLARE ut_generic_exc CONDITION FOR SQLSTATE '45000';
    DECLARE ut_assert_failed_exc CONDITION FOR SQLSTATE '45223';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        ROLLBACK;
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT_WS('|', 'UNIT TEST FAILED', v_test_stage, v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 1; 
        RESIGNAL;
    END;

    SET v_test_stage := 'setup';
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST STARTED: ', c_module));
    START TRANSACTION;

    
    SET v_test_stage := 'user setup';

    
    

    SET v_test_stage := '#1.0 - all NULL values - expect known checksum';
    CALL `ut`.`assert_eq`(c_all_nulls, `ddr_util`.`get_model_detail_sha1`(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL));

    SET v_test_stage := '#1.1 - all NULL values - expect known checksum - determinism test';
    CALL `ut`.`assert_eq`(c_all_nulls, `ddr_util`.`get_model_detail_sha1`(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL));

    SET v_test_stage := '#1.2 - all max values - expect known checksum';
    CALL `ut`.`assert_eq`(c_max_allowable, `ddr_util`.`get_model_detail_sha1`(c_64k, c_4bn, 'XX', c_64k, c_64k, c_64k, c_64k, c_4bn));

    SET v_test_stage := '#1.3 - all max values - expect known checksum - determinism test';
    CALL `ut`.`assert_eq`(c_max_allowable, `ddr_util`.`get_model_detail_sha1`(c_64k, c_4bn, 'XX', c_64k, c_64k, c_64k, c_64k, c_4bn));

    SET v_test_stage := '#1.4 - mostly all max values but with one empty string';
    CALL `ut`.`assert_eq`(c_max_allowable_empty_string, `ddr_util`.`get_model_detail_sha1`(c_64k, c_4bn, '', c_64k, c_64k, c_64k, c_64k, c_4bn));

    
    
    SET v_test_stage := 'user teardown';

    
    SET v_test_stage := 'teardown';
    ROLLBACK;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST PASSED: ', c_module));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ut_get_object_name` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `ut_get_object_name`()
    NO SQL
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'ut_get_object_name';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    
    DECLARE c_start_time DATETIME DEFAULT NOW(); 

    DECLARE v_is_test_failed BOOLEAN DEFAULT FALSE; 

    DECLARE v_test_stage VARCHAR(1024) DEFAULT '';

    
    DECLARE v_object_name VARCHAR(64);
    DECLARE v_prefix VARCHAR(64);
    DECLARE v_suffix VARCHAR(64);
    DECLARE v_return_value VARCHAR(64);

    
    DECLARE ut_generic_exc CONDITION FOR SQLSTATE '45000';
    DECLARE ut_assert_failed_exc CONDITION FOR SQLSTATE '45223';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        ROLLBACK;
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT_WS('|', 'UNIT TEST FAILED', v_test_stage, v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 1; 
        RESIGNAL;
    END;

    SET v_test_stage := 'setup';
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST STARTED: ', c_module));
    START TRANSACTION;

    
    SET v_test_stage := 'user setup';

    
    
    SET v_test_stage := '#1.0 - NULL object name, NULL prefix, NULL suffix';
    SET v_object_name := NULL;
    SET v_prefix := NULL;
    SET v_suffix := NULL;
    CALL `ut`.`assert_null`(`ddr_util`.`get_object_name`(v_object_name, v_prefix, v_suffix));

    SET v_test_stage := '#1.1 - non-NULL object name, NULL prefix, NULL suffix';
    SET v_object_name := 'object_name';
    SET v_prefix := NULL;
    SET v_suffix := NULL;
    CALL `ut`.`assert_eq`('object_name', `ddr_util`.`get_object_name`(v_object_name, v_prefix, v_suffix));

    SET v_test_stage := '#1.2 - non-NULL object name, non-NULL prefix, NULL suffix';
    SET v_object_name := 'object_name';
    SET v_prefix := 'prefix';
    SET v_suffix := NULL;
    CALL `ut`.`assert_eq`('prefix_object_name', `ddr_util`.`get_object_name`(v_object_name, v_prefix, v_suffix));

    SET v_test_stage := '#1.3 - non-NULL object name, NULL prefix, non-NULL suffix';
    SET v_object_name := 'object_name';
    SET v_prefix := NULL;
    SET v_suffix := 'suffix';
    CALL `ut`.`assert_eq`('object_name_suffix', `ddr_util`.`get_object_name`(v_object_name, v_prefix, v_suffix));

    SET v_test_stage := '#1.4 - non-NULL object name, non-NULL prefix, non-NULL suffix';
    SET v_object_name := 'object_name';
    SET v_prefix := 'prefix';
    SET v_suffix := 'suffix';
    CALL `ut`.`assert_eq`('prefix_object_name_suffix', `ddr_util`.`get_object_name`(v_object_name, v_prefix, v_suffix));

    SET v_test_stage := '#2.0 - long object name, NULL prefix, NULL suffix';
    SET v_object_name := RPAD('A', 64, 'A');
    SET v_prefix := NULL;
    SET v_suffix := NULL;
    CALL `ut`.`assert_eq`('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', `ddr_util`.`get_object_name`(v_object_name, v_prefix, v_suffix));

    SET v_test_stage := '#2.1 - long object name, non-NULL prefix, NULL suffix';
    SET v_object_name := RPAD('A', 64, 'A');
    SET v_prefix := 'prefix';
    SET v_suffix := NULL;
    CALL `ut`.`assert_eq`('prefix_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', `ddr_util`.`get_object_name`(v_object_name, v_prefix, v_suffix));

    SET v_test_stage := '#2.2 - long object name, NULL prefix, non-NULL suffix';
    SET v_object_name := RPAD('A', 64, 'A');
    SET v_prefix := NULL;
    SET v_suffix := 'suffix';
    CALL `ut`.`assert_eq`('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA_suffix', `ddr_util`.`get_object_name`(v_object_name, v_prefix, v_suffix));

    SET v_test_stage := '#2.3 - long object name, non-NULL prefix, non-NULL suffix';
    SET v_object_name := RPAD('A', 64, 'A');
    SET v_prefix := 'prefix';
    SET v_suffix := 'suffix';
    CALL `ut`.`assert_eq`('prefix_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA_suffix', `ddr_util`.`get_object_name`(v_object_name, v_prefix, v_suffix));

    
    

    
    SET v_test_stage := 'user teardown';

    
    SET v_test_stage := 'teardown';
    ROLLBACK;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST PASSED: ', c_module));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ut_is_data_deletion_watch_table` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `ut_is_data_deletion_watch_table`()
    NO SQL
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'ut_is_data_deletion_watch_table';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    
    DECLARE c_start_time DATETIME DEFAULT NOW(); 

    DECLARE v_is_test_failed BOOLEAN DEFAULT FALSE; 

    DECLARE v_test_stage VARCHAR(1024) DEFAULT '';

    
    DECLARE v_dummy BOOLEAN DEFAULT FALSE;
    
    
    DECLARE ut_generic_exc CONDITION FOR SQLSTATE '45000';
    DECLARE ut_assert_failed_exc CONDITION FOR SQLSTATE '45223';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        ROLLBACK;
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT_WS('|', 'UNIT TEST FAILED', v_test_stage, v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 1; 
        RESIGNAL;
    END;

    SET v_test_stage := 'setup';
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST STARTED: ', c_module));
    START TRANSACTION;

    
    SET v_test_stage := 'user setup';

    
    

    SET v_test_stage := '#1.0 - Check for known existing table';
    CALL `ut`.`assert_true`(`ddr_util`.`is_data_deletion_watch_table`('mot_v195_rel4', 'mot_test_rfr_map'));

    SET v_test_stage := '#1.1 - Check for expected non-existent table';
    CALL `ut`.`assert_false`(`ddr_util`.`is_data_deletion_watch_table`('ddr_util', 'XYZZY_non_existent_table'));

    SET v_test_stage := '#1.2 - Check for expected existing table but in wrong schema';
    CALL `ut`.`assert_false`(`ddr_util`.`is_data_deletion_watch_table`('performance_schema', 'mot_test_rfr_map'));

    

    SET v_test_stage := '#2.0 - NULL args not allowed - schema';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        SET v_dummy := `ddr_util`.`is_data_deletion_watch_table`(NULL, 'mot_test_rfr_map');
        CALL `ut`.`fail_test`;
    END;
    
    SET v_test_stage := '#2.1 - NULL args not allowed - table';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        SET v_dummy := `ddr_util`.`is_data_deletion_watch_table`('mot_v195_rel4', NULL);
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#2.2 - NULL args not allowed - both';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        SET v_dummy := `ddr_util`.`is_data_deletion_watch_table`(NULL, NULL);
        CALL `ut`.`fail_test`;
    END;

    

    SET v_test_stage := 'user teardown';

    
    SET v_test_stage := 'teardown';
    ROLLBACK;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST PASSED: ', c_module));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ut_is_table_exists` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `ut_is_table_exists`()
    NO SQL
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'ut_is_table_exists';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    
    DECLARE c_start_time DATETIME DEFAULT NOW(); 

    DECLARE v_is_test_failed BOOLEAN DEFAULT FALSE; 

    DECLARE v_test_stage VARCHAR(1024) DEFAULT '';

    
    DECLARE v_dummy BOOLEAN DEFAULT FALSE;
    
    
    DECLARE ut_generic_exc CONDITION FOR SQLSTATE '45000';
    DECLARE ut_assert_failed_exc CONDITION FOR SQLSTATE '45223';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        ROLLBACK;
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT_WS('|', 'UNIT TEST FAILED', v_test_stage, v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 1; 
        RESIGNAL;
    END;

    SET v_test_stage := 'setup';
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST STARTED: ', c_module));
    START TRANSACTION;

    
    SET v_test_stage := 'user setup';

    
    

    SET v_test_stage := '#1.0 - Check for known existing table';
    CALL `ut`.`assert_true`(`ddr_util`.`is_table_exists`('ddr_util', 'ddr_logger'));

    SET v_test_stage := '#1.1 - Check for expected non-existent table';
    CALL `ut`.`assert_false`(`ddr_util`.`is_table_exists`('ddr_util', 'XYZZY_non_existent_table'));

    SET v_test_stage := '#1.2 - Check for expected existing table but in wrong schema';
    CALL `ut`.`assert_false`(`ddr_util`.`is_table_exists`('performance_schema', 'ddr_logger'));

    

    SET v_test_stage := '#2.0 - NULL args not allowed - schema';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        SET v_dummy := `ddr_util`.`is_table_exists`(NULL, 'ddr_logger');
        CALL `ut`.`fail_test`;
    END;
    
    SET v_test_stage := '#2.1 - NULL args not allowed - table';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        SET v_dummy := `ddr_util`.`is_table_exists`('ddr_util', NULL);
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#2.2 - NULL args not allowed - both';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        SET v_dummy := `ddr_util`.`is_table_exists`(NULL, NULL);
        CALL `ut`.`fail_test`;
    END;

    

    SET v_test_stage := 'user teardown';

    
    SET v_test_stage := 'teardown';
    ROLLBACK;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST PASSED: ', c_module));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ut_is_truncate_allowed` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `ut_is_truncate_allowed`()
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'ut_is_truncate_allowed';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    
    DECLARE c_start_time DATETIME DEFAULT NOW(); 

    DECLARE v_is_test_failed BOOLEAN DEFAULT FALSE; 

    DECLARE v_test_stage VARCHAR(1024) DEFAULT '';

    
    DECLARE v_dummy BOOLEAN DEFAULT NULL;

    
    DECLARE ut_generic_exc CONDITION FOR SQLSTATE '45000';
    DECLARE ut_assert_failed_exc CONDITION FOR SQLSTATE '45223';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        ROLLBACK;
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT_WS('|', 'UNIT TEST FAILED', v_test_stage, v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 1; 
        RESIGNAL;
    END;

    SET v_test_stage := 'setup';
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST STARTED: ', c_module));
    START TRANSACTION;

    
    SET v_test_stage := 'user setup';

    INSERT INTO `ddr_util`.`ddr_refactor_table`
      (`source_schema`, `target_schema`, `table_name`, `generate_triggers`, `watch_deletions`, `migration_requirements`)
      VALUES
      ('mot_v195_rel4', 'mot2', 'ut_is_truncate_allowed_01', TRUE, TRUE, 'single table'),
      ('mot_v195_rel4', 'mot2', 'ut_is_truncate_allowed_02', TRUE, TRUE, 'iterative'),
      ('mot_v195_rel4', 'mot2', 'ut_is_truncate_allowed_03', TRUE, TRUE, 'custom');

    
    

    SET v_test_stage := '#1.0 - TRUNCATE allowed on single table';
    CALL `ut`.`assert_true`(`ddr_util`.`is_truncate_allowed`('mot2', 'ut_is_truncate_allowed_01'));

    SET v_test_stage := '#1.1 - TRUNCATE not allowed on iterative';
    CALL `ut`.`assert_false`(`ddr_util`.`is_truncate_allowed`('mot2', 'ut_is_truncate_allowed_02'));

    SET v_test_stage := '#1.2 - TRUNCATE allowed on custom';
    CALL `ut`.`assert_true`(`ddr_util`.`is_truncate_allowed`('mot2', 'ut_is_truncate_allowed_03'));

    

    SET v_test_stage := '#2.0 - TRUNCATE not allowed on NULL schema';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        SET v_dummy := `ddr_util`.`is_truncate_allowed`(NULL, 'site');
        CALL `ut`.`fail_test`;
    END;
    
    SET v_test_stage := '#2.1 - TRUNCATE not allowed on NULL table name';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        SET v_dummy := `ddr_util`.`is_truncate_allowed`('mot2', NULL);
        CALL `ut`.`fail_test`;
    END;

    

    SET v_test_stage := '#3.0 - unknown table combination denies TRUNCATE (fails open)';
    CALL `ut`.`assert_false`(`ddr_util`.`is_truncate_allowed`('abc', 'def_'));

    

    SET v_test_stage := 'user teardown';

    DELETE FROM `ddr_util`.`ddr_refactor_table`
     WHERE `table_name` IN ('ut_is_truncate_allowed_01', 'ut_is_truncate_allowed_02', 'ut_is_truncate_allowed_03');

    
    SET v_test_stage := 'teardown';
    ROLLBACK;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST PASSED: ', c_module));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ut_reconstitute_fks_on_table` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `ut_reconstitute_fks_on_table`()
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'ut_reconstitute_fks_on_table';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    
    DECLARE c_start_time DATETIME DEFAULT NOW(); 

    DECLARE v_is_test_failed BOOLEAN DEFAULT FALSE; 

    DECLARE v_test_stage VARCHAR(1024) DEFAULT '';

    
    DECLARE c_dummy_schema_name VARCHAR(64) DEFAULT 'ut'; 
    DECLARE c_dummy_table_name_1 VARCHAR(64) DEFAULT 'reconstitute_fks_on_table_1_temp';
    DECLARE c_dummy_table_name_2 VARCHAR(64) DEFAULT 'reconstitute_fks_on_table_2_temp';
    DECLARE c_dummy_table_name_3 VARCHAR(64) DEFAULT 'reconstitute_fks_on_table_3_temp';

    DECLARE v_fk_refs INTEGER(10) DEFAULT 0;

    DECLARE ut_constraint_exc CONDITION FOR SQLSTATE '23000';

    
    DECLARE ut_generic_exc CONDITION FOR SQLSTATE '45000';
    DECLARE ut_assert_failed_exc CONDITION FOR SQLSTATE '45223';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        ROLLBACK;
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT_WS('|', 'UNIT TEST FAILED', v_test_stage, v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 0; 
        DROP TABLE IF EXISTS `ut`.`reconstitute_fks_on_table_3_temp`;
        DROP TABLE IF EXISTS `ut`.`reconstitute_fks_on_table_2_temp`;
        DROP TABLE IF EXISTS `ut`.`reconstitute_fks_on_table_1_temp`;
        DELETE FROM `ddr_util`.`ddr_fk_key_column_usage` WHERE `constraint_schema` = c_dummy_schema_name; 
        SET FOREIGN_KEY_CHECKS = 1; 
        RESIGNAL;
    END;

    SET v_test_stage := 'setup';
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST STARTED: ', c_module));
    START TRANSACTION;

    
    SET v_test_stage := 'user setup - drop "temporary" tables';
    SET FOREIGN_KEY_CHECKS = 0;
    DROP TABLE IF EXISTS `ut`.`reconstitute_fks_on_table_3_temp`;
    DROP TABLE IF EXISTS `ut`.`reconstitute_fks_on_table_2_temp`;
    DROP TABLE IF EXISTS `ut`.`reconstitute_fks_on_table_1_temp`;
    SET FOREIGN_KEY_CHECKS = 1;

    SET v_test_stage := 'user setup - create first "temporary" table';
    CREATE TABLE `ut`.`reconstitute_fks_on_table_1_temp`(`id` INTEGER(10) UNSIGNED NOT NULL, PRIMARY KEY(`id`));

    SET v_test_stage := 'user setup - create second "temporary" table';
    CREATE TABLE `ut`.`reconstitute_fks_on_table_2_temp`(
        `id` INTEGER(10) UNSIGNED NOT NULL, 
        `fk_id` INTEGER(10) UNSIGNED,
        PRIMARY KEY(`id`),
        CONSTRAINT `fk2_id_fk` FOREIGN KEY (`fk_id`) REFERENCES `ut`.`reconstitute_fks_on_table_1_temp` (`id`));

    SET v_test_stage := 'user setup - create third "temporary" table';
    CREATE TABLE `ut`.`reconstitute_fks_on_table_3_temp`(
        `id` INTEGER(10) UNSIGNED NOT NULL, 
        `fk_id` INTEGER(10) UNSIGNED,
        PRIMARY KEY(`id`),
        CONSTRAINT `fk3_id_fk` FOREIGN KEY (`fk_id`) REFERENCES `ut`.`reconstitute_fks_on_table_2_temp` (`id`));

    

    SET v_test_stage := 'user setup - some data table #1';
    INSERT INTO `ut`.`reconstitute_fks_on_table_1_temp` (`id`) VALUES (1), (2), (3);

    SET v_test_stage := 'user setup - some data table #2';
    INSERT INTO `ut`.`reconstitute_fks_on_table_2_temp` (`id`, `fk_id`) VALUES (4, 1), (5, 2), (6, 3);

    SET v_test_stage := 'user setup - some data table #3';
    INSERT INTO `ut`.`reconstitute_fks_on_table_3_temp` (`id`, `fk_id`) VALUES (7, 4), (8, 5), (9, 6);

    SET v_test_stage := 'user setup - requesting FK record and drop';
    CALL `ddr_util`.`all_record_and_drop_fks_from_table`(c_dummy_schema_name, 'reconstitute_fks_on_table%');
    SELECT COUNT(*) INTO v_fk_refs
      FROM `ddr_util`.`ddr_fk_key_column_usage`
     WHERE `table_schema` = c_dummy_schema_name;
     CALL `ut`.`assert_eq`(2, v_fk_refs); 

    
    

    SET v_test_stage := '#1.0 - NULL schema not allowed';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`reconstitute_fks_on_table`(NULL, c_dummy_table_name_1);
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#1.1 - NULL table name not allowed';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`reconstitute_fks_on_table`(c_dummy_schema_name, NULL);
        CALL `ut`.`fail_test`;
    END;

    

    SET v_test_stage := '#2.0 - DELETE attempt from table 2 - no keys in place';
    START TRANSACTION;
    DELETE FROM `ut`.`reconstitute_fks_on_table_2_temp`; 
    SELECT COUNT(*) INTO v_fk_refs FROM `ut`.`reconstitute_fks_on_table_2_temp`;
    ROLLBACK;
    CALL `ut`.`assert_eq`(0, v_fk_refs); 

    SET v_test_stage := '#2.1 - DELETE attempt from table 3 - no keys in place';
    START TRANSACTION;
    DELETE FROM `ut`.`reconstitute_fks_on_table_3_temp`; 
    SELECT COUNT(*) INTO v_fk_refs FROM `ut`.`reconstitute_fks_on_table_3_temp`;
    ROLLBACK;
    CALL `ut`.`assert_eq`(0, v_fk_refs); 

    SET v_test_stage := '#2.2 - reconstitute FKs on table 2';
    CALL `ddr_util`.`reconstitute_fks_on_table`(c_dummy_schema_name, c_dummy_table_name_2);

    SET v_test_stage := '#2.3 - reconstitute FKs on table 3';
    CALL `ddr_util`.`reconstitute_fks_on_table`(c_dummy_schema_name, c_dummy_table_name_3);

    SET v_test_stage := '#2.4 - testing artificial data - DELETE should fail';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        DECLARE EXIT HANDLER FOR ut_constraint_exc SET v_is_test_failed = FALSE;

        DELETE FROM `ut`.`reconstitute_fks_on_table_1_temp`;
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#2.5 - testing artificial data - DELETE should fail';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        DECLARE EXIT HANDLER FOR ut_constraint_exc SET v_is_test_failed = FALSE;

        DELETE FROM `ut`.`reconstitute_fks_on_table_2_temp`;
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#2.6 - testing artificial data - DELETE should still be allowed';
    DELETE FROM `ut`.`reconstitute_fks_on_table_3_temp`;

    

    SET v_test_stage := '#3.0 - count stored metadata, now zero FKs stored';
    SELECT COUNT(*) INTO v_fk_refs
      FROM `ddr_util`.`ddr_fk_key_column_usage`
     WHERE `table_schema` = c_dummy_schema_name;
    CALL `ut`.`assert_eq`(0, v_fk_refs); 

    
    
    SET v_test_stage := 'user teardown';
    ROLLBACK; 

    SET FOREIGN_KEY_CHECKS = 0;
    DROP TABLE IF EXISTS `ut`.`reconstitute_fks_on_table_3_temp`;
    DROP TABLE IF EXISTS `ut`.`reconstitute_fks_on_table_2_temp`;
    DROP TABLE IF EXISTS `ut`.`reconstitute_fks_on_table_1_temp`;
    SET FOREIGN_KEY_CHECKS = 1;

    START TRANSACTION;
    DELETE FROM `ddr_util`.`ddr_fk_key_column_usage` WHERE `constraint_schema` = c_dummy_schema_name; 
    COMMIT;

    
    SET v_test_stage := 'teardown';
    ROLLBACK;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST PASSED: ', c_module));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ut_record_and_drop_fks_from_table` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `ut_record_and_drop_fks_from_table`()
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'ut_record_and_drop_fks_from_table';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    
    DECLARE c_start_time DATETIME DEFAULT NOW(); 

    DECLARE v_is_test_failed BOOLEAN DEFAULT FALSE; 

    DECLARE v_test_stage VARCHAR(1024) DEFAULT '';

    
    DECLARE c_dummy_schema_name VARCHAR(64) DEFAULT 'ut'; 
    DECLARE c_dummy_table_name_1 VARCHAR(64) DEFAULT 'record_and_drop_fks_from_table_1_temp';
    DECLARE c_dummy_table_name_2 VARCHAR(64) DEFAULT 'record_and_drop_fks_from_table_2_temp';
    DECLARE c_dummy_table_name_3 VARCHAR(64) DEFAULT 'record_and_drop_fks_from_table_3_temp';

    DECLARE v_fk_refs INTEGER(10) DEFAULT 0;

    DECLARE ut_constraint_exc CONDITION FOR SQLSTATE '23000';

    
    DECLARE ut_generic_exc CONDITION FOR SQLSTATE '45000';
    DECLARE ut_assert_failed_exc CONDITION FOR SQLSTATE '45223';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        ROLLBACK;
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT_WS('|', 'UNIT TEST FAILED', v_test_stage, v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 0; 
        DROP TABLE IF EXISTS `ut`.`record_and_drop_fks_from_table_1_temp`;
        DROP TABLE IF EXISTS `ut`.`record_and_drop_fks_from_table_2_temp`;
        DROP TABLE IF EXISTS `ut`.`record_and_drop_fks_from_table_3_temp`;
        DELETE FROM `ddr_util`.`ddr_fk_key_column_usage` WHERE `constraint_schema` = c_dummy_schema_name; 
        SET FOREIGN_KEY_CHECKS = 1; 
        RESIGNAL;
    END;

    SET v_test_stage := 'setup';
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST STARTED: ', c_module));
    START TRANSACTION;

    
    SET v_test_stage := 'user setup - drop "temporary" tables';
    DROP TABLE IF EXISTS `ut`.`record_and_drop_fks_from_table_1_temp`;
    DROP TABLE IF EXISTS `ut`.`record_and_drop_fks_from_table_2_temp`;
    DROP TABLE IF EXISTS `ut`.`record_and_drop_fks_from_table_3_temp`;

    SET v_test_stage := 'user setup - create first "temporary" table';
    CREATE TABLE `ut`.`record_and_drop_fks_from_table_1_temp`(`id` INTEGER(10) UNSIGNED NOT NULL, PRIMARY KEY(`id`));

    SET v_test_stage := 'user setup - create second "temporary" table';
    CREATE TABLE `ut`.`record_and_drop_fks_from_table_2_temp`(
        `id` INTEGER(10) UNSIGNED NOT NULL, 
        `fk_id` INTEGER(10) UNSIGNED,
        PRIMARY KEY(`id`),
        CONSTRAINT `fk2_id_fk` FOREIGN KEY (`fk_id`) REFERENCES `ut`.`record_and_drop_fks_from_table_1_temp` (`id`));

    SET v_test_stage := 'user setup - create third "temporary" table';
    CREATE TABLE `ut`.`record_and_drop_fks_from_table_3_temp`(
        `id` INTEGER(10) UNSIGNED NOT NULL, 
        `fk_id` INTEGER(10) UNSIGNED,
        PRIMARY KEY(`id`),
        CONSTRAINT `fk3_id_fk` FOREIGN KEY (`fk_id`) REFERENCES `ut`.`record_and_drop_fks_from_table_2_temp` (`id`));

    

    SET v_test_stage := 'user setup - some data table #1';
    INSERT INTO `ut`.`record_and_drop_fks_from_table_1_temp` (`id`) VALUES (1), (2), (3);

    SET v_test_stage := 'user setup - some data table #2';
    INSERT INTO `ut`.`record_and_drop_fks_from_table_2_temp` (`id`, `fk_id`) VALUES (4, 1), (5, 2), (6, 3);

    SET v_test_stage := 'user setup - some data table #3';
    INSERT INTO `ut`.`record_and_drop_fks_from_table_3_temp` (`id`, `fk_id`) VALUES (7, 4), (8, 5), (9, 6);

    
    

    SET v_test_stage := '#1.0 - NULL schema not allowed';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`record_and_drop_fks_from_table`(NULL, c_dummy_table_name_1);
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#1.1 - NULL table name not allowed';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`record_and_drop_fks_from_table`(c_dummy_schema_name, NULL);
        CALL `ut`.`fail_test`;
    END;

    

    SET v_test_stage := '#2.0 - testing artificial data - DELETE should fail';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        DECLARE EXIT HANDLER FOR ut_constraint_exc SET v_is_test_failed = FALSE;

        DELETE FROM `ut`.`record_and_drop_fks_from_table_1_temp`;
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#2.1 - testing artificial data - DELETE should fail';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        DECLARE EXIT HANDLER FOR ut_constraint_exc SET v_is_test_failed = FALSE;

        DELETE FROM `ut`.`record_and_drop_fks_from_table_2_temp`;
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#2.2 - drop FKs, repeat DELETE attempt';
    CALL `ddr_util`.`record_and_drop_fks_from_table`(c_dummy_schema_name, c_dummy_table_name_2);

    SET v_test_stage := '#2.3 - repeat DELETE attempt from table 2';
    DELETE FROM `ut`.`record_and_drop_fks_from_table_2_temp`; 
    SELECT COUNT(*) INTO v_fk_refs FROM `ut`.`record_and_drop_fks_from_table_2_temp`;
    CALL `ut`.`assert_eq`(0, v_fk_refs); 

    SET v_test_stage := '#2.4 - count referencing rows';
    SELECT COUNT(*) INTO v_fk_refs FROM `ut`.`record_and_drop_fks_from_table_3_temp`;
    CALL `ut`.`assert_eq`(3, v_fk_refs); 

    

    SET v_test_stage := '#3.0 - drop remaining FKs';
    CALL `ddr_util`.`record_and_drop_fks_from_table`(c_dummy_schema_name, c_dummy_table_name_3);

    SET v_test_stage := '#3.1 - count stored metadata, two FKs stored';
    SELECT COUNT(*) INTO v_fk_refs
      FROM `ddr_util`.`ddr_fk_key_column_usage`
     WHERE `table_schema` = c_dummy_schema_name;
    CALL `ut`.`assert_eq`(2, v_fk_refs); 

    
    
    SET v_test_stage := 'user teardown';
    ROLLBACK; 

    DROP TABLE IF EXISTS `ut`.`record_and_drop_fks_from_table_1_temp`;
    DROP TABLE IF EXISTS `ut`.`record_and_drop_fks_from_table_2_temp`;
    DROP TABLE IF EXISTS `ut`.`record_and_drop_fks_from_table_3_temp`;

    DELETE FROM `ddr_util`.`ddr_fk_key_column_usage` WHERE `constraint_schema` = c_dummy_schema_name; 

    
    SET v_test_stage := 'teardown';
    ROLLBACK;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST PASSED: ', c_module));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ut_set_engine_for_table` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `ut_set_engine_for_table`()
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'ut_set_engine_for_table';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    
    DECLARE c_start_time DATETIME DEFAULT NOW(); 

    DECLARE v_is_test_failed BOOLEAN DEFAULT FALSE; 

    DECLARE v_test_stage VARCHAR(1024) DEFAULT '';

    
    DECLARE c_dummy_schema_name VARCHAR(64) DEFAULT 'ut_ddr_util'; 
    DECLARE c_dummy_table_name_1 VARCHAR(64) DEFAULT 'set_engine_for_table_1_temp';
    DECLARE c_dummy_table_name_2 VARCHAR(64) DEFAULT 'set_engine_for_table_2_temp';

    DECLARE c_engine_innodb VARCHAR(16) DEFAULT 'InnoDB';
    DECLARE c_engine_blackhole VARCHAR(16) DEFAULT 'BLACKHOLE';

    
    DECLARE ut_generic_exc CONDITION FOR SQLSTATE '45000';
    DECLARE ut_assert_failed_exc CONDITION FOR SQLSTATE '45223';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        ROLLBACK;
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT_WS('|', 'UNIT TEST FAILED', v_test_stage, v_returned_sqlstate, v_message_text));
        DROP TABLE IF EXISTS `ut_ddr_util`.`set_engine_for_table_1_temp`;
        DROP TABLE IF EXISTS `ut_ddr_util`.`set_engine_for_table_2_temp`;
        SET FOREIGN_KEY_CHECKS = 1; 
        RESIGNAL;
    END;

    SET v_test_stage := 'setup';
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST STARTED: ', c_module));
    START TRANSACTION;

    
    SET v_test_stage := 'user setup - drop "temporary" tables';
    DROP TABLE IF EXISTS `ut_ddr_util`.`set_engine_for_table_1_temp`;
    DROP TABLE IF EXISTS `ut_ddr_util`.`set_engine_for_table_2_temp`;

    SET v_test_stage := 'user setup - create "temporary" tables';
    CREATE TABLE `ut_ddr_util`.`set_engine_for_table_1_temp`(`id` INTEGER(10) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY) ENGINE=INNODB ROW_FORMAT=COMPRESSED;
    CREATE TABLE `ut_ddr_util`.`set_engine_for_table_2_temp`(`id` INTEGER(10) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY) ENGINE=BLACKHOLE;

    
    

    SET v_test_stage := '#1.0 - NULL schema not allowed';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`set_engine_for_table`(NULL, c_dummy_table_name_1, c_engine_innodb);
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#1.1 - NULL table name not allowed';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`set_engine_for_table`(c_dummy_schema_name, NULL, c_engine_innodb);
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#1.2 - NULL engine not allowed';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`set_engine_for_table`(c_dummy_schema_name, c_dummy_table_name_1, NULL);
        CALL `ut`.`fail_test`;
    END;

    

    SET v_test_stage := '#2.0 - ALTER not allowed on mysql';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`set_engine_for_table`('mysql', c_dummy_table_name_1, c_engine_innodb);
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#2.1 - ALTER not allowed on information_schema';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`set_engine_for_table`('information_schema', c_dummy_table_name_1, c_engine_innodb);
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#2.2 - ALTER not allowed on performance_schema';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`set_engine_for_table`('performance_schema', c_dummy_table_name_1, c_engine_innodb);
        CALL `ut`.`fail_test`;
    END;

    

    SET v_test_stage := '#3.0 - engine can be innodb';
    CALL `ddr_util`.`set_engine_for_table`(c_dummy_schema_name, c_dummy_table_name_1, c_engine_innodb);

    SET v_test_stage := '#3.1 - engine can be blackhole';
    CALL `ddr_util`.`set_engine_for_table`(c_dummy_schema_name, c_dummy_table_name_2, c_engine_blackhole);

    SET v_test_stage := '#3.2 - engine must be innodb or blackhole';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`set_engine_for_table`(c_dummy_schema_name, c_dummy_table_name_1, 'MADE_UP_ENGINE');
        CALL `ut`.`fail_test`;
    END;

    

    SET v_test_stage := '#4.0 - change can be execute repeatedly without failure on table that starts as innodb';
    CALL `ddr_util`.`set_engine_for_table`(c_dummy_schema_name, c_dummy_table_name_1, c_engine_innodb);
    CALL `ddr_util`.`set_engine_for_table`(c_dummy_schema_name, c_dummy_table_name_1, c_engine_innodb);
    CALL `ddr_util`.`set_engine_for_table`(c_dummy_schema_name, c_dummy_table_name_1, c_engine_blackhole);
    CALL `ddr_util`.`set_engine_for_table`(c_dummy_schema_name, c_dummy_table_name_1, c_engine_innodb);

    SET v_test_stage := '#4.1 - change can be execute repeatedly without failure on table that starts as blackhole';
    CALL `ddr_util`.`set_engine_for_table`(c_dummy_schema_name, c_dummy_table_name_2, c_engine_blackhole);
    CALL `ddr_util`.`set_engine_for_table`(c_dummy_schema_name, c_dummy_table_name_2, c_engine_blackhole);
    CALL `ddr_util`.`set_engine_for_table`(c_dummy_schema_name, c_dummy_table_name_2, c_engine_innodb);
    CALL `ddr_util`.`set_engine_for_table`(c_dummy_schema_name, c_dummy_table_name_2, c_engine_blackhole);

    
    
    SET v_test_stage := 'user teardown';
    ROLLBACK; 
    DROP TABLE IF EXISTS `ut_ddr_util`.`set_engine_for_table_1_temp`;
    DROP TABLE IF EXISTS `ut_ddr_util`.`set_engine_for_table_2_temp`;

    
    SET v_test_stage := 'teardown';
    ROLLBACK;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST PASSED: ', c_module));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ut_truncate_single_table` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `ut_truncate_single_table`()
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'ut_truncate_single_table';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    
    DECLARE c_start_time DATETIME DEFAULT NOW(); 

    DECLARE v_is_test_failed BOOLEAN DEFAULT FALSE; 

    DECLARE v_test_stage VARCHAR(1024) DEFAULT '';

    
    DECLARE c_dummy_source_schema_name VARCHAR(64) DEFAULT 'ut'; 
    DECLARE c_dummy_target_schema_name VARCHAR(64) DEFAULT 'ut_ddr_util'; 
    DECLARE c_dummy_table_name_1 VARCHAR(64) DEFAULT 'truncate_single_table_1_temp';
    DECLARE c_dummy_table_name_2 VARCHAR(64) DEFAULT 'truncate_single_table_2_temp';
    DECLARE c_dummy_table_name_3 VARCHAR(64) DEFAULT 'truncate_single_table_3_temp';
    DECLARE c_dummy_table_name_4 VARCHAR(64) DEFAULT 'truncate_single_table_4_temp';

    
    DECLARE ut_generic_exc CONDITION FOR SQLSTATE '45000';
    DECLARE ut_assert_failed_exc CONDITION FOR SQLSTATE '45223';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        ROLLBACK;
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT_WS('|', 'UNIT TEST FAILED', v_test_stage, v_returned_sqlstate, v_message_text));
        DROP TABLE IF EXISTS `ut`.`truncate_single_table_1_temp`;
        DROP TABLE IF EXISTS `ut`.`truncate_single_table_2_temp`;
        DROP TABLE IF EXISTS `ut_ddr_util`.`truncate_single_table_1_temp`;
        DROP TABLE IF EXISTS `ut_ddr_util`.`truncate_single_table_2_temp`;
        DROP TABLE IF EXISTS `ut_ddr_util`.`truncate_single_table_3_temp`;
        SET FOREIGN_KEY_CHECKS = 1; 
        RESIGNAL;
    END;

    SET v_test_stage := 'setup';
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST STARTED: ', c_module));
    START TRANSACTION;

    
    SET v_test_stage := 'user setup - drop "temporary" tables';
    DROP TABLE IF EXISTS `ut`.`truncate_single_table_1_temp`;
    DROP TABLE IF EXISTS `ut`.`truncate_single_table_2_temp`;
    DROP TABLE IF EXISTS `ut_ddr_util`.`truncate_single_table_1_temp`;
    DROP TABLE IF EXISTS `ut_ddr_util`.`truncate_single_table_2_temp`;
    DROP TABLE IF EXISTS `ut_ddr_util`.`truncate_single_table_3_temp`;

    SET v_test_stage := 'user setup - create first "temporary" table';
    CREATE TABLE `ut`.`truncate_single_table_1_temp`(`id` INTEGER(10) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY);

    SET v_test_stage := 'user setup - create duplicate "temporary" tables';
    CREATE TABLE `ut`.`truncate_single_table_2_temp` LIKE `ut`.`truncate_single_table_1_temp`;
    CREATE TABLE `ut_ddr_util`.`truncate_single_table_1_temp` LIKE `ut`.`truncate_single_table_1_temp`;
    CREATE TABLE `ut_ddr_util`.`truncate_single_table_2_temp` LIKE `ut`.`truncate_single_table_1_temp`;
    CREATE TABLE `ut_ddr_util`.`truncate_single_table_3_temp` LIKE `ut`.`truncate_single_table_1_temp`;

    SET v_test_stage := 'user setup - writing test data to `ddr_util`.`ddr_refactor_table`';
    INSERT IGNORE INTO `ddr_util`.`ddr_refactor_table`
        (`source_schema`, `target_schema`, `table_name`, `migration_requirements`)
    VALUES
        
        (c_dummy_source_schema_name, c_dummy_target_schema_name, c_dummy_table_name_1, 'single table'),
        (c_dummy_source_schema_name, c_dummy_target_schema_name, c_dummy_table_name_2, 'iterative'),
        (c_dummy_source_schema_name, c_dummy_target_schema_name, c_dummy_table_name_3, 'custom');


    
    

    SET v_test_stage := '#1.0 - TRUNCATE not allowed on NULL schema';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`truncate_single_table`(NULL, c_dummy_table_name_1);
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#1.1 - TRUNCATE not allowed on NULL table name';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`truncate_single_table`(c_dummy_target_schema_name, NULL);
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#1.2 - TRUNCATE not allowed on mot_v195_rel4';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`truncate_single_table`('mot_v195_rel4', c_dummy_table_name_1);
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#1.3 - TRUNCATE not allowed on mysql';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`truncate_single_table`('mysql', c_dummy_table_name_1);
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#1.4 - TRUNCATE not allowed on information_schema';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`truncate_single_table`('information_schema', c_dummy_table_name_1);
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#1.5 - TRUNCATE not allowed on performance_schema';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`truncate_single_table`('performance_schema', c_dummy_table_name_1);
        CALL `ut`.`fail_test`;
    END;
    

    SET v_test_stage := '#2.0 - TRUNCATE is allowed on table defined as: single table';
    CALL `ddr_util`.`truncate_single_table`(c_dummy_target_schema_name, c_dummy_table_name_1);

    SET v_test_stage := '#2.1 - TRUNCATE not allowed on table defined as: iterative';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`truncate_single_table`(c_dummy_target_schema_name, c_dummy_table_name_2);
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#2.2 - TRUNCATE is allowed on table defined as: custom';
    CALL `ddr_util`.`truncate_single_table`(c_dummy_target_schema_name, c_dummy_table_name_3);

    SET v_test_stage := '#2.3 - TRUNCATE not allowed on undefined table';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ddr_util`.`truncate_single_table`(c_dummy_target_schema_name, c_dummy_table_name_4);
        CALL `ut`.`fail_test`;
    END;

    
    
    SET v_test_stage := 'user teardown';
    ROLLBACK; 
    DELETE FROM `ddr_util`.`ddr_refactor_table`
     WHERE `source_schema` = c_dummy_source_schema_name
       AND `target_schema` = c_dummy_target_schema_name; 
    DROP TABLE IF EXISTS `ut`.`truncate_single_table_1_temp`;
    DROP TABLE IF EXISTS `ut`.`truncate_single_table_2_temp`;
    DROP TABLE IF EXISTS `ut_ddr_util`.`truncate_single_table_1_temp`;
    DROP TABLE IF EXISTS `ut_ddr_util`.`truncate_single_table_2_temp`;
    DROP TABLE IF EXISTS `ut_ddr_util`.`truncate_single_table_3_temp`;

    
    SET v_test_stage := 'teardown';
    ROLLBACK;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST PASSED: ', c_module));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ut_validate_ranges` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `ut_validate_ranges`()
    NO SQL
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'ut_validate_ranges';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    
    DECLARE c_start_time DATETIME DEFAULT NOW(); 

    DECLARE v_is_test_failed BOOLEAN DEFAULT FALSE; 

    DECLARE v_test_stage VARCHAR(1024) DEFAULT '';

    
    DECLARE v_date_from DATETIME DEFAULT NULL;
    DECLARE v_date_to DATETIME DEFAULT NULL;
    DECLARE v_id_from INTEGER(10) UNSIGNED DEFAULT NULL;
    DECLARE v_id_to INTEGER(10) UNSIGNED DEFAULT NULL;

    
    DECLARE ut_generic_exc CONDITION FOR SQLSTATE '45000';
    DECLARE ut_assert_failed_exc CONDITION FOR SQLSTATE '45223';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        ROLLBACK;
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT_WS('|', 'UNIT TEST FAILED', v_test_stage, v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 1; 
        RESIGNAL;
    END;

    SET v_test_stage := 'setup';
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST STARTED: ', c_module));
    START TRANSACTION;

    
    SET v_test_stage := 'user setup';

    
    

    SET v_test_stage := '#1.0 - valid ranges that will not be altered by the call';
    SET v_date_from := '2012-01-01 00:00:00';
    SET v_date_to := '2012-12-31 23:59:59';
    SET v_id_from := 1;
    SET v_id_to := 2;
    CALL `ddr_util`.`validate_ranges`(v_date_from, v_date_to, v_id_from, v_id_to);
    CALL `ut`.`assert_eq`('2012-01-01 00:00:00', v_date_from);
    CALL `ut`.`assert_eq`('2012-12-31 23:59:59', v_date_to);
    CALL `ut`.`assert_eq`('1', v_id_from);
    CALL `ut`.`assert_eq`('2', v_id_to);

    

    SET v_test_stage := '#2.0 - ranges that will be altered by the call';
    SET v_date_from := NULL;
    SET v_date_to := '2012-12-31 00:00:00';
    SET v_id_from := NULL;
    SET v_id_to := 2;
    CALL `ddr_util`.`validate_ranges`(v_date_from, v_date_to, v_id_from, v_id_to);
    CALL `ut`.`assert_eq`('1900-01-01 00:00:00', v_date_from);
    CALL `ut`.`assert_eq`('2012-12-31 23:59:59', v_date_to);
    CALL `ut`.`assert_eq`('0', v_id_from);
    CALL `ut`.`assert_eq`('2', v_id_to);

    SET v_test_stage := '#2.1 - ranges that will be altered by the call';
    SET v_date_from := '2012-12-31 00:00:00';
    SET v_date_to := NULL;
    SET v_id_from := NULL;
    SET v_id_to := NULL;
    CALL `ddr_util`.`validate_ranges`(v_date_from, v_date_to, v_id_from, v_id_to);
    CALL `ut`.`assert_eq`('2012-12-31 00:00:00', v_date_from);
    CALL `ut`.`assert_eq`('2999-12-31 23:59:59', v_date_to);
    CALL `ut`.`assert_eq`('0', v_id_from);
    CALL `ut`.`assert_eq`('4294967295', v_id_to);

    

    SET v_test_stage := '#3.0 - all NULL expect failure or being too vague';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        SET v_date_from := NULL;
        SET v_date_to := NULL;
        SET v_id_from := NULL;
        SET v_id_to := NULL;
        CALL `ddr_util`.`validate_ranges`(v_date_from, v_date_to, v_id_from, v_id_to);
        CALL `ut`.`fail_test`;
    END;

    

    SET v_test_stage := '#4.0 - overlapping dates should fail';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        SET v_date_from := '2012-12-31 00:00:00';
        SET v_date_to := '2012-01-01 23:59:59';
        SET v_id_from := NULL;
        SET v_id_to := NULL;
        CALL `ddr_util`.`validate_ranges`(v_date_from, v_date_to, v_id_from, v_id_to);
        CALL `ut`.`fail_test`;
    END;

    SET v_test_stage := '#4.1 - overlapping ids should fail';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        SET v_date_from := NULL;
        SET v_date_to := NULL;
        SET v_id_from := 2;
        SET v_id_to := 1;
        CALL `ddr_util`.`validate_ranges`(v_date_from, v_date_to, v_id_from, v_id_to);
        CALL `ut`.`fail_test`;
    END;

    
    
    SET v_test_stage := 'user teardown';

    
    SET v_test_stage := 'teardown';
    ROLLBACK;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST PASSED: ', c_module));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ut_vrm_fix` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `ut_vrm_fix`()
    NO SQL
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'ut_vrm_fix';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    
    DECLARE c_start_time DATETIME DEFAULT NOW(); 

    DECLARE v_is_test_failed BOOLEAN DEFAULT FALSE; 

    DECLARE v_test_stage VARCHAR(1024) DEFAULT '';

    

    
    DECLARE ut_generic_exc CONDITION FOR SQLSTATE '45000';
    DECLARE ut_assert_failed_exc CONDITION FOR SQLSTATE '45223';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        ROLLBACK;
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT_WS('|', 'UNIT TEST FAILED', v_test_stage, v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 1; 
        RESIGNAL;
    END;

    SET v_test_stage := 'setup';
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST STARTED: ', c_module));
    START TRANSACTION;

    
    SET v_test_stage := 'user setup';

    
    

    SET v_test_stage := '#1.0 - quality in, quality out';
    CALL `ut`.`assert_eq`('KRA353J', `ddr_util`.`vrm_fix`('KRA353J'));

    SET v_test_stage := '#1.1 - garbage in, quality out';
    CALL `ut`.`assert_eq`('KRA353J', `ddr_util`.`vrm_fix`(' KRA 353 j'));

    
    
    SET v_test_stage := 'user teardown';

    
    
    SET v_test_stage := 'teardown';
    ROLLBACK;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST PASSED: ', c_module));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Current Database: `ut`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `ut` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `ut`;

--
-- Dumping routines for database 'ut'
--
/*!50003 DROP PROCEDURE IF EXISTS `assert_eq` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `assert_eq`(p_expected TEXT, p_got TEXT)
    NO SQL
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE v_message VARCHAR(128) DEFAULT ''; 

    IF (p_expected IS NULL OR p_got IS NULL)
    THEN
        SIGNAL SQLSTATE '45223' SET MESSAGE_TEXT = 'One or both values are NULL';
    END IF;

    IF (p_expected != p_got)
    THEN
        SET v_message := CONCAT('Expected "', SUBSTR(p_expected, 1, 54), '" got "', SUBSTR(p_got, 1, 54), '"');
        SIGNAL SQLSTATE '45223' SET MESSAGE_TEXT = v_message;
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `assert_false` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `assert_false`(p_got BOOLEAN)
    NO SQL
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    IF (p_got IS NULL)
    THEN
        SIGNAL SQLSTATE '45223' SET MESSAGE_TEXT = 'Value is NULL';
    END IF;

    IF (p_got)
    THEN
        SIGNAL SQLSTATE '45223' SET MESSAGE_TEXT = 'Expected FALSE got TRUE';
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `assert_in` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `assert_in`(p_got TEXT, p_substr TEXT)
    NO SQL
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE v_message VARCHAR(128) DEFAULT ''; 
    DECLARE v_position INTEGER(5) UNSIGNED;

    IF (p_got IS NULL OR p_substr IS NULL)
    THEN
        SIGNAL SQLSTATE '45223' SET MESSAGE_TEXT = 'One or both values are NULL';
    END IF;

    SET v_position := INSTR(p_got, p_substr);
    IF (v_position = 0)
    THEN
        SET v_message := CONCAT('Expected "', SUBSTR(p_substr, 1, 50), '" not found in "', SUBSTR(p_got, 1, 50), '"');
        SIGNAL SQLSTATE '45223' SET MESSAGE_TEXT = v_message;
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `assert_ne` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `assert_ne`(p_expected TEXT, p_got TEXT)
    NO SQL
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE v_message VARCHAR(128) DEFAULT ''; 

    IF (p_expected IS NULL OR p_got IS NULL)
    THEN
        SIGNAL SQLSTATE '45223' SET MESSAGE_TEXT = 'One or both values are NULL';
    END IF;

    IF (p_expected = p_got)
    THEN
        SET v_message := CONCAT('Expected other than "', SUBSTR(p_expected, 1, 54), '" got same');
        SIGNAL SQLSTATE '45223' SET MESSAGE_TEXT = v_message;
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `assert_not_null` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `assert_not_null`(p_got TEXT)
    NO SQL
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    IF (p_got IS NULL)
    THEN
        SIGNAL SQLSTATE '45223' SET MESSAGE_TEXT = 'Expected NOT NULL got NULL';
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `assert_null` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `assert_null`(p_got TEXT)
    NO SQL
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    IF (p_got IS NOT NULL)
    THEN
        SIGNAL SQLSTATE '45223' SET MESSAGE_TEXT = 'Expected NULL got NOT NULL';
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `assert_true` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `assert_true`(p_got BOOLEAN)
    NO SQL
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    IF (p_got IS NULL)
    THEN
        SIGNAL SQLSTATE '45223' SET MESSAGE_TEXT = 'Value is NULL';
    END IF;

    IF (NOT p_got)
    THEN
        SIGNAL SQLSTATE '45223' SET MESSAGE_TEXT = 'Expected TRUE got FALSE';
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `fail_test` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `fail_test`()
    NO SQL
    SQL SECURITY INVOKER
BEGIN
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    SIGNAL SQLSTATE '45222' SET MESSAGE_TEXT = 'TEST FAILED';
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `run_tests` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `run_tests`(p_schema_pattern VARCHAR(64), p_proc_name_pattern VARCHAR(64))
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'run_tests';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    DECLARE c_ut VARCHAR(4) DEFAULT 'ut_';
    
    DECLARE c_routine_schema_like VARCHAR(64) DEFAULT CONCAT(c_ut, IF(IFNULL(p_schema_pattern, '')    LIKE 'ut_%', SUBSTR(p_schema_pattern, 4),    IFNULL(p_schema_pattern, '')), '%');
    DECLARE c_routine_name_like   VARCHAR(64) DEFAULT CONCAT(c_ut, IF(IFNULL(p_proc_name_pattern, '') LIKE 'ut_%', SUBSTR(p_proc_name_pattern, 4), IFNULL(p_proc_name_pattern, '')), '%');
    DECLARE c_start_time DATETIME DEFAULT NOW();

    DECLARE v_test_to_run VARCHAR(256) DEFAULT '';

    DECLARE v_routine_schema VARCHAR(64) DEFAULT NULL;
    DECLARE v_routine_name VARCHAR(64) DEFAULT NULL;
    DECLARE v_is_not_found BOOLEAN DEFAULT FALSE;
    DECLARE cur_stmt CURSOR FOR SELECT `ROUTINE_SCHEMA`, `ROUTINE_NAME`
                                  FROM `information_schema`.`ROUTINES`
                                 WHERE `ROUTINE_CATALOG` = 'def'
                                   AND `ROUTINE_TYPE` = 'PROCEDURE'
                                   AND `ROUTINE_SCHEMA` LIKE c_routine_schema_like
                                   AND `ROUTINE_NAME` LIKE c_routine_name_like
                                 ORDER BY `ROUTINE_SCHEMA`, `ROUTINE_NAME`;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_is_not_found = TRUE;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        DECLARE c_null CHAR(4) CHARACTER SET latin1 DEFAULT 'NULL';
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        CALL `ddr_util`.`logger`('error', c_module, CONCAT_WS('|', v_returned_sqlstate, v_message_text,
                                                              IFNULL(p_schema_pattern, c_null), 
                                                              IFNULL(p_proc_name_pattern, c_null),
                                                              CONCAT('Elapsed time: ', TIMEDIFF(NOW(), c_start_time))));
        ROLLBACK;
        SET FOREIGN_KEY_CHECKS = 1;
        RESIGNAL;
    END;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('Starting Tests at ', c_start_time));

    OPEN cur_stmt;
    REPEAT
        FETCH cur_stmt INTO v_routine_schema, v_routine_name;
        IF (NOT v_is_not_found)
        THEN
            SET v_test_to_run := `ddr_util`.`cat_table_refs`(v_routine_schema, v_routine_name);
            CALL `ddr_util`.`logger`('info', c_module, CONCAT('Running Test: ', v_test_to_run));
            CALL `ddr_util`.`prepare_then_execute_sql`(CONCAT('CALL ', v_test_to_run));
            ROLLBACK; 
            CALL `ddr_util`.`logger`('info', c_module, CONCAT(' Test Passed: ', v_test_to_run)); 
        END IF;
    UNTIL v_is_not_found END REPEAT;

    CLOSE cur_stmt;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('Finished Tests at ', c_start_time, '. Elapsed time: ', TIMEDIFF(NOW(), c_start_time)));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ut_skeleton_test` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `ut_skeleton_test`()
    MODIFIES SQL DATA
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'ut_skeleton_test';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    
    DECLARE c_start_time DATETIME DEFAULT NOW(); 

    DECLARE v_is_test_failed BOOLEAN DEFAULT FALSE; 

    DECLARE v_test_stage VARCHAR(1024) DEFAULT '';

    

    
    DECLARE ut_generic_exc CONDITION FOR SQLSTATE '45000';
    DECLARE ut_assert_failed_exc CONDITION FOR SQLSTATE '45223';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        ROLLBACK;
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT_WS('|', 'UNIT TEST FAILED', v_test_stage, v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 1; 
        RESIGNAL;
    END;

    SET v_test_stage := 'setup';
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST STARTED: ', c_module));
    START TRANSACTION;

    
    SET v_test_stage := 'user setup';

    
    

    SET v_test_stage := '#1.0 - quality in, quality out';
    CALL `ut`.`assert_eq`('ABC', `some_schema`.`somefunction`('ABC'));

    SET v_test_stage := '#1.1 - garbage in, quality out';
    CALL `ut`.`assert_eq`('ABC', `some_schema`.`somefunction`(' ABC '));

    

    SET v_test_stage := '#2.0 - pass garbage in, expect quality out';
    BEGIN
        DECLARE EXIT HANDLER FOR ut_generic_exc SET v_is_test_failed = TRUE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION BEGIN RESIGNAL; END;

        CALL `ut`.`assert_eq`('ABC', `some_schema`.`somefunction`('ABC')); 
        CALL `ut`.`fail_test`; 
    END;

    
    
    SET v_test_stage := 'user teardown';

    
    SET v_test_stage := 'teardown';
    ROLLBACK;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST PASSED: ', c_module));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Current Database: `ut_mot2`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `ut_mot2` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `ut_mot2`;

--
-- Dumping routines for database 'ut_mot2'
--
/*!50003 DROP PROCEDURE IF EXISTS `ut_f_collapse` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `ut_f_collapse`()
    NO SQL
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'ut_f_collapse';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    
    DECLARE c_start_time DATETIME DEFAULT NOW(); 

    DECLARE v_is_test_failed BOOLEAN DEFAULT FALSE; 

    DECLARE v_test_stage VARCHAR(1024) DEFAULT '';

    

    
    DECLARE ut_generic_exc CONDITION FOR SQLSTATE '45000';
    DECLARE ut_assert_failed_exc CONDITION FOR SQLSTATE '45223';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        ROLLBACK;
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT_WS('|', 'UNIT TEST FAILED', v_test_stage, v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 1; 
        RESIGNAL;
    END;

    SET v_test_stage := 'setup';
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST STARTED: ', c_module));
    START TRANSACTION;

    
    SET v_test_stage := 'user setup';

    
    

    SET v_test_stage := '#1.0 - replace all bad chars (and remove some of them)';
    CALL `ut`.`assert_eq`('0123456778', `mot2`.`f_collapse`('OIZEASGTLB-/. *'));

    SET v_test_stage := '#1.1 - replace bad chars in otherwise mostly okay VRM';
    CALL `ut`.`assert_eq`('Y7608YX', `mot2`.`f_collapse`('YT6OBYX'));

    
    
    SET v_test_stage := 'user teardown';

    
    SET v_test_stage := 'teardown';
    ROLLBACK;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST PASSED: ', c_module));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ut_f_collapse_base` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `ut_f_collapse_base`()
    NO SQL
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'ut_f_collapse_base';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    
    DECLARE c_start_time DATETIME DEFAULT NOW(); 

    DECLARE v_is_test_failed BOOLEAN DEFAULT FALSE; 

    DECLARE v_test_stage VARCHAR(1024) DEFAULT '';

    

    
    DECLARE ut_generic_exc CONDITION FOR SQLSTATE '45000';
    DECLARE ut_assert_failed_exc CONDITION FOR SQLSTATE '45223';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        ROLLBACK;
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT_WS('|', 'UNIT TEST FAILED', v_test_stage, v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 1; 
        RESIGNAL;
    END;

    SET v_test_stage := 'setup';
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST STARTED: ', c_module));
    START TRANSACTION;

    
    SET v_test_stage := 'user setup';

    
    

    SET v_test_stage := '#1.0 - replace all bad chars (and remove some of them)';
    CALL `ut`.`assert_eq`('0123456778', `mot2`.`f_collapse_base`('OIZEASGTLB-/. '));

    SET v_test_stage := '#1.1 - replace bad chars in otherwise mostly okay VRM';
    CALL `ut`.`assert_eq`('Y7608YX', `mot2`.`f_collapse_base`('YT6OBYX'));

    
    
    SET v_test_stage := 'user teardown';

    
    SET v_test_stage := 'teardown';
    ROLLBACK;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST PASSED: ', c_module));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ut_is_mot_trigger_disabled` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `ut_is_mot_trigger_disabled`()
    NO SQL
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'ut_is_mot_trigger_disabled';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    
    DECLARE c_start_time DATETIME DEFAULT NOW(); 

    DECLARE v_is_test_failed BOOLEAN DEFAULT FALSE; 

    DECLARE v_test_stage VARCHAR(1024) DEFAULT '';

    

    
    DECLARE ut_generic_exc CONDITION FOR SQLSTATE '45000';
    DECLARE ut_assert_failed_exc CONDITION FOR SQLSTATE '45223';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        ROLLBACK;
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT_WS('|', 'UNIT TEST FAILED', v_test_stage, v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 1; 
        RESIGNAL;
    END;

    SET v_test_stage := 'setup';
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST STARTED: ', c_module));
    START TRANSACTION;

    
    SET v_test_stage := 'user setup';

    
    

    SET v_test_stage := '#1.0 - @is_mot_trigger_disabled undefined';
    SET @is_mot_trigger_disabled := NULL;
    CALL `ut`.`assert_false`(`mot2`.`is_mot_trigger_disabled`());

    SET v_test_stage := '#1.1 - @is_mot_trigger_disabled FALSE';
    SET @is_mot_trigger_disabled := FALSE;
    CALL `ut`.`assert_false`(`mot2`.`is_mot_trigger_disabled`());

    SET v_test_stage := '#1.2 - @is_mot_trigger_disabled TRUE';
    SET @is_mot_trigger_disabled := TRUE;
    CALL `ut`.`assert_true`(`mot2`.`is_mot_trigger_disabled`());

    
    

    
    
    SET v_test_stage := 'user teardown';

    
    SET v_test_stage := 'teardown';
    ROLLBACK;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST PASSED: ', c_module));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ut_set_mot_trigger_disabled` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_ALL_TABLES' */ ;
DELIMITER ;;
CREATE  PROCEDURE `ut_set_mot_trigger_disabled`()
    NO SQL
    SQL SECURITY INVOKER
BEGIN
    
    DECLARE c_module VARCHAR(64) DEFAULT 'ut_set_mot_trigger_disabled';
    DECLARE c_version VARCHAR(256) DEFAULT '$Id: $';

    
    DECLARE c_start_time DATETIME DEFAULT NOW(); 

    DECLARE v_is_test_failed BOOLEAN DEFAULT FALSE; 

    DECLARE v_test_stage VARCHAR(1024) DEFAULT '';

    

    
    DECLARE ut_generic_exc CONDITION FOR SQLSTATE '45000';
    DECLARE ut_assert_failed_exc CONDITION FOR SQLSTATE '45223';

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        
        DECLARE v_returned_sqlstate, v_message_text VARCHAR(1024) DEFAULT '';
        GET DIAGNOSTICS CONDITION 1 v_returned_sqlstate = RETURNED_SQLSTATE, v_message_text = MESSAGE_TEXT;
        ROLLBACK;
        CALL `ddr_util`.`logger`('warn', c_module, CONCAT_WS('|', 'UNIT TEST FAILED', v_test_stage, v_returned_sqlstate, v_message_text));
        SET FOREIGN_KEY_CHECKS = 1; 
        RESIGNAL;
    END;

    SET v_test_stage := 'setup';
    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST STARTED: ', c_module));
    START TRANSACTION;

    
    SET v_test_stage := 'user setup';

    
    

    SET v_test_stage := '#1.0 - @is_mot_trigger_disabled FALSE';
    SET @is_mot_trigger_disabled := NULL;
    CALL `mot2`.`set_mot_trigger_disabled`(FALSE);
    CALL `ut`.`assert_false`(@is_mot_trigger_disabled);

    SET v_test_stage := '#1.1 - @is_mot_trigger_disabled TRUE';
    SET @is_mot_trigger_disabled := NULL;
    CALL `mot2`.`set_mot_trigger_disabled`(TRUE);
    CALL `ut`.`assert_true`(@is_mot_trigger_disabled);

    
    
    SET v_test_stage := 'user teardown';

    
    SET v_test_stage := 'teardown';
    ROLLBACK;

    CALL `ddr_util`.`logger`('warn', c_module, CONCAT('UNIT TEST PASSED: ', c_module));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Current Database: `mot2`
--

USE `mot2`;

--
-- Final view structure for view `vehicle_detail_vw`
--

/*!50001 DROP TABLE IF EXISTS `vehicle_detail_vw`*/;
/*!50001 DROP VIEW IF EXISTS `vehicle_detail_vw`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = latin1 */;
/*!50001 SET character_set_results     = latin1 */;
/*!50001 SET collation_connection      = latin1_swedish_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013  SQL SECURITY DEFINER */
/*!50001 VIEW `vehicle_detail_vw` AS select `v_`.`id` AS `vehicle_id_`,`v_`.`registration` AS `registration`,`v_`.`vin` AS `vin`,`mk_`.`id` AS `make_id_`,`mk_`.`name` AS `make_name_`,`mk_`.`code` AS `make_code_`,`mo_`.`id` AS `model_id_`,`mo_`.`name` AS `model_name_`,`mo_`.`code` AS `model_code_`,`md_`.`id` AS `model_detail_id_` from (((`vehicle` `v_` join `model_detail` `md_` on((`md_`.`id` = `v_`.`model_detail_id`))) join `model` `mo_` on((`mo_`.`id` = `md_`.`model_id`))) join `make` `mk_` on((`mk_`.`id` = `mo_`.`make_id`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Current Database: `ddr_util`
--

USE `ddr_util`;

--
-- Final view structure for view `log_vw`
--

/*!50001 DROP TABLE IF EXISTS `log_vw`*/;
/*!50001 DROP VIEW IF EXISTS `log_vw`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = latin1 */;
/*!50001 SET character_set_results     = latin1 */;
/*!50001 SET collation_connection      = latin1_swedish_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013  SQL SECURITY DEFINER */
/*!50001 VIEW `log_vw` AS select `ddr_logger`.`id` AS `id`,`ddr_logger`.`connection_id` AS `conn_`,`ddr_logger`.`log_level` AS `lvl_`,substr(`ddr_logger`.`log_timestamp`,12) AS `timestamp_`,`ddr_logger`.`log_module` AS `log_module`,substr(`ddr_logger`.`log_message`,1,148) AS `log_message_148_chars_` from `ddr_logger` order by `ddr_logger`.`id` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `table_row_count_vw`
--

/*!50001 DROP TABLE IF EXISTS `table_row_count_vw`*/;
/*!50001 DROP VIEW IF EXISTS `table_row_count_vw`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = latin1 */;
/*!50001 SET character_set_results     = latin1 */;
/*!50001 SET collation_connection      = latin1_swedish_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013  SQL SECURITY DEFINER */
/*!50001 VIEW `table_row_count_vw` AS select `src_`.`TABLE_NAME` AS `table_name`,lpad(format(`src_`.`CARDINALITY`,0),13,' ') AS `mot_v195_rel4 rows`,lpad(format(`tgt_`.`CARDINALITY`,0),13,' ') AS `mot2 rows`,lpad(ifnull(round(((`tgt_`.`CARDINALITY` / `src_`.`CARDINALITY`) * 100),0),''),4,' ') AS `mot2 as % of mot_v195_rel4` from (`information_schema`.`statistics` `src_` left join `information_schema`.`statistics` `tgt_` on((`tgt_`.`TABLE_NAME` = `src_`.`TABLE_NAME`))) where ((`src_`.`TABLE_SCHEMA` = 'mot_v195_rel4') and (`src_`.`INDEX_NAME` = 'PRIMARY') and (`tgt_`.`TABLE_SCHEMA` = 'mot2') and (`tgt_`.`INDEX_NAME` = 'PRIMARY')) order by `src_`.`TABLE_NAME` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `table_size_vw`
--

/*!50001 DROP TABLE IF EXISTS `table_size_vw`*/;
/*!50001 DROP VIEW IF EXISTS `table_size_vw`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = latin1 */;
/*!50001 SET character_set_results     = latin1 */;
/*!50001 SET collation_connection      = latin1_swedish_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013  SQL SECURITY DEFINER */
/*!50001 VIEW `table_size_vw` AS select `src_`.`TABLE_NAME` AS `TABLE_NAME`,round((((`src_`.`DATA_LENGTH` + `src_`.`INDEX_LENGTH`) / 1024) / 1024),2) AS `mot_v195_rel4 (MB)`,round((((`tgt_`.`DATA_LENGTH` + `tgt_`.`INDEX_LENGTH`) / 1024) / 1024),2) AS `mot2 (MB)`,if(((`src_`.`DATA_LENGTH` + `src_`.`INDEX_LENGTH`) < (`tgt_`.`DATA_LENGTH` + `tgt_`.`INDEX_LENGTH`)),'New is bigger','') AS `resulting_in_` from (`information_schema`.`TABLES` `src_` left join `information_schema`.`TABLES` `tgt_` on((`tgt_`.`TABLE_NAME` = `src_`.`TABLE_NAME`))) where ((`src_`.`TABLE_SCHEMA` = 'mot_v195_rel4') and (`tgt_`.`TABLE_SCHEMA` = 'mot2')) order by `src_`.`TABLE_NAME` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Current Database: `mot_refactor`
--

USE `mot_refactor`;

--
-- Current Database: `ut_ddr_util`
--

USE `ut_ddr_util`;

--
-- Current Database: `ut`
--

USE `ut`;

--
-- Current Database: `ut_mot2`
--

USE `ut_mot2`;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2016-07-04 16:40:12

